(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    453817,       9874]
NotebookOptionsPosition[    408611,       9253]
NotebookOutlinePosition[    409182,       9274]
CellTagsIndexPosition[    409139,       9271]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Epidemiology Compartmental Modeling Monad", "Title",
 CellChangeTimes->{{3.795431827027416*^9, 3.795431843241194*^9}, {
  3.795437046790509*^9, 3.795437047960137*^9}, {3.8126211757553883`*^9, 
  3.8126211760980864`*^9}, {3.818441110917139*^9, 3.8184411121098623`*^9}, {
  3.8184418221508217`*^9, 
  3.818441822717101*^9}},ExpressionUUID->"af369d77-dae9-4fbf-9427-\
a685b45eda56"],

Cell["Version 0.8", "Subtitle",
 CellChangeTimes->{{3.795435259811878*^9, 3.795435266403878*^9}, {
  3.8050176425375357`*^9, 3.805017643587669*^9}, {3.818531656309038*^9, 
  3.8185316567706127`*^9}},ExpressionUUID->"d9006083-bcef-4a22-9f93-\
e629a76d409d"],

Cell[TextData[{
 "Anton Antonov\n",
 ButtonBox["MathematicaForPrediction at WordPress",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://mathematicaforprediction.wordpress.com"], None},
  ButtonNote->"https://mathematicaforprediction.wordpress.com"],
 "\n",
 ButtonBox["SystemModeling at GitHub",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling"], None},
  ButtonNote->"https://github.com/antononcube/SystemModeling"],
 "\nApril 2020\nJuly 2020\nOctober 2020\nDecember 2020\nJanuary 2020"
}], "Text",
 CellChangeTimes->{{3.684459659869226*^9, 3.684459689296801*^9}, {
   3.6845155325985403`*^9, 3.684515567176887*^9}, {3.687635085972608*^9, 
   3.687635098019555*^9}, {3.690153303468515*^9, 3.690153309203142*^9}, {
   3.690153414663026*^9, 3.6901534372970753`*^9}, {3.706473708222974*^9, 
   3.706473716424033*^9}, {3.706473841222692*^9, 3.706473842266795*^9}, {
   3.706482165059485*^9, 3.7064821670616302`*^9}, {3.7064866859934*^9, 
   3.706486687262814*^9}, {3.723666493392177*^9, 3.723666498057164*^9}, {
   3.72912349199539*^9, 3.729123503883547*^9}, {3.7299623353036737`*^9, 
   3.729962337259548*^9}, {3.733651336175424*^9, 3.733651341928109*^9}, {
   3.734691456302718*^9, 3.734691459519575*^9}, {3.73893299111051*^9, 
   3.738932992256166*^9}, {3.740775193352*^9, 3.7407752000205193`*^9}, {
   3.741354450038199*^9, 3.741354454772191*^9}, {3.776198292660699*^9, 
   3.776198297408679*^9}, {3.776347745531959*^9, 3.776347749108109*^9}, {
   3.7878518821790524`*^9, 3.787851885553787*^9}, {3.788034305896751*^9, 
   3.78803435547268*^9}, {3.792079213702311*^9, 3.7920792145344*^9}, {
   3.795024664249124*^9, 3.795024672821122*^9}, 3.79517792429384*^9, {
   3.8050182704709167`*^9, 3.805018274622464*^9}, {3.812621181036306*^9, 
   3.81262118648168*^9}, {3.818421447756062*^9, 3.8184214506245413`*^9}, {
   3.818809382627363*^9, 
   3.818809385438754*^9}},ExpressionUUID->"3c49a53c-a8b1-4eef-b46e-\
c2f24dfcd5ef"],

Cell[CellGroupData[{

Cell["Introduction", "Section",
 CellChangeTimes->{{3.795431845974218*^9, 
  3.795431850958014*^9}},ExpressionUUID->"883232dc-0ffd-4c64-b93c-\
9e773cf82b42"],

Cell["\<\
In this document we describe the design and demonstrate the implementation of \
a (software programming) monad, [Wk1], for Epidemiology Compartmental \
Modeling (ECM) workflows specification and execution. The design and \
implementation are done with Mathematica / Wolfram Language (WL). A very \
similar implementation is also done in R.\
\>", "Text",
 CellChangeTimes->{{3.729963069656266*^9, 3.729963077282846*^9}, {
  3.729963173392886*^9, 3.7299632301500397`*^9}, {3.734605693822016*^9, 
  3.734605736525889*^9}, {3.7353248385612926`*^9, 3.735324838583312*^9}, {
  3.7389329972746143`*^9, 3.7389330038778*^9}, {3.739209646121956*^9, 
  3.739209646127614*^9}, {3.742053808940496*^9, 3.7420538187664413`*^9}, {
  3.776354597402515*^9, 3.776354639940496*^9}, {3.7766754220113792`*^9, 
  3.776675423136685*^9}, {3.776676622133882*^9, 3.776676626509841*^9}, {
  3.812650412279049*^9, 3.812650415865909*^9}, {3.818441131966876*^9, 
  3.818441133192276*^9}, {3.81844182729538*^9, 3.818441839355801*^9}, {
  3.818548411626957*^9, 
  3.818548428648409*^9}},ExpressionUUID->"9400e87f-e6de-4e31-a54d-\
daa2143a34f1"],

Cell[TextData[{
 "Monad\[CloseCurlyQuote]s name is \[OpenCurlyDoubleQuote]ECMMon\
\[CloseCurlyDoubleQuote], which stands for \[OpenCurlyDoubleQuote]",
 StyleBox["E",
  FontWeight->"Bold"],
 "pidemiology ",
 StyleBox["C",
  FontWeight->"Bold"],
 "ompartmental ",
 StyleBox["M",
  FontWeight->"Bold"],
 "odeling ",
 StyleBox["Mon",
  FontWeight->"Bold"],
 "ad\[CloseCurlyDoubleQuote], and its monadic implementation is based on the \
State monad package ",
 ButtonBox["\[OpenCurlyDoubleQuote]StateMonadCodeGenerator.m\
\[CloseCurlyDoubleQuote]",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/MathematicaForPrediction/blob/master/\
MonadicProgramming/StateMonadCodeGenerator.m"], None},
  ButtonNote->
   "https://github.com/antononcube/MathematicaForPrediction/blob/master/\
MonadicProgramming/StateMonadCodeGenerator.m"],
 ", [",
 ButtonBox["AAp1",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/MathematicaForPrediction/blob/master/\
MonadicProgramming/StateMonadCodeGenerator.m"], None},
  ButtonNote->
   "https://github.com/antononcube/MathematicaForPrediction/blob/master/\
MonadicProgramming/StateMonadCodeGenerator.m"],
 ", ",
 ButtonBox["AA1",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/MathematicaForPrediction/blob/master/\
MarkdownDocuments/Monad-code-generation-and-extension.md"], None},
  ButtonNote->
   "https://github.com/antononcube/MathematicaForPrediction/blob/master/\
MarkdownDocuments/Monad-code-generation-and-extension.md"],
 "], \n",
 StyleBox["ECMMon", "Program"],
 " is implemented in the package [",
 ButtonBox["AAp8",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling/blob/master/Projects/\
Coronavirus-propagation-dynamics/WL/MonadicEpidemiologyCompartmentalModeling.\
m"], None},
  ButtonNote->
   "https://github.com/antononcube/SystemModeling/blob/master/Projects/\
Coronavirus-propagation-dynamics/WL/MonadicEpidemiologyCompartmentalModeling.\
m"],
 "], which relies on the packages [AAp3-AAp6]. The original ECM workflow \
discussed in [AA5] was implemented in [AAp7]. An R implementation of ECMMon \
is provided by the package [",
 ButtonBox["AAr2",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/ECMMon-R"], None},
  ButtonNote->"https://github.com/antononcube/ECMMon-R"],
 "]."
}], "Text",
 CellChangeTimes->{{3.812650440011423*^9, 3.812650484123775*^9}, {
   3.812650538909492*^9, 3.812650611293302*^9}, {3.812650658037715*^9, 
   3.812650741862962*^9}, {3.812650868721324*^9, 3.812650874930431*^9}, {
   3.812651080883362*^9, 3.81265108088549*^9}, 3.818536064392084*^9, {
   3.818547926262787*^9, 3.818547926625679*^9}, {3.818548405612344*^9, 
   3.8185484099404573`*^9}, {3.818804645648849*^9, 
   3.818804677409954*^9}},ExpressionUUID->"b4a27732-a6b4-4341-842e-\
e52ea84c8780"],

Cell["\<\
The goal of the monad design is to make the specification of ECM workflows \
(relatively) easy and straightforward by following a certain main scenario \
and specifying variations over that scenario.\
\>", "Text",
 CellChangeTimes->{{3.733424346363296*^9, 3.733424479284396*^9}, {
   3.7346057562607937`*^9, 3.734605759982778*^9}, {3.738933011223675*^9, 
   3.738933026884769*^9}, {3.742054038547791*^9, 3.7420540692730913`*^9}, {
   3.742054110932645*^9, 3.742054207356192*^9}, {3.7420543448211403`*^9, 
   3.742054352066297*^9}, {3.7763546557683496`*^9, 3.776354658433793*^9}, {
   3.776355634073926*^9, 3.776355653052435*^9}, {3.777372230552061*^9, 
   3.7773722344617863`*^9}, {3.812650365004611*^9, 3.8126503756689663`*^9}, 
   3.8126510990227737`*^9, 
   3.818547968680965*^9},ExpressionUUID->"d1d3cd68-7daa-41ad-a69e-\
b54978ca99a8"],

Cell[TextData[{
 StyleBox["Remark:",
  FontWeight->"Bold"],
 " We use real-life COVID-19 data, The New York Times COVID-19 data, see \
[NYT1, AA6], but the presented results and outcome plots are for illustration \
purposes only. A rigorous study with discussions of the related assumptions \
and conclusions is beyond the scope of this notebook/document."
}], "Text",
 CellChangeTimes->{{3.818532801535726*^9, 3.818532981199486*^9}, {
  3.818807722334394*^9, 3.8188077801596317`*^9}, {3.8188703086691437`*^9, 
  3.8188703174648123`*^9}, {3.818892190771152*^9, 
  3.8188921917827177`*^9}},ExpressionUUID->"f18464ab-8b42-427d-bf9e-\
587b76ae6b73"],

Cell[TextData[{
 "The monadic programming design is used as a ",
 ButtonBox["Software Design Pattern",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://en.wikipedia.org/wiki/Software_design_pattern"], None},
  ButtonNote->"https://en.wikipedia.org/wiki/Software_design_pattern"],
 ". The ECM",
 StyleBox["Mon", "Program"],
 " monad can be also seen as a ",
 ButtonBox["Domain Specific Language",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://en.wikipedia.org/wiki/Domain-specific_language"], None},
  ButtonNote->"https://en.wikipedia.org/wiki/Domain-specific_language"],
 " (DSL) for the specification and programming of ECM workflows.  "
}], "Text",
 CellChangeTimes->{{3.734128085906904*^9, 3.7341282116281776`*^9}, {
  3.734128250857126*^9, 3.734128278453511*^9}, {3.734128532191946*^9, 
  3.734128534407834*^9}, {3.734605928546863*^9, 3.7346059476585484`*^9}, {
  3.738933125145014*^9, 3.738933127078704*^9}, {3.739209679436602*^9, 
  3.739209679772024*^9}, {3.776356296733431*^9, 3.7763562981847878`*^9}, {
  3.818547949263303*^9, 3.81854795123417*^9}, {3.818548452376642*^9, 
  3.818548481209607*^9}},ExpressionUUID->"072c2e87-260c-4f94-b058-\
1f73ca79f20c"],

Cell["\<\
Here is an example of using the ECMMon monad over a compartmental model with \
two types of infected populations:\
\>", "Text",
 CellChangeTimes->{{3.812652192708687*^9, 
  3.812652242007944*^9}},ExpressionUUID->"f3c509ac-9fea-4945-adc4-\
4e2256790b12"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       StyleBox[
        TagBox[
         RowBox[{"ECMMonUnit", "[", 
           RowBox[{"SEI2RModel", "[", "t", "]"}], "]"}], HoldForm], "Input", 
        StripOnInput -> False], 
       StyleBox[
       "\"\[ThinSpace]\[DoubleLongRightArrow]\"", "Input", StripOnInput -> 
        False]},
      "RowDefault"], 
     StyleBox["\<\"Lift a model to the monad\"\>",
      StripOnInput->False,
      ShowAutoStyles->False,
      ShowSyntaxStyles->False,
      TranslationOptions->{"Enabled"->False},
      AutoNumberFormatting->False,
      FontWeight->"Normal",
      FontColor->RGBColor[0.27, 0.58, 0.68]]},
    {
     TemplateBox[{"\"  \"", 
       StyleBox[
        TagBox[
         RowBox[{"ECMMonEchoModelGridTableForm", "[", "]"}], HoldForm], 
        "Input", StripOnInput -> False], 
       StyleBox[
       "\"\[ThinSpace]\[DoubleLongRightArrow]\"", "Input", StripOnInput -> 
        False]},
      "RowDefault"], 
     StyleBox["\<\"Show the default model\"\>",
      StripOnInput->False,
      ShowAutoStyles->False,
      ShowSyntaxStyles->False,
      TranslationOptions->{"Enabled"->False},
      AutoNumberFormatting->False,
      FontWeight->"Normal",
      FontColor->RGBColor[0.27, 0.58, 0.68]]},
    {
     TemplateBox[{"\"  \"", 
       StyleBox[
        TagBox[
         RowBox[{"ECMMonAssignInitialConditions", "[", 
           RowBox[{"\[LeftAssociation]", 
             RowBox[{
               RowBox[{
                 RowBox[{"TP", "[", "0", "]"}], "\[Rule]", "10000000"}], ",", 
               
               RowBox[{
                 RowBox[{"SP", "[", "0", "]"}], "\[Rule]", "9999900"}], ",", 
               RowBox[{
                 RowBox[{"ISSP", "[", "0", "]"}], "\[Rule]", "100"}]}], 
             "\[RightAssociation]"}], "]"}], HoldForm], "Input", StripOnInput -> 
        False], 
       StyleBox[
       "\"\[ThinSpace]\[DoubleLongRightArrow]\"", "Input", StripOnInput -> 
        False]},
      "RowDefault"], 
     StyleBox["\<\"Set model parameters\"\>",
      StripOnInput->False,
      ShowAutoStyles->False,
      ShowSyntaxStyles->False,
      TranslationOptions->{"Enabled"->False},
      AutoNumberFormatting->False,
      FontWeight->"Normal",
      FontColor->RGBColor[0.27, 0.58, 0.68]]},
    {
     TemplateBox[{"\"  \"", 
       StyleBox[
        TagBox[
         RowBox[{"ECMMonAssignRateRules", "[", 
           RowBox[{"\[LeftAssociation]", 
             RowBox[{
               RowBox[{
                 RowBox[{"\[Beta]", "[", "ISSP", "]"}], "\[Rule]", "0.2`"}], 
               ",", 
               RowBox[{
                 RowBox[{"\[Beta]", "[", "INSP", "]"}], "\[Rule]", "0.6`"}]}],
              "\[RightAssociation]"}], "]"}], HoldForm], "Input", 
        StripOnInput -> False], 
       StyleBox[
       "\"\[ThinSpace]\[DoubleLongRightArrow]\"", "Input", StripOnInput -> 
        False]},
      "RowDefault"], 
     StyleBox["\<\"Set model parameters\"\>",
      StripOnInput->False,
      ShowAutoStyles->False,
      ShowSyntaxStyles->False,
      TranslationOptions->{"Enabled"->False},
      AutoNumberFormatting->False,
      FontWeight->"Normal",
      FontColor->RGBColor[0.27, 0.58, 0.68]]},
    {
     TemplateBox[{"\"  \"", 
       StyleBox[
        TagBox[
         RowBox[{"ECMMonSimulate", "[", "120", "]"}], HoldForm], "Input", 
        StripOnInput -> False], 
       StyleBox[
       "\"\[ThinSpace]\[DoubleLongRightArrow]\"", "Input", StripOnInput -> 
        False]},
      "RowDefault"], 
     StyleBox["\<\"Simulate for 120 days\"\>",
      StripOnInput->False,
      ShowAutoStyles->False,
      ShowSyntaxStyles->False,
      TranslationOptions->{"Enabled"->False},
      AutoNumberFormatting->False,
      FontWeight->"Normal",
      FontColor->RGBColor[0.27, 0.58, 0.68]]},
    {
     TemplateBox[{"\"  \"", 
       StyleBox[
        TagBox[
         RowBox[{"ECMMonPlotSolutions", "[", 
           RowBox[{
             RowBox[{"__", "~~", "\"\\\"Population\\\"\""}], ",", "120", ",", 
             
             RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], HoldForm], 
        "Input", StripOnInput -> False]},
      "RowDefault"], 
     StyleBox["\<\"Plot simulation results\"\>",
      StripOnInput->False,
      ShowAutoStyles->False,
      ShowSyntaxStyles->False,
      TranslationOptions->{"Enabled"->False},
      AutoNumberFormatting->False,
      FontWeight->"Normal",
      FontColor->RGBColor[0.27, 0.58, 0.68]]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxDividers->{"Columns" -> {{None}}, "Rows" -> {{None}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 Editable->False,
 CellChangeTimes->{3.812652128111931*^9},
 CellLabel->
  "Out[162]=",ExpressionUUID->"5ffd297b-c580-420c-b625-07e48a1df709"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Stocks\"\>", "\[Rule]", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"#\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["\<\"Symbol\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["\<\"Description\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {"1", 
        RowBox[{"TP", "[", "t", "]"}], "\<\"Total Population\"\>"},
       {"2", 
        RowBox[{"SP", "[", "t", "]"}], "\<\"Susceptible Population\"\>"},
       {"3", 
        RowBox[{"EP", "[", "t", "]"}], "\<\"Exposed Population\"\>"},
       {"4", 
        RowBox[{
        "INSP", "[", "t", 
         "]"}], "\<\"Infected Normally Symptomatic Population\"\>"},
       {"5", 
        RowBox[{
        "ISSP", "[", "t", 
         "]"}], "\<\"Infected Severely Symptomatic Population\"\>"},
       {"6", 
        RowBox[{"RP", "[", "t", "]"}], "\<\"Recovered Population\"\>"},
       {"7", 
        RowBox[{"MLP", "[", "t", "]"}], "\<\"Money of Lost Productivity\"\>"}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96]}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {
         1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 4 -> 
          GrayLevel[0.8], 4 -> GrayLevel[0]}, 
        "Rows" -> {True, True, {False}, True}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Grid"]}], ",", 
   RowBox[{"\<\"Rates\"\>", "\[Rule]", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"#\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["\<\"Symbol\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["\<\"Description\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {"1", 
        RowBox[{"\[Mu]", "[", "TP", "]"}], "\<\"Population death rate\"\>"},
       {"2", 
        RowBox[{
        "\[Mu]", "[", "INSP", 
         "]"}], "\<\"Infected Normally Symptomatic Population death rate\"\>"},
       {"3", 
        RowBox[{
        "\[Mu]", "[", "ISSP", 
         "]"}], "\<\"Infected Severely Symptomatic Population death rate\"\>"},
       {"4", 
        RowBox[{
        "sspf", "[", "SP", 
         "]"}], "\<\"Severely Symptomatic Population Fraction\"\>"},
       {"5", 
        RowBox[{
        "\[Beta]", "[", "INSP", 
         "]"}], "\<\"Contact rate for the infected normally symptomatic \
population\"\>"},
       {"6", 
        RowBox[{
        "\[Beta]", "[", "ISSP", 
         "]"}], "\<\"Contact rate for the infected severely symptomatic \
population\"\>"},
       {"7", "aip", "\<\"Average infectious period\"\>"},
       {"8", "aincp", "\<\"Average incubation period\"\>"},
       {"9", 
        RowBox[{"lpcr", "[", 
         RowBox[{"ISSP", ",", "INSP"}], 
         "]"}], "\<\"Lost productivity cost rate (per person per day)\"\>"}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96]}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {
         1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 4 -> 
          GrayLevel[0.8], 4 -> GrayLevel[0]}, 
        "Rows" -> {True, True, {False}, True}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Grid"]}], ",", 
   RowBox[{"\<\"Equations\"\>", "\[Rule]", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"#\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["\<\"Equation\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {"1", 
        RowBox[{
         RowBox[{
          SuperscriptBox["SP", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"SP", "[", "t", "]"}],
                "\"Susceptible Population\"",
                TooltipStyle->"TextStyling"],
               Annotation[#, "Susceptible Population", "Tooltip"]& ],
              "\"Susceptible Population\"",
              TooltipStyle->"TextStyling"],
             Annotation[#, "Susceptible Population", "Tooltip"]& ]}], " ", 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"\[Mu]", "[", "TP", "]"}],
               "\"Population death rate\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Population death rate", "Tooltip"]& ],
             "\"Population death rate\"",
             TooltipStyle->"TextStyling"],
            Annotation[#, "Population death rate", "Tooltip"]& ]}], "-", 
          FractionBox[
           RowBox[{
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"INSP", "[", "t", "]"}],
                "\"Infected Normally Symptomatic Population\"",
                TooltipStyle->"TextStyling"],
               
               Annotation[#, "Infected Normally Symptomatic Population", 
                "Tooltip"]& ],
              "\"Infected Normally Symptomatic Population\"",
              TooltipStyle->"TextStyling"],
             
             Annotation[#, "Infected Normally Symptomatic Population", 
              "Tooltip"]& ], " ", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"SP", "[", "t", "]"}],
                "\"Susceptible Population\"",
                TooltipStyle->"TextStyling"],
               Annotation[#, "Susceptible Population", "Tooltip"]& ],
              "\"Susceptible Population\"",
              TooltipStyle->"TextStyling"],
             Annotation[#, "Susceptible Population", "Tooltip"]& ], " ", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"\[Beta]", "[", "INSP", "]"}],
                
                "\"Contact rate for the infected normally symptomatic \
population\"",
                TooltipStyle->"TextStyling"],
               
               Annotation[#, 
                "Contact rate for the infected normally symptomatic \
population", "Tooltip"]& ],
              
              "\"Contact rate for the infected normally symptomatic \
population\"",
              TooltipStyle->"TextStyling"],
             
             Annotation[#, 
              "Contact rate for the infected normally symptomatic population",
               "Tooltip"]& ]}], 
           RowBox[{"TP", "[", "0", "]"}]], "-", 
          FractionBox[
           RowBox[{
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"ISSP", "[", "t", "]"}],
                "\"Infected Severely Symptomatic Population\"",
                TooltipStyle->"TextStyling"],
               
               Annotation[#, "Infected Severely Symptomatic Population", 
                "Tooltip"]& ],
              "\"Infected Severely Symptomatic Population\"",
              TooltipStyle->"TextStyling"],
             
             Annotation[#, "Infected Severely Symptomatic Population", 
              "Tooltip"]& ], " ", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"SP", "[", "t", "]"}],
                "\"Susceptible Population\"",
                TooltipStyle->"TextStyling"],
               Annotation[#, "Susceptible Population", "Tooltip"]& ],
              "\"Susceptible Population\"",
              TooltipStyle->"TextStyling"],
             Annotation[#, "Susceptible Population", "Tooltip"]& ], " ", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"\[Beta]", "[", "ISSP", "]"}],
                
                "\"Contact rate for the infected severely symptomatic \
population\"",
                TooltipStyle->"TextStyling"],
               
               Annotation[#, 
                "Contact rate for the infected severely symptomatic \
population", "Tooltip"]& ],
              
              "\"Contact rate for the infected severely symptomatic \
population\"",
              TooltipStyle->"TextStyling"],
             
             Annotation[#, 
              "Contact rate for the infected severely symptomatic population",
               "Tooltip"]& ]}], 
           RowBox[{"TP", "[", "0", "]"}]]}]}]},
       {"2", 
        RowBox[{
         RowBox[{
          SuperscriptBox["EP", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"EP", "[", "t", "]"}],
                "\"Exposed Population\"",
                TooltipStyle->"TextStyling"],
               Annotation[#, "Exposed Population", "Tooltip"]& ],
              "\"Exposed Population\"",
              TooltipStyle->"TextStyling"],
             Annotation[#, "Exposed Population", "Tooltip"]& ]}], " ", 
           RowBox[{"(", 
            RowBox[{
             FractionBox["1", 
              TagBox[
               TooltipBox[
                TagBox[
                 TooltipBox["aincp",
                  "\"Average incubation period\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Average incubation period", "Tooltip"]& ],
                "\"Average incubation period\"",
                TooltipStyle->"TextStyling"],
               Annotation[#, "Average incubation period", "Tooltip"]& ]], "+", 
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"\[Mu]", "[", "TP", "]"}],
                 "\"Population death rate\"",
                 TooltipStyle->"TextStyling"],
                Annotation[#, "Population death rate", "Tooltip"]& ],
               "\"Population death rate\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Population death rate", "Tooltip"]& ]}], ")"}]}],
           "+", 
          FractionBox[
           RowBox[{
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"INSP", "[", "t", "]"}],
                "\"Infected Normally Symptomatic Population\"",
                TooltipStyle->"TextStyling"],
               
               Annotation[#, "Infected Normally Symptomatic Population", 
                "Tooltip"]& ],
              "\"Infected Normally Symptomatic Population\"",
              TooltipStyle->"TextStyling"],
             
             Annotation[#, "Infected Normally Symptomatic Population", 
              "Tooltip"]& ], " ", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"SP", "[", "t", "]"}],
                "\"Susceptible Population\"",
                TooltipStyle->"TextStyling"],
               Annotation[#, "Susceptible Population", "Tooltip"]& ],
              "\"Susceptible Population\"",
              TooltipStyle->"TextStyling"],
             Annotation[#, "Susceptible Population", "Tooltip"]& ], " ", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"\[Beta]", "[", "INSP", "]"}],
                
                "\"Contact rate for the infected normally symptomatic \
population\"",
                TooltipStyle->"TextStyling"],
               
               Annotation[#, 
                "Contact rate for the infected normally symptomatic \
population", "Tooltip"]& ],
              
              "\"Contact rate for the infected normally symptomatic \
population\"",
              TooltipStyle->"TextStyling"],
             
             Annotation[#, 
              "Contact rate for the infected normally symptomatic population",
               "Tooltip"]& ]}], 
           RowBox[{"TP", "[", "0", "]"}]], "+", 
          FractionBox[
           RowBox[{
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"ISSP", "[", "t", "]"}],
                "\"Infected Severely Symptomatic Population\"",
                TooltipStyle->"TextStyling"],
               
               Annotation[#, "Infected Severely Symptomatic Population", 
                "Tooltip"]& ],
              "\"Infected Severely Symptomatic Population\"",
              TooltipStyle->"TextStyling"],
             
             Annotation[#, "Infected Severely Symptomatic Population", 
              "Tooltip"]& ], " ", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"SP", "[", "t", "]"}],
                "\"Susceptible Population\"",
                TooltipStyle->"TextStyling"],
               Annotation[#, "Susceptible Population", "Tooltip"]& ],
              "\"Susceptible Population\"",
              TooltipStyle->"TextStyling"],
             Annotation[#, "Susceptible Population", "Tooltip"]& ], " ", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"\[Beta]", "[", "ISSP", "]"}],
                
                "\"Contact rate for the infected severely symptomatic \
population\"",
                TooltipStyle->"TextStyling"],
               
               Annotation[#, 
                "Contact rate for the infected severely symptomatic \
population", "Tooltip"]& ],
              
              "\"Contact rate for the infected severely symptomatic \
population\"",
              TooltipStyle->"TextStyling"],
             
             Annotation[#, 
              "Contact rate for the infected severely symptomatic population",
               "Tooltip"]& ]}], 
           RowBox[{"TP", "[", "0", "]"}]]}]}]},
       {"3", 
        RowBox[{
         RowBox[{
          SuperscriptBox["INSP", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"INSP", "[", "t", "]"}],
                "\"Infected Normally Symptomatic Population\"",
                TooltipStyle->"TextStyling"],
               
               Annotation[#, "Infected Normally Symptomatic Population", 
                "Tooltip"]& ],
              "\"Infected Normally Symptomatic Population\"",
              TooltipStyle->"TextStyling"],
             
             Annotation[#, "Infected Normally Symptomatic Population", 
              "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox["aip",
                "\"Average infectious period\"",
                TooltipStyle->"TextStyling"],
               Annotation[#, "Average infectious period", "Tooltip"]& ],
              "\"Average infectious period\"",
              TooltipStyle->"TextStyling"],
             Annotation[#, "Average infectious period", "Tooltip"]& ]]}], "+", 
          FractionBox[
           RowBox[{
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"EP", "[", "t", "]"}],
                "\"Exposed Population\"",
                TooltipStyle->"TextStyling"],
               Annotation[#, "Exposed Population", "Tooltip"]& ],
              "\"Exposed Population\"",
              TooltipStyle->"TextStyling"],
             Annotation[#, "Exposed Population", "Tooltip"]& ], " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              TagBox[
               TooltipBox[
                TagBox[
                 TooltipBox[
                  RowBox[{"sspf", "[", "SP", "]"}],
                  "\"Severely Symptomatic Population Fraction\"",
                  TooltipStyle->"TextStyling"],
                 
                 Annotation[#, "Severely Symptomatic Population Fraction", 
                  "Tooltip"]& ],
                "\"Severely Symptomatic Population Fraction\"",
                TooltipStyle->"TextStyling"],
               
               Annotation[#, "Severely Symptomatic Population Fraction", 
                "Tooltip"]& ]}], ")"}]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox["aincp",
               "\"Average incubation period\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Average incubation period", "Tooltip"]& ],
             "\"Average incubation period\"",
             TooltipStyle->"TextStyling"],
            Annotation[#, "Average incubation period", "Tooltip"]& ]], "-", 
          RowBox[{
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"INSP", "[", "t", "]"}],
               "\"Infected Normally Symptomatic Population\"",
               TooltipStyle->"TextStyling"],
              
              Annotation[#, "Infected Normally Symptomatic Population", 
               "Tooltip"]& ],
             "\"Infected Normally Symptomatic Population\"",
             TooltipStyle->"TextStyling"],
            
            Annotation[#, "Infected Normally Symptomatic Population", 
             "Tooltip"]& ], " ", 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"\[Mu]", "[", "INSP", "]"}],
               "\"Infected Normally Symptomatic Population death rate\"",
               TooltipStyle->"TextStyling"],
              
              Annotation[#, 
               "Infected Normally Symptomatic Population death rate", 
               "Tooltip"]& ],
             "\"Infected Normally Symptomatic Population death rate\"",
             TooltipStyle->"TextStyling"],
            
            Annotation[#, 
             "Infected Normally Symptomatic Population death rate", 
             "Tooltip"]& ]}]}]}]},
       {"4", 
        RowBox[{
         RowBox[{
          SuperscriptBox["ISSP", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"ISSP", "[", "t", "]"}],
                "\"Infected Severely Symptomatic Population\"",
                TooltipStyle->"TextStyling"],
               
               Annotation[#, "Infected Severely Symptomatic Population", 
                "Tooltip"]& ],
              "\"Infected Severely Symptomatic Population\"",
              TooltipStyle->"TextStyling"],
             
             Annotation[#, "Infected Severely Symptomatic Population", 
              "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox["aip",
                "\"Average infectious period\"",
                TooltipStyle->"TextStyling"],
               Annotation[#, "Average infectious period", "Tooltip"]& ],
              "\"Average infectious period\"",
              TooltipStyle->"TextStyling"],
             Annotation[#, "Average infectious period", "Tooltip"]& ]]}], "+", 
          FractionBox[
           RowBox[{
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"EP", "[", "t", "]"}],
                "\"Exposed Population\"",
                TooltipStyle->"TextStyling"],
               Annotation[#, "Exposed Population", "Tooltip"]& ],
              "\"Exposed Population\"",
              TooltipStyle->"TextStyling"],
             Annotation[#, "Exposed Population", "Tooltip"]& ], " ", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"sspf", "[", "SP", "]"}],
                "\"Severely Symptomatic Population Fraction\"",
                TooltipStyle->"TextStyling"],
               
               Annotation[#, "Severely Symptomatic Population Fraction", 
                "Tooltip"]& ],
              "\"Severely Symptomatic Population Fraction\"",
              TooltipStyle->"TextStyling"],
             
             Annotation[#, "Severely Symptomatic Population Fraction", 
              "Tooltip"]& ]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox["aincp",
               "\"Average incubation period\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Average incubation period", "Tooltip"]& ],
             "\"Average incubation period\"",
             TooltipStyle->"TextStyling"],
            Annotation[#, "Average incubation period", "Tooltip"]& ]], "-", 
          RowBox[{
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"ISSP", "[", "t", "]"}],
               "\"Infected Severely Symptomatic Population\"",
               TooltipStyle->"TextStyling"],
              
              Annotation[#, "Infected Severely Symptomatic Population", 
               "Tooltip"]& ],
             "\"Infected Severely Symptomatic Population\"",
             TooltipStyle->"TextStyling"],
            
            Annotation[#, "Infected Severely Symptomatic Population", 
             "Tooltip"]& ], " ", 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"\[Mu]", "[", "ISSP", "]"}],
               "\"Infected Severely Symptomatic Population death rate\"",
               TooltipStyle->"TextStyling"],
              
              Annotation[#, 
               "Infected Severely Symptomatic Population death rate", 
               "Tooltip"]& ],
             "\"Infected Severely Symptomatic Population death rate\"",
             TooltipStyle->"TextStyling"],
            
            Annotation[#, 
             "Infected Severely Symptomatic Population death rate", 
             "Tooltip"]& ]}]}]}]},
       {"5", 
        RowBox[{
         RowBox[{
          SuperscriptBox["RP", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          FractionBox[
           RowBox[{
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"INSP", "[", "t", "]"}],
                "\"Infected Normally Symptomatic Population\"",
                TooltipStyle->"TextStyling"],
               
               Annotation[#, "Infected Normally Symptomatic Population", 
                "Tooltip"]& ],
              "\"Infected Normally Symptomatic Population\"",
              TooltipStyle->"TextStyling"],
             
             Annotation[#, "Infected Normally Symptomatic Population", 
              "Tooltip"]& ], "+", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"ISSP", "[", "t", "]"}],
                "\"Infected Severely Symptomatic Population\"",
                TooltipStyle->"TextStyling"],
               
               Annotation[#, "Infected Severely Symptomatic Population", 
                "Tooltip"]& ],
              "\"Infected Severely Symptomatic Population\"",
              TooltipStyle->"TextStyling"],
             
             Annotation[#, "Infected Severely Symptomatic Population", 
              "Tooltip"]& ]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox["aip",
               "\"Average infectious period\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Average infectious period", "Tooltip"]& ],
             "\"Average infectious period\"",
             TooltipStyle->"TextStyling"],
            Annotation[#, "Average infectious period", "Tooltip"]& ]], "-", 
          RowBox[{
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"RP", "[", "t", "]"}],
               "\"Recovered Population\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Recovered Population", "Tooltip"]& ],
             "\"Recovered Population\"",
             TooltipStyle->"TextStyling"],
            Annotation[#, "Recovered Population", "Tooltip"]& ], " ", 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"\[Mu]", "[", "TP", "]"}],
               "\"Population death rate\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Population death rate", "Tooltip"]& ],
             "\"Population death rate\"",
             TooltipStyle->"TextStyling"],
            Annotation[#, "Population death rate", "Tooltip"]& ]}]}]}]},
       {"6", 
        RowBox[{
         RowBox[{
          SuperscriptBox["MLP", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          TagBox[
           TooltipBox[
            TagBox[
             TooltipBox[
              RowBox[{"lpcr", "[", 
               RowBox[{"ISSP", ",", "INSP"}], "]"}],
              "\"Lost productivity cost rate (per person per day)\"",
              TooltipStyle->"TextStyling"],
             
             Annotation[#, "Lost productivity cost rate (per person per day)",
               "Tooltip"]& ],
            "\"Lost productivity cost rate (per person per day)\"",
            TooltipStyle->"TextStyling"],
           
           Annotation[#, "Lost productivity cost rate (per person per day)", 
            "Tooltip"]& ], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"RP", "[", "t", "]"}],
                 "\"Recovered Population\"",
                 TooltipStyle->"TextStyling"],
                Annotation[#, "Recovered Population", "Tooltip"]& ],
               "\"Recovered Population\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Recovered Population", "Tooltip"]& ]}], "-", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"SP", "[", "t", "]"}],
                "\"Susceptible Population\"",
                TooltipStyle->"TextStyling"],
               Annotation[#, "Susceptible Population", "Tooltip"]& ],
              "\"Susceptible Population\"",
              TooltipStyle->"TextStyling"],
             Annotation[#, "Susceptible Population", "Tooltip"]& ], "+", 
            RowBox[{"TP", "[", "0", "]"}]}], ")"}]}]}]}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1]}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {
         1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 3 -> 
          GrayLevel[0]}, "Rows" -> {True, True, {False}, True}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Grid"]}], ",", 
   RowBox[{"\<\"RateRules\"\>", "\[Rule]", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"#\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["\<\"Symbol\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["\<\"Value\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {"1", 
        RowBox[{"TP", "[", "0", "]"}], "100000"},
       {"2", 
        TagBox[
         TooltipBox[
          RowBox[{"\[Mu]", "[", "TP", "]"}],
          "\"Population death rate\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Population death rate", "Tooltip"]& ], 
        FractionBox["1", "45625"]},
       {"3", 
        TagBox[
         TooltipBox[
          RowBox[{"\[Mu]", "[", "ISSP", "]"}],
          "\"Infected Severely Symptomatic Population death rate\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Infected Severely Symptomatic Population death rate", 
          "Tooltip"]& ], 
        FractionBox["0.035`", 
         TagBox[
          TooltipBox["aip",
           "\"Average infectious period\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Average infectious period", "Tooltip"]& ]]},
       {"4", 
        TagBox[
         TooltipBox[
          RowBox[{"\[Mu]", "[", "INSP", "]"}],
          "\"Infected Normally Symptomatic Population death rate\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Infected Normally Symptomatic Population death rate", 
          "Tooltip"]& ], 
        FractionBox["0.01`", 
         TagBox[
          TooltipBox["aip",
           "\"Average infectious period\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Average infectious period", "Tooltip"]& ]]},
       {"5", 
        TagBox[
         TooltipBox[
          RowBox[{"\[Beta]", "[", "ISSP", "]"}],
          "\"Contact rate for the infected severely symptomatic population\"",
          
          TooltipStyle->"TextStyling"],
         Annotation[#, 
          "Contact rate for the infected severely symptomatic population", 
          "Tooltip"]& ], "0.15`"},
       {"6", 
        TagBox[
         TooltipBox[
          RowBox[{"\[Beta]", "[", "INSP", "]"}],
          "\"Contact rate for the infected normally symptomatic population\"",
          
          TooltipStyle->"TextStyling"],
         Annotation[#, 
          "Contact rate for the infected normally symptomatic population", 
          "Tooltip"]& ], "0.15`"},
       {"7", 
        TagBox[
         TooltipBox["aip",
          "\"Average infectious period\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Average infectious period", "Tooltip"]& ], "26"},
       {"8", 
        TagBox[
         TooltipBox["aincp",
          "\"Average incubation period\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Average incubation period", "Tooltip"]& ], "6"},
       {"9", 
        TagBox[
         TooltipBox[
          RowBox[{"sspf", "[", "SP", "]"}],
          "\"Severely Symptomatic Population Fraction\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Severely Symptomatic Population Fraction", 
          "Tooltip"]& ], "0.2`"},
       {"10", 
        TagBox[
         TooltipBox[
          RowBox[{"lpcr", "[", 
           RowBox[{"ISSP", ",", "INSP"}], "]"}],
          "\"Lost productivity cost rate (per person per day)\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Lost productivity cost rate (per person per day)", 
          "Tooltip"]& ], "1"}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1]}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {
         1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 4 -> 
          GrayLevel[0.8], 4 -> GrayLevel[0]}, 
        "Rows" -> {True, True, {False}, True}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Grid"]}], ",", 
   RowBox[{"\<\"InitialConditions\"\>", "\[Rule]", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"#\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["\<\"Equation\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {"1", 
        RowBox[{
         RowBox[{"SP", "[", "0", "]"}], "\[Equal]", "99998"}]},
       {"2", 
        RowBox[{
         RowBox[{"EP", "[", "0", "]"}], "\[Equal]", "0"}]},
       {"3", 
        RowBox[{
         RowBox[{"ISSP", "[", "0", "]"}], "\[Equal]", "1"}]},
       {"4", 
        RowBox[{
         RowBox[{"INSP", "[", "0", "]"}], "\[Equal]", "1"}]},
       {"5", 
        RowBox[{
         RowBox[{"RP", "[", "0", "]"}], "\[Equal]", "0"}]},
       {"6", 
        RowBox[{
         RowBox[{"MLP", "[", "0", "]"}], "\[Equal]", "0"}]}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1]}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {
         1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 3 -> 
          GrayLevel[0]}, "Rows" -> {True, True, {False}, True}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Grid"]}]}], "\[RightAssociation]"}]], "Echo",
 Editable->False,
 CellChangeTimes->{
  3.8126521278850813`*^9},ExpressionUUID->"1d469473-00ce-4995-88c3-\
ae6c460a1191"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"solutions:\"\>",
   "EchoLabel"], " ", 
  RowBox[{"{", 
   TemplateBox[{
     GraphicsBox[{{{{}, {}, {}, 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
/SYe2zRNhNhxYa/3qp1fA+aJKnHOw2mcl6/1VZRMpxBq+fV550l7LsgZj9Ub
rxdHA8hDVciJC3kjS89eesqg2WutbQkkLhy5+TasYVoBie73uiJF4YJQD7F0
NlEVrXPqoKW7cuHaQN7dC4MayFjRV0iNzgVW9qsCl6s6CP778eoekwtZ1Zkr
Eq8ZIPY7/6PGHC58l/32wnByPdqR02P2zJ0LI/dWdh7baoZiJJbVq0ZxwZsE
vQxtR3R1IObMvWguGHSkfHtWbo/uvhLEjU9zIehelvLLNYBepMT+e3qWCzfp
4Q16mB2q2y9cvDGOp6cko124cwPqcIrfWxnPhezTEV/PLjNHo4qimpSLXLDe
l7rf2NcASdSJpXpc5kLOwb9iouFzhPrNZGbnVS50tYzYlx+Swi2OSK3ckcrT
27XnxBknHZzEuPZmKI3Hm/tzvtXXDPfUXnsiJJMLH7s2RPW0WuN7F65bTWdx
oUV66G9yC44f/6wwHnWTC0efp7iuFHPAE+9n5i/P5cJfq4y6BlsnPCdGeXvC
XS5gtZnJ95uc8cdbcpSk8rnwpMCytKyEhFeZqLek3efCy3V8vrINJLxlRW6S
6iMuPPJLSWn+54wPfNei3CviAje7UBzMnfDZZ/f4jZ9wgf2v/ED+fXtc9KJe
+dNnXKBdaDbPGLDDlXfcD9/4gucXjLnCbJMlvn6j0frKUi7UBuaFdy3p4iBZ
OOBC8PTHKsWHnxDC2YMmtz6+4kLcmql3/Y+VUUSqhUxnFS8/l+9ERgSO4g6U
fNj+ltfvH/OJppgzSne2jht6xwWFo++EDm91RQ+USu1D3vP8mqP8vb6QidDE
xrl/H3j1zFxmS1pw0M33/6u4yuOx+N4oskaSEELWkuxrqRkP2ZOQd39fsmRL
m2QJpVJfISklSwkJRZKkyIxdUtm3kOxr1pSl0m9+f97PnbnPec45z5k7b1yP
tjjCNg3RI4XVjnjEE52G/DaCj1di2YLGJNzj4gutjZ2O4D8h3HfQyRG3ouxJ
Ot7tCGIkG67zEg64qmY2W2WPI0Bx7wdZui0uyKfgJfXVEdarBMT5JCzxhcHU
psBvjqCYVtRkbWuCt5dKGrQNOoLbobcJ21/ux9/EJ6SqjziCadqRc4c49fFk
X2HuqDFHOJagHTorrI2HmsWeHJ1whNPL7/I3ndHAnWU2dsC0I5ySr/P9VaSG
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
/rEgbpeQaKBvL/Y/aqHDXQ==
            "]]}, 
          Annotation[#, "Charting`Private`Tag$450080#2"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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

            "]]}, Annotation[#, "Charting`Private`Tag$450080#3"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
            "]]}, 
          Annotation[#, "Charting`Private`Tag$450080#4"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.528488, 0.470624, 0.701351], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
6YP/ActjE94=
            "]]}, 
          Annotation[#, "Charting`Private`Tag$450080#5"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.772079, 0.431554, 0.102387], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
            "]]}, 
          Annotation[#, "Charting`Private`Tag$450080#6"]& ]}}, {}}, {
      DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
       AxesOrigin -> {0, 0}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {Automatic, Automatic}, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
       Identity, Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Medium, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
         None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
       True, PlotRangePadding -> {{Automatic, Automatic}, {
         Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{
         TemplateBox[{"\"\"", 
           RowBox[{"TP", "(", "\"t\"", ")"}], "\",\"", 
           TemplateBox[{3}, "Spacer1"], "\"\"", "\"Total Population\""}, 
          "RowDefault"], 
         TemplateBox[{"\"\"", 
           RowBox[{"SP", "(", "\"t\"", ")"}], "\",\"", 
           TemplateBox[{3}, "Spacer1"], "\"\"", "\"Susceptible Population\""},
           "RowDefault"], 
         TemplateBox[{"\"\"", 
           RowBox[{"EP", "(", "\"t\"", ")"}], "\",\"", 
           TemplateBox[{3}, "Spacer1"], "\"\"", "\"Exposed Population\""}, 
          "RowDefault"], 
         TemplateBox[{"\"\"", 
           RowBox[{"INSP", "(", "\"t\"", ")"}], "\",\"", 
           TemplateBox[{3}, "Spacer1"], "\"\"", 
           "\"Infected Normally Symptomatic Population\""}, "RowDefault"], 
         TemplateBox[{"\"\"", 
           RowBox[{"ISSP", "(", "\"t\"", ")"}], "\",\"", 
           TemplateBox[{3}, "Spacer1"], "\"\"", 
           "\"Infected Severely Symptomatic Population\""}, "RowDefault"], 
         TemplateBox[{"\"\"", 
           RowBox[{"RP", "(", "\"t\"", ")"}], "\",\"", 
           TemplateBox[{3}, "Spacer1"], "\"\"", "\"Recovered Population\""}, 
          "RowDefault"]}, "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], 
               "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], "}"}]}]], "Echo",
 Editable->False,
 CellChangeTimes->{
  3.8126521280426188`*^9},ExpressionUUID->"2c6801ef-95bd-4dab-a272-\
2b694855c93c"]
}, Open  ]],

Cell[TextData[{
 "The table above is produced with the package ",
 ButtonBox["\[OpenCurlyDoubleQuote]MonadicTracing.m\[CloseCurlyDoubleQuote]",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/MathematicaForPrediction/blob/master/\
MonadicProgramming/MonadicTracing.m"], None},
  ButtonNote->
   "https://github.com/antononcube/MathematicaForPrediction/blob/master/\
MonadicProgramming/MonadicTracing.m"],
 ", [",
 ButtonBox["AAp2",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/MathematicaForPrediction/blob/master/\
MonadicProgramming/MonadicTracing.m"], None},
  ButtonNote->
   "https://github.com/antononcube/MathematicaForPrediction/blob/master/\
MonadicProgramming/MonadicTracing.m"],
 ", ",
 ButtonBox["AA1",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/MathematicaForPrediction/blob/master/\
MarkdownDocuments/Monad-code-generation-and-extension.md"], None},
  ButtonNote->
   "https://github.com/antononcube/MathematicaForPrediction/blob/master/\
MarkdownDocuments/Monad-code-generation-and-extension.md"],
 "], and some of the explanations below also utilize that package."
}], "Text",
 CellChangeTimes->{{3.734605965389032*^9, 3.734606004347516*^9}, {
  3.734606121697858*^9, 3.734606199245494*^9}, {3.73532508224557*^9, 
  3.7353250916384783`*^9}, {3.735325138885953*^9, 
  3.735325138889399*^9}},ExpressionUUID->"68882bab-a060-4715-809f-\
3e921c67db4a"],

Cell[TextData[{
 "As it was mentioned above the monad ",
 StyleBox["ECMMon", "Program"],
 " can be seen as a DSL. Because of this the monad pipelines made with ECMMon \
are sometimes called \[OpenCurlyDoubleQuote]specifications\
\[CloseCurlyDoubleQuote]."
}], "Text",
 CellChangeTimes->{{3.734606383613448*^9, 3.734606446219247*^9}, {
  3.735374865796884*^9, 3.735374865930313*^9}, {3.7389548289429417`*^9, 
  3.738954839941456*^9}, {3.738989989120174*^9, 3.7389899891326017`*^9}, {
  3.776356272207056*^9, 3.776356288306569*^9}, {3.812652326318091*^9, 
  3.812652335530572*^9}},ExpressionUUID->"4ab2c854-407f-4827-95d6-\
aaeff0aa7477"],

Cell[CellGroupData[{

Cell["Contents description", "Subsection",
 CellChangeTimes->{{3.741976509134077*^9, 
  3.7419765111221123`*^9}},ExpressionUUID->"554f3e86-9dfe-43b7-83a2-\
b3c5ace6a3bc"],

Cell["The document has the following structure.", "Text",
 CellChangeTimes->{{3.741976509134077*^9, 
  3.741976516768077*^9}},ExpressionUUID->"4f0d2bfa-dda6-426c-9d8e-\
10a18dad5c4e"],

Cell[CellGroupData[{

Cell["\<\
The sections \"Package load\" and \"Data load\" obtain the needed code and \
data.\
\>", "Item",
 CellChangeTimes->{{3.741976509134077*^9, 3.741976517861856*^9}, {
  3.741976577746896*^9, 
  3.741976602672608*^9}},ExpressionUUID->"ef438370-6988-44c3-8bab-\
559fd41708e0"],

Cell[TextData[{
 "(Needed and put upfront from the ",
 ButtonBox["\[OpenCurlyDoubleQuote]Reproducible research\
\[CloseCurlyDoubleQuote]",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://en.wikipedia.org/wiki/Reproducibility#Reproducible_research"]\
, None},
  ButtonNote->
   "https://en.wikipedia.org/wiki/Reproducibility#Reproducible_research"],
 " point of view.)"
}], "Subitem",
 CellChangeTimes->{{3.741976509134077*^9, 3.741976518499956*^9}, 
   3.7419765799723883`*^9, {3.742055508862113*^9, 
   3.742055508868713*^9}},ExpressionUUID->"d9346809-bac9-4630-a06d-\
c4715a78f7e2"]
}, Open  ]],

Cell["\<\
The section \"Design consideration\" provide motivation and design decisions \
rationale.\
\>", "Item",
 CellChangeTimes->{{3.741976509134077*^9, 3.741976519099112*^9}, 
   3.7419765822776127`*^9, {3.8185242407471113`*^9, 
   3.818524245574489*^9}},ExpressionUUID->"e1295bd2-bcd2-4268-80ce-\
255a7d3ec0ff"],

Cell["\<\
The section \[OpenCurlyDoubleQuote]Single site models\[CloseCurlyDoubleQuote] \
give brief descriptions of certain \[OpenCurlyDoubleQuote]seed\
\[CloseCurlyDoubleQuote] models that can be used in the monad.\
\>", "Item",
 CellChangeTimes->{{3.741976509134077*^9, 3.741976519099112*^9}, 
   3.7419765822776127`*^9, {3.8185242407471113`*^9, 
   3.818524314828597*^9}},ExpressionUUID->"f1bdd753-551d-41e5-aa96-\
53d98853e731"],

Cell[CellGroupData[{

Cell[TextData[{
 "The section \"Single-site model workflow demo\", \"Multi-site workflow demo\
\[CloseCurlyDoubleQuote] give demonstrations of  how to utilize the ECM",
 StyleBox["Mon", "Program"],
 " monad ."
}], "Item",
 CellChangeTimes->{{3.741976509134077*^9, 3.741976519953169*^9}, 
   3.741976584045*^9, {3.741976640173687*^9, 3.741976669086043*^9}, {
   3.776355665889228*^9, 3.776355675227379*^9}, {3.7770293555059433`*^9, 
   3.777029366044838*^9}, {3.777201190134098*^9, 3.7772012020919743`*^9}, {
   3.812652360686529*^9, 3.8126523787876787`*^9}, {3.818524330837409*^9, 
   3.818524375826996*^9}},ExpressionUUID->"e6b5c1dd-277b-4ddc-8bbe-\
0fbb1bd2b38f"],

Cell["Using concrete practical scenarios and \[OpenCurlyDoubleQuote]real life\
\[CloseCurlyDoubleQuote] data.", "Subitem",
 CellChangeTimes->{{3.741976509134077*^9, 3.741976521932185*^9}, {
  3.818524393118293*^9, 
  3.818524438978661*^9}},ExpressionUUID->"98ebc521-b86a-4b3f-b709-\
eb44f10d737d"]
}, Open  ]],

Cell["\<\
The section \[OpenCurlyDoubleQuote]Batch simulation and calibration process\
\[CloseCurlyDoubleQuote] gives methodological preparation for the content of \
the next two sections.\
\>", "Item",
 CellChangeTimes->{{3.741976509134077*^9, 3.741976521932185*^9}, {
  3.818524393118293*^9, 
  3.8185245372115927`*^9}},ExpressionUUID->"9c200058-a278-41be-8e29-\
e1a344dc8913"],

Cell["\<\
The section \[OpenCurlyDoubleQuote]Batch simulation workflow\
\[CloseCurlyDoubleQuote] and \[OpenCurlyDoubleQuote]Calibration workflow\
\[CloseCurlyDoubleQuote] describe how to do most important monad workflows \
after the model is developed.\
\>", "Item",
 CellChangeTimes->{{3.741976509134077*^9, 3.741976521932185*^9}, {
  3.818524393118293*^9, 3.818524586341055*^9}, {3.818524680133896*^9, 
  3.818524713265731*^9}, {3.818531676650536*^9, 
  3.8185316770883493`*^9}},ExpressionUUID->"9694638b-6d06-4dff-89d7-\
ca650a97af83"],

Cell[CellGroupData[{

Cell["\<\
The section \"Future plans\" outlines future directions of development.\
\>", "Item",
 CellChangeTimes->{{3.741976509134077*^9, 3.741976526020775*^9}, {
  3.741976558687757*^9, 3.7419765634571457`*^9}, {3.741976723435048*^9, 
  3.741976726483471*^9}},ExpressionUUID->"8ab22e9e-37af-4e4d-a7b3-\
9725df47e95d"],

Cell[TextData[{
 "(The most interesting and important one is the ",
 ButtonBox["ECM conversational agent",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/Raku-DSL-English-\
EpidemiologyModelingWorkflows"], None},
  ButtonNote->
   "https://github.com/antononcube/Raku-DSL-English-\
EpidemiologyModelingWorkflows"],
 " direction.)"
}], "Subitem",
 CellChangeTimes->{{3.741976509134077*^9, 3.741976526020775*^9}, {
   3.741976558687757*^9, 3.7419765634571457`*^9}, 3.741976723435048*^9, {
   3.742056103817881*^9, 3.742056103824545*^9}, {3.8185486134222393`*^9, 
   3.818548635567616*^9}},ExpressionUUID->"62be7fef-bff8-450a-aa12-\
3e48a9093677"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Remark:",
  FontWeight->"Bold"],
 " One can read only the sections \"Introduction\", \"Design consideration\", \
\[OpenCurlyDoubleQuote]Single-site models\[CloseCurlyDoubleQuote], and \
\"Batch simulation and calibration process\". That set of sections provide a \
fairly good, programming language agnostic exposition of the substance and \
novel ideas of this document."
}], "Text",
 CellChangeTimes->{{3.741976509134077*^9, 3.741976540652272*^9}, {
  3.77635573686692*^9, 3.7763557379022493`*^9}, {3.8126524185006523`*^9, 
  3.8126524197721453`*^9}, {3.818531703661776*^9, 3.8185317174013367`*^9}, {
  3.818531753084917*^9, 
  3.818531763806222*^9}},ExpressionUUID->"68568255-9703-421a-8583-\
9fc56dea8682"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Package load", "Section",
 CellChangeTimes->{{3.795432542698386*^9, 3.795432555612383*^9}, {
  3.8126512564122763`*^9, 
  3.812651261969615*^9}},ExpressionUUID->"52cb8993-18e7-4dfb-94ab-\
2271f325f00e"],

Cell["In this section we load packages used in this notebook:", "Text",
 CellChangeTimes->{{3.80501824068062*^9, 3.805018260177039*^9}, {
  3.8126226150769453`*^9, 
  3.81262261657271*^9}},ExpressionUUID->"bfc181e2-f1fa-47e7-8cfe-\
c63531c5e1e4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "Import", "[", 
   "\"\<https://raw.githubusercontent.com/antononcube/SystemModeling/master/\
Projects/Coronavirus-propagation-dynamics/WL/\
MonadicEpidemiologyCompartmentalModeling.m\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Import", "[", 
  "\"\<https://raw.githubusercontent.com/antononcube/SystemModeling/master/\
Projects/Coronavirus-propagation-dynamics/WL/MultiSiteModelSimulation.m\>\"", 
  "]"}], "\n", 
 RowBox[{"Import", "[", 
  "\"\<https://raw.githubusercontent.com/antononcube/MathematicaForPrediction/\
master/MonadicProgramming/MonadicTracing.m\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Import", "[", 
  "\"\<https://raw.githubusercontent.com/antononcube/ConversationalAgents/\
master/Packages/WL/ExternalParsersHookup.m\>\"", "]"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.79543254931494*^9, 3.795432565805685*^9}, {
  3.795432648351672*^9, 3.7954326534214354`*^9}, {3.795432974394128*^9, 
  3.7954329752876263`*^9}, {3.805018232918086*^9, 3.805018236030912*^9}, {
  3.8112490980295563`*^9, 3.811249108405224*^9}, {3.8126512425585213`*^9, 
  3.812651242790011*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"525764b1-85d0-48df-a574-194edad25542"],

Cell[TextData[{
 StyleBox["Remark:",
  FontWeight->"Bold"],
 " The import commands above would trigger some other package imports."
}], "Text",
 CellChangeTimes->{{3.812624974209091*^9, 
  3.812625009338125*^9}},ExpressionUUID->"23065431-e025-4d3a-b2f9-\
41c45e30725f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Data load", "Section",
 InitializationCell->True,
 CellChangeTimes->{{3.79528822431952*^9, 3.7952882284367*^9}, {
  3.795288357903825*^9, 3.795288359861322*^9}, {3.795432605036654*^9, 
  3.79543260700459*^9}, {3.812652346207018*^9, 
  3.812652350414645*^9}},ExpressionUUID->"e6ceee29-15ed-4c5b-b235-\
9f07d378ac85"],

Cell[TextData[{
 "In this section we ingest data using the \[OpenCurlyDoubleQuote]umbrella \
function\[CloseCurlyDoubleQuote] ",
 StyleBox["MultiSiteModelReadData", "Program"],
 " from [AAp5]:"
}], "Text",
 CellChangeTimes->{{3.8126212026370707`*^9, 3.812621232922166*^9}, {
  3.812623855602047*^9, 3.8126238762344627`*^9}, {3.812623917185397*^9, 
  3.8126239249922943`*^9}},ExpressionUUID->"7b824154-40f2-4ddb-afcf-\
bf24c8d88573"],

Cell[CellGroupData[{

Cell["Read data", "Subsection",
 InitializationCell->True,
 CellChangeTimes->{{3.795288362538908*^9, 
  3.795288365273467*^9}},ExpressionUUID->"255713c0-9b32-4898-91bb-\
d471a788d43b"],

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"aData", "=", 
    RowBox[{"MultiSiteModelReadData", "[", "]"}]}], ";"}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.794786335499044*^9, 3.794786354148303*^9}, {
  3.7947874966071053`*^9, 3.794787513232052*^9}, {3.794787588070182*^9, 
  3.794787591690864*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"431f3e10-6d57-4be7-a969-94b0a56ee644"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Data summaries", "Subsection",
 CellChangeTimes->{{3.812623946537376*^9, 
  3.812623949821804*^9}},ExpressionUUID->"5a5bbec8-f130-40e4-a4c9-\
21b67b3b6603"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<RecordsSummary\>\"", "]"}], "/@", 
  "aData"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.794815947724774*^9, 3.79481596335146*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"46b57ffe-02d3-4300-85d3-ced4871b827d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Transform data", "Subsection",
 InitializationCell->True,
 CellChangeTimes->{{3.7952883709547443`*^9, 
  3.795288373092369*^9}},ExpressionUUID->"fe7e6dc4-cace-4b28-a88b-\
d4b2bea97b11"],

Cell["\<\
Here we transform the population related data in a form convenient for \
specifying the simulations with it:\
\>", "Text",
 CellChangeTimes->{{3.8126460377413816`*^9, 3.8126460646629353`*^9}, {
  3.812648134284547*^9, 
  3.812648144679789*^9}},ExpressionUUID->"39edff18-1f22-4458-813b-\
295aaabbeb0d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"aPopulations", "=", 
   RowBox[{"Association", "@", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"#Lon", ",", "#Lat"}], "}"}], "\[Rule]", "#Population"}], 
       "&"}], ",", 
      RowBox[{"Normal", "[", 
       RowBox[{"aData", "[", "\"\<CountyRecords\>\"", "]"}], "]"}]}], 
     "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"aInfected", "=", 
   RowBox[{"Association", "@", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"#Lon", ",", "#Lat"}], "}"}], "\[Rule]", "#Cases"}], "&"}], 
      ",", 
      RowBox[{"Normal", "[", 
       RowBox[{"aData", "[", "\"\<CasesAndDeaths\>\"", "]"}], "]"}]}], 
     "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"aDead", "=", 
   RowBox[{"Association", "@", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"#Lon", ",", "#Lat"}], "}"}], "\[Rule]", "#Deaths"}], "&"}], 
      ",", 
      RowBox[{"Normal", "[", 
       RowBox[{"aData", "[", "\"\<CasesAndDeaths\>\"", "]"}], "]"}]}], 
     "]"}]}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.795288299507544*^9, 3.795288300810478*^9}, {
   3.7952883452196283`*^9, 3.795288386387155*^9}, 3.812646035451174*^9},
 CellLabel->"In[16]:=",ExpressionUUID->"a9488a51-0b19-4590-a630-7f75556b131e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Geo-visualizations", "Subsection",
 CellChangeTimes->{{3.8126243241239357`*^9, 
  3.812624333438716*^9}},ExpressionUUID->"97a06a27-19be-4bd0-821d-\
44bf6f4d983a"],

Cell[TextData[{
 "Using the built-in function ",
 Cell[BoxData[
  FormBox[
   TemplateBox[{"GeoHistogram", {
      URL["https://reference.wolfram.com/language/ref/GeoHistogram.html"], 
      "None"}, "https://reference.wolfram.com/language/ref/GeoHistogram.html",
      "HyperlinkActionRecycled", {"HyperlinkActive"}, 
     BaseStyle -> {"Hyperlink"}, HyperlinkAction -> "Recycled"},
    "HyperlinkTemplate"], TextForm]],
  FormatType->"TextForm",ExpressionUUID->
  "4afed705-c373-437b-b97b-215106801339"],
 " we summarize the USA county populations, and COViD-19 infection cases and \
deaths:"
}], "Text",
 CellChangeTimes->{{3.812647864832727*^9, 3.812647899730213*^9}, {
  3.812648170184066*^9, 3.812648238416017*^9}, {3.812648869373609*^9, 
  3.812648872804171*^9}, {3.8126497569213676`*^9, 
  3.812649827256517*^9}},ExpressionUUID->"72baae20-e68b-45d0-b00d-\
317cdd700d4a"],

Cell[BoxData[
 RowBox[{"Row", "@", 
  RowBox[{"MapThread", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"GeoHistogram", "[", 
      RowBox[{
       RowBox[{"KeyMap", "[", 
        RowBox[{"Reverse", ",", "#1"}], "]"}], ",", 
       RowBox[{"Quantity", "[", 
        RowBox[{"140", ",", "\"\<Miles\>\""}], "]"}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", "#2"}], ",", 
       RowBox[{"PlotTheme", "\[Rule]", "\"\<Scientific\>\""}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], "&"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"aPopulations", ",", "aInfected", ",", "aDead"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Populations\>\"", ",", "\"\<Infected\>\"", ",", "\"\<Dead\>\""}], 
       "}"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8126456606389637`*^9, 3.8126456867794657`*^9}, {
  3.812645927974771*^9, 3.8126460192122707`*^9}, {3.8126479223445044`*^9, 
  3.812647934110981*^9}, {3.812649499202301*^9, 3.812649653700754*^9}, {
  3.8126496958570757`*^9, 3.812649707026507*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"206a0545-b62a-46f7-959b-383ce0c3d35c"],

Cell["\<\
(Note that in the plots above we have to reverse the keys of the given \
population associations.)\
\>", "Text",
 CellChangeTimes->{{3.812649830677596*^9, 
  3.812649851253022*^9}},ExpressionUUID->"2a85e64e-de56-4e6e-9224-\
88ae407eef38"],

Cell[TextData[{
 "Using the function ",
 StyleBox["HextileHistogram", "Program"],
 " from [",
 ButtonBox["AAp7",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/MathematicaForPrediction/blob/master/\
Misc/HextileBins.m"], None},
  ButtonNote->
   "https://github.com/antononcube/MathematicaForPrediction/blob/master/Misc/\
HextileBins.m"],
 "] here we visualize USA county populations over a hexagonal grid with cell \
radius 2 degrees (",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[TildeTilde]", "140"}], TraditionalForm]],ExpressionUUID->
  "a69695ae-2067-49a5-8394-6828bdbb5e6f"],
 " miles ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[TildeTilde]", "222"}], TraditionalForm]],ExpressionUUID->
  "3c818aa0-aae1-4f60-8f4c-c41a91544ef6"],
 " kilometers):"
}], "Text",
 CellChangeTimes->{{3.812624256217847*^9, 3.812624290530561*^9}, {
  3.812625093308979*^9, 3.8126251745360928`*^9}, {3.81262599072904*^9, 
  3.812626052951026*^9}},ExpressionUUID->"c40980ca-1ea8-4c1b-a86f-\
08b35eeeed5f"],

Cell[BoxData[
 RowBox[{"HextileHistogram", "[", 
  RowBox[{"aPopulations", ",", "2", ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8126240793824997`*^9, 3.812624223592538*^9}, 
   3.81262444065415*^9, 3.812625060050242*^9, {3.812642754680344*^9, 
   3.812642796541395*^9}, {3.8126429125096083`*^9, 3.812642912789867*^9}, {
   3.8126456361670847`*^9, 3.8126456457395906`*^9}, {3.812649072901771*^9, 
   3.812649121840007*^9}, {3.8126494392512093`*^9, 3.812649450545801*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"7d1dd36a-5948-4abd-898b-52d4dc16d3db"],

Cell[TextData[{
 "In this notebook we prefer using ",
 StyleBox["HextileHistogram", "Program"],
 " because it represents the simulation data in geometrically more faithful \
way."
}], "Text",
 CellChangeTimes->{{3.81264986293114*^9, 3.812649972822379*^9}, {
  3.818089662319764*^9, 
  3.818089684561522*^9}},ExpressionUUID->"bfa944f9-b7b6-439a-98fa-\
617b7667d8e7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Design considerations", "Section",
 CellChangeTimes->{{3.795433128101488*^9, 3.795433131364662*^9}, {
  3.81852421678337*^9, 
  3.818524220360962*^9}},ExpressionUUID->"2584298c-2d54-4b6d-aad5-\
1dab4618af19"],

Cell[CellGroupData[{

Cell["The big picture", "Subsection",
 CellChangeTimes->{{3.818089552012199*^9, 3.818089558761506*^9}, {
  3.81841090552702*^9, 3.818410916169607*^9}, {3.818438318973218*^9, 
  3.8184383191423492`*^9}},ExpressionUUID->"08bce7b8-64d4-47df-b61b-\
f335b114db43"],

Cell["\<\
The main purpose of the designed epidemic compartmental modeling framework \
(i.e. software monad) is to have the ability to do multiple, systematic \
simulations for different scenario play-outs over large scale geographical \
regions. The target end-users are decision makers at government level and \
researchers of pandemic or other large scale epidemic effects.\
\>", "Text",
 CellChangeTimes->{{3.797237661284391*^9, 3.797237896814535*^9}, {
  3.8184382528334637`*^9, 
  3.818438276256256*^9}},ExpressionUUID->"1882f01d-7092-4928-ac9e-\
ef97ac945d05"],

Cell["\<\
Here is a diagram that shows the envisioned big picture workflow:\
\>", "Text",
 CellChangeTimes->{{3.797238298704772*^9, 3.797238326256158*^9}, {
  3.79723979409194*^9, 
  3.797239794316765*^9}},ExpressionUUID->"0b5fc117-dbc6-4a92-aac1-\
4d283078c224"],

Cell[BoxData[
 RowBox[{"Import", "[", 
  "\"\<https://github.com/antononcube/SystemModeling/raw/master/Projects/\
Coronavirus-propagation-dynamics/Diagrams/Model-development-and-decision-\
making.jpeg\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.818089672889721*^9, 3.818089675329774*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"e55b75c2-41b4-4a02-b0b4-4708aa02a7f4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Large-scale modeling", "Subsection",
 CellChangeTimes->{{3.797239033816099*^9, 
  3.797239047247102*^9}},ExpressionUUID->"5f61af7d-6330-4c59-b10b-\
ceb2ebf5f082"],

Cell[TextData[{
 "The standard classical compartmental epidemiology models are not adequate \
over large geographical areas, like, countries. We design a software \
framework  -- the monad ",
 StyleBox["ECMMon", "Program"],
 " --  that allows large scale simulations using a simple principle \
workflow:"
}], "Text",
 CellChangeTimes->{{3.797239049318495*^9, 3.797239275334393*^9}, {
  3.818438368958405*^9, 3.81843838921931*^9}, {3.8184488640864058`*^9, 
  3.81844890746732*^9}},ExpressionUUID->"4ca1dc6a-19b7-44ec-88c2-\
d0414472aeb3"],

Cell[TextData[{
 "Develop a ",
 StyleBox["single-site model",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " for relatively densely populated geographical area for which the \
assumptions of the classical models (approximately) hold."
}], "ItemNumbered",
 CellChangeTimes->{{3.7972392793167543`*^9, 3.7972393661276503`*^9}, {
  3.797239458228677*^9, 3.7972394678136997`*^9}, {3.81844854502906*^9, 
  3.818448563189713*^9}},ExpressionUUID->"071dd2cb-98fe-4bf9-8c15-\
c52915cdf4ab"],

Cell[TextData[{
 "Extend the single-site model into a large-scale ",
 StyleBox["multi-site model",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " using statistically derived traveling patterns; see [AA4]."
}], "ItemNumbered",
 CellChangeTimes->{{3.7972392793167543`*^9, 3.7972394512012243`*^9}, {
  3.797240064658342*^9, 3.797240095303741*^9}, {3.81844862009359*^9, 
  3.818448620588007*^9}},ExpressionUUID->"570315bf-b3b7-4e55-93b6-\
cd0bb247f63e"],

Cell["\<\
Supply the multi-site model with appropriately prepared data.\
\>", "ItemNumbered",
 CellChangeTimes->{{3.7972392793167543`*^9, 3.797239450679797*^9}, {
  3.797239484800268*^9, 3.797239525216065*^9}, {3.818448637564621*^9, 
  3.818448653146101*^9}},ExpressionUUID->"d8cbd32e-afd7-436a-9784-\
09e686be94e8"],

Cell["\<\
Run multiple simulations to see large scale implications of different \
policies.\
\>", "ItemNumbered",
 CellChangeTimes->{{3.7972392793167543`*^9, 3.797239450679797*^9}, {
  3.797239484800268*^9, 3.7972395587379627`*^9}, {3.81844867494046*^9, 
  3.818448674941646*^9}},ExpressionUUID->"2d7b1a69-ae15-42fb-8405-\
b28f6e8e182e"],

Cell["\<\
Calibrate the model to concrete observed (or faked) data. Go to 4. \
\>", "ItemNumbered",
 CellChangeTimes->{{3.7972392793167543`*^9, 3.797239450679797*^9}, {
  3.797239484800268*^9, 3.7972395587379627`*^9}, {3.818448676782625*^9, 
  3.8184487089468327`*^9}},ExpressionUUID->"ce8f0f53-c950-47c1-8023-\
475fa9008776"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Flow chart", "Subsection",
 CellChangeTimes->{{3.818448942039033*^9, 
  3.818448945267755*^9}},ExpressionUUID->"4ebcc109-6504-445a-ba58-\
6923b368082f"],

Cell[TextData[{
 "The following flow chart visualizes the possible workflows the software \
monad ",
 StyleBox["ECMMon", "Program"],
 ":  "
}], "Text",
 CellChangeTimes->{{3.795642937380451*^9, 3.7956430319848757`*^9}, 
   3.8184391385147963`*^9, {3.8184487244169703`*^9, 3.818448789520792*^9}, {
   3.81844883032452*^9, 3.8184488574269123`*^9}, {3.8184489515789967`*^9, 
   3.818448951657673*^9}},ExpressionUUID->"198996b8-b013-4c68-bb7d-\
53decd5960e5"],

Cell[BoxData[
 RowBox[{"ImageResize", "[", 
  RowBox[{
   RowBox[{
   "Import", "[", 
    "\"\<https://github.com/antononcube/SystemModeling/raw/master/Projects/\
Coronavirus-propagation-dynamics/Diagrams/ECMMon-workflow.jpg\>\"", "]"}], 
   ",", "1000"}], "]"}]], "Input",
 CellChangeTimes->{{3.795643288584262*^9, 3.795643290694189*^9}, {
  3.795643461487969*^9, 3.795643470881633*^9}, {3.795644201893538*^9, 
  3.795644216842223*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"249ecf2e-2ce4-4483-b602-e697a36621f1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Two models in the monad", "Subsection",
 CellChangeTimes->{{3.795433452557548*^9, 
  3.795433467205679*^9}},ExpressionUUID->"c0860446-5ffa-4f56-895d-\
f296e7cd3d86"],

Cell["\<\
An ECMMon object can have one or two models. One of the models is a \
\[OpenCurlyDoubleQuote]seed\[CloseCurlyDoubleQuote], single-site model from \
[AAp1], which, if desired, is scaled into a multi-site model, [AA3, AAp2].\
\>", "Item",
 CellChangeTimes->{{3.795433469185718*^9, 3.7954335992826014`*^9}, {
  3.795435399504093*^9, 
  3.795435408776196*^9}},ExpressionUUID->"f65d15eb-c5e5-449f-9d59-\
f541dd62a219"],

Cell[CellGroupData[{

Cell["Workflows with only the single-site model are supported.", "Item",
 CellChangeTimes->{{3.795433608215164*^9, 
  3.7954337426224546`*^9}},ExpressionUUID->"339ff0c9-fb10-43dd-84a7-\
b54aa723e4ff"],

Cell["Say, workflows for doing sensitivity analysis, [AA6, BC1]. ", "Subitem",
 CellChangeTimes->{{3.795433608215164*^9, 3.795433776461714*^9}, {
  3.7954354228606577`*^9, 
  3.795435425200431*^9}},ExpressionUUID->"caf82b29-6fea-4652-88fb-\
fc8f2c953c9f"]
}, Open  ]],

Cell["\<\
Scaling of a single-site model into multi-site is supported and facilitated. \
\
\>", "Item",
 CellChangeTimes->{{3.795433608215164*^9, 3.795433734754324*^9}, {
  3.7954337909331007`*^9, 3.795433790934248*^9}, {3.795435431872712*^9, 
  3.795435482922647*^9}},ExpressionUUID->"86dc2cbf-e8d0-43c6-9c7c-\
778b297caf03"],

Cell["\<\
Workflows for the multi-site model include preliminary model scaling steps \
and simulation steps.\
\>", "Item",
 CellChangeTimes->{{3.795433608215164*^9, 3.795433734754324*^9}, {
  3.795433791345233*^9, 
  3.795433848309978*^9}},ExpressionUUID->"9427f308-b0aa-4f29-ae52-\
a13c2140df59"],

Cell["\<\
After the single-site model is scaled the monad functions use the multi-site \
model.\
\>", "Item",
 CellChangeTimes->{{3.795433608215164*^9, 3.795433734754324*^9}, {
  3.7954337909331007`*^9, 3.795433790934248*^9}, {3.795435431872712*^9, 
  3.795435478345366*^9}},ExpressionUUID->"841dfe04-d090-4692-a3b0-\
dd686b41a8c2"],

Cell["The workflows should be easy to specify and read.", "Item",
 CellChangeTimes->{{3.795433608215164*^9, 3.795433734754324*^9}, {
  3.795433791345233*^9, 
  3.79543387699332*^9}},ExpressionUUID->"3c7e372a-b6ca-41a2-bf15-\
68ba260770b9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Single-site model workflow", "Subsection",
 CellChangeTimes->{{3.795433442196485*^9, 3.795433445188561*^9}, {
  3.79543388344077*^9, 
  3.795433893857296*^9}},ExpressionUUID->"60724f82-2b6f-4e54-b5bc-\
c1e0f893a2d4"],

Cell["Make a single-site model.", "ItemNumbered",
 CellChangeTimes->{{3.7954331381824093`*^9, 3.795433170042816*^9}, {
  3.79543389667402*^9, 
  3.795433896675333*^9}},ExpressionUUID->"563fa1a3-3d0e-4488-8357-\
84ff1d193032"],

Cell["Assign stocks initial conditions.", "ItemNumbered",
 CellChangeTimes->{{3.7954331381824093`*^9, 3.795433170042816*^9}, {
  3.795433897379178*^9, 
  3.795433916649273*^9}},ExpressionUUID->"9564fbc2-7e9e-4a07-8ccd-\
6b6a3acbb6a9"],

Cell["Assign rates values.", "ItemNumbered",
 CellChangeTimes->{{3.7954331381824093`*^9, 3.795433170042816*^9}, {
  3.795433897379178*^9, 
  3.795433924912525*^9}},ExpressionUUID->"22d1b18c-b239-4f11-85e9-\
e885afb1a7ea"],

Cell["Simulate.", "ItemNumbered",
 CellChangeTimes->{{3.7954331381824093`*^9, 3.795433170042816*^9}, {
  3.795433897379178*^9, 
  3.795433929164835*^9}},ExpressionUUID->"9caa96c6-2422-4ac2-86f3-\
9455fdc6ef4b"],

Cell["Plot results.", "ItemNumbered",
 CellChangeTimes->{{3.7954331381824093`*^9, 3.795433170042816*^9}, {
  3.795433897379178*^9, 
  3.795433933484784*^9}},ExpressionUUID->"4dd33bec-8864-4041-a5fd-\
362e165ad9a9"],

Cell["Go to 2. a few times", "ItemNumbered",
 CellChangeTimes->{{3.7954331381824093`*^9, 3.795433170042816*^9}, {
  3.795433897379178*^9, 3.7954339390377893`*^9}, {3.818890570284153*^9, 
  3.818890573136202*^9}, {3.81889071188126*^9, 
  3.81889075590666*^9}},ExpressionUUID->"5a98fe73-c873-45ff-895a-\
6535fe25e749"],

Cell[CellGroupData[{

Cell["Do batch simulations", "ItemNumbered",
 CellChangeTimes->{{3.7954331381824093`*^9, 3.795433170042816*^9}, {
  3.795433897379178*^9, 3.7954339390377893`*^9}, {3.818890570284153*^9, 
  3.818890573136202*^9}, {3.81889071188126*^9, 
  3.818890774991865*^9}},ExpressionUUID->"74e946fe-c537-4c8b-84c1-\
2a2b6d718f7c"],

Cell["For sensitivity analysis studies", "SubitemNumbered",
 CellChangeTimes->{{3.7954331381824093`*^9, 3.795433170042816*^9}, {
  3.795433897379178*^9, 3.7954339390377893`*^9}, {3.818890570284153*^9, 
  3.818890573136202*^9}, {3.818890712620666*^9, 
  3.818890792834585*^9}},ExpressionUUID->"7e51d722-a8f8-4a31-ac82-\
dc63b7fb1a3d"],

Cell["In order to get insight on model\[CloseCurlyQuote]s qualitative \
behavior.", "SubitemNumbered",
 CellChangeTimes->{{3.7954331381824093`*^9, 3.795433170042816*^9}, {
   3.795433897379178*^9, 3.7954339390377893`*^9}, {3.818890570284153*^9, 
   3.818890573136202*^9}, {3.818890712620666*^9, 3.81889072954134*^9}, 
   3.818890762638988*^9, {3.818890794679529*^9, 
   3.8188908480505342`*^9}},ExpressionUUID->"bcd11357-3a19-4d62-bb32-\
1920cec574d8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Calibrate the model", "ItemNumbered",
 CellChangeTimes->{{3.7954331381824093`*^9, 3.795433170042816*^9}, {
   3.795433897379178*^9, 3.7954339390377893`*^9}, {3.818890570284153*^9, 
   3.818890595196973*^9}, 3.818890694182591*^9, {3.818890854241528*^9, 
   3.818890854243032*^9}},ExpressionUUID->"26681679-a238-474d-bd90-\
7a0c104d447f"],

Cell["With suitable transformed real life data", "SubitemNumbered",
 CellChangeTimes->{{3.7954331381824093`*^9, 3.795433170042816*^9}, {
   3.795433897379178*^9, 3.7954339390377893`*^9}, {3.818890570284153*^9, 
   3.818890595196973*^9}, 3.818890694182591*^9, {3.818890855025468*^9, 
   3.8188908695384073`*^9}},ExpressionUUID->"9cf95739-3e80-4031-a7d9-\
7ac9f743900e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Batch simulate for different scenario play-outs", "ItemNumbered",
 CellChangeTimes->{{3.7954331381824093`*^9, 3.795433170042816*^9}, {
  3.795433897379178*^9, 3.7954339390377893`*^9}, {3.818890570284153*^9, 
  3.818890635034089*^9}, {3.818890881744937*^9, 
  3.8188908868407717`*^9}},ExpressionUUID->"f62362c5-f014-46a2-b34a-\
0382bd810024"],

Cell["And related visualizations", "SubitemNumbered",
 CellChangeTimes->{{3.7954331381824093`*^9, 3.795433170042816*^9}, {
  3.795433897379178*^9, 3.7954339390377893`*^9}, {3.818890570284153*^9, 
  3.818890642194819*^9}, {3.818890905949094*^9, 
  3.8188909059508047`*^9}},ExpressionUUID->"ccd58768-5e1c-46ee-b5ae-\
3ecb833868d5"]
}, Open  ]],

Cell["Export results", "ItemNumbered",
 CellChangeTimes->{{3.7954331381824093`*^9, 3.795433170042816*^9}, {
  3.795433897379178*^9, 3.7954339390377893`*^9}, {3.818890570284153*^9, 
  3.818890642194819*^9}, {3.818890906922319*^9, 
  3.8188909166651297`*^9}},ExpressionUUID->"a1dbeb2f-f4e5-45a6-ae0b-\
7980e6308818"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Multi-site model workflow", "Subsection",
 CellChangeTimes->{{3.7954334359297533`*^9, 3.795433438393661*^9}, {
  3.7954429672564497`*^9, 
  3.795442969955728*^9}},ExpressionUUID->"d448cbef-ec2f-47ba-af52-\
84237e933496"],

Cell["Make a single-site model.", "ItemNumbered",
 CellChangeTimes->{{3.7954331381824093`*^9, 
  3.795433170042816*^9}},ExpressionUUID->"291485bc-4495-4930-9db5-\
273ea584a7ec"],

Cell["Assign initial conditions and rates.", "ItemNumbered",
 CellChangeTimes->{{3.7954331381824093`*^9, 3.7954332238400383`*^9}, {
  3.795433314517479*^9, 
  3.795433326116345*^9}},ExpressionUUID->"75b09c51-de28-4e19-a03e-\
d3136bbe0861"],

Cell[CellGroupData[{

Cell["Scale the single-site model into a multi-site model.", "ItemNumbered",
 CellChangeTimes->{{3.7954331381824093`*^9, 
  3.795433250037047*^9}},ExpressionUUID->"34f02e43-3933-45c3-b8b1-\
317c3454a193"],

Cell["\<\
The single-site assigned rates become \[OpenCurlyDoubleQuote]global\
\[CloseCurlyDoubleQuote] when the single-site model is scaled.\
\>", "SubitemNumbered",
 CellChangeTimes->{{3.7954331381824093`*^9, 3.7954332648649683`*^9}, {
   3.795433308352738*^9, 3.7954333121778316`*^9}, 3.795433378922604*^9, {
   3.795441921519889*^9, 3.795441921521268*^9}, {3.795442388715355*^9, 
   3.795442390698176*^9}},ExpressionUUID->"3a9dc633-3ac3-4e16-a3a9-\
a0df2069f419"],

Cell["\<\
The scaling is based on assumptions for traveling patterns of the populations.\
\>", "SubitemNumbered",
 CellChangeTimes->{{3.7954331381824093`*^9, 3.7954332648649683`*^9}, {
  3.795433307658399*^9, 3.795433307659668*^9}, {3.795442153654941*^9, 
  3.7954422139561853`*^9}},ExpressionUUID->"36d025d4-660f-4632-9757-\
f78f21113f5c"],

Cell[CellGroupData[{

Cell["There are few alternatives for that scaling:", "SubitemNumbered",
 CellChangeTimes->{{3.7954331381824093`*^9, 3.7954332648649683`*^9}, {
  3.795433307658399*^9, 3.795433307659668*^9}, {3.795442153654941*^9, 
  3.7954422118395987`*^9}, {3.795442401293331*^9, 
  3.79544240160773*^9}},ExpressionUUID->"6737417f-68dc-4504-87c9-\
82a46267fc2a"],

Cell["Using locations geo-coordinates", "SubsubitemNumbered",
 CellChangeTimes->{{3.7954331381824093`*^9, 3.7954332648649683`*^9}, {
   3.795433307658399*^9, 3.795433307659668*^9}, {3.795442153654941*^9, 
   3.7954421790564127`*^9}, 
   3.7954424034866323`*^9},ExpressionUUID->"bf9b4bfd-33d6-4c59-8e54-\
753f812ab382"],

Cell["\<\
Using regular grids covering a certain area based on in-habited locations \
geo-coordinates\
\>", "SubsubitemNumbered",
 CellChangeTimes->{{3.7954331381824093`*^9, 3.7954332648649683`*^9}, {
   3.795433307658399*^9, 3.795433307659668*^9}, {3.795442154193719*^9, 
   3.7954421556787043`*^9}, {3.795442222437175*^9, 3.795442288434968*^9}, 
   3.795442404701642*^9},ExpressionUUID->"f77d57a1-5812-4441-9a2b-\
e82165825e75"],

Cell["Using traveling patterns contingency matrices", "SubsubitemNumbered",
 CellChangeTimes->{{3.7954331381824093`*^9, 3.7954332648649683`*^9}, {
   3.795433307658399*^9, 3.795433307659668*^9}, {3.795442154193719*^9, 
   3.7954421556787043`*^9}, {3.795442222437175*^9, 3.7954423011695757`*^9}, 
   3.7954424058479958`*^9},ExpressionUUID->"7fb45433-04b7-49ad-b583-\
91585ac0608d"],

Cell["\<\
Using \[OpenCurlyDoubleQuote]artificial\[CloseCurlyDoubleQuote] patterns of \
certain regular types for qualitative analysis purposes\
\>", "SubsubitemNumbered",
 CellChangeTimes->{{3.7954331381824093`*^9, 3.7954332648649683`*^9}, {
   3.795433307658399*^9, 3.795433307659668*^9}, {3.795442154193719*^9, 
   3.7954421556787043`*^9}, {3.795442222437175*^9, 3.795442355122118*^9}, 
   3.795442406985133*^9},ExpressionUUID->"d98f482a-b40a-4059-a4a3-\
d13d1f59955c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Enhance the multi-site traveling patterns matrix and re-scale the single site \
model.\
\>", "ItemNumbered",
 CellChangeTimes->{{3.7954331381824093`*^9, 3.7954332648649683`*^9}, {
   3.795433308352738*^9, 3.7954333121778316`*^9}, 3.795433378922604*^9, {
   3.7954419242351437`*^9, 
   3.795441990325253*^9}},ExpressionUUID->"ca15af0c-a817-4147-8b4f-\
b2907b2d3dfc"],

Cell["\<\
We might want to combine traveling patterns by ground transportation with \
traveling patterns by airplanes.\
\>", "SubitemNumbered",
 CellChangeTimes->{{3.7954331381824093`*^9, 3.7954332648649683`*^9}, {
   3.795433308352738*^9, 3.7954333121778316`*^9}, 3.795433378922604*^9, {
   3.7954419242351437`*^9, 3.795442063948591*^9}, {3.795442428564014*^9, 
   3.795442429530593*^9}},ExpressionUUID->"d50be05c-5896-4dc1-8d18-\
e16de8fb6406"],

Cell[CellGroupData[{

Cell["\<\
For quarantine scenarios this might a less important capability of the monad.\
\
\>", "SubitemNumbered",
 CellChangeTimes->{{3.7954331381824093`*^9, 3.7954332648649683`*^9}, {
   3.795433308352738*^9, 3.7954333121778316`*^9}, 3.795433378922604*^9, {
   3.7954419242351437`*^9, 
   3.795442100016666*^9}},ExpressionUUID->"e9f9f5f1-a393-4a00-a335-\
b0295182a240"],

Cell["Hence, this an optional step.", "SubsubitemNumbered",
 CellChangeTimes->{{3.7954331381824093`*^9, 3.7954332648649683`*^9}, {
   3.795433308352738*^9, 3.7954333121778316`*^9}, 3.795433378922604*^9, {
   3.7954419242351437`*^9, 3.795442130613262*^9}, {3.7954424418620977`*^9, 
   3.79544244859126*^9}},ExpressionUUID->"7ee7fd67-2d00-49d5-bf9a-\
347861aef8a8"]
}, Open  ]]
}, Open  ]],

Cell["\<\
Assign stocks initial conditions for each of the sites in multi-scale model.\
\>", "ItemNumbered",
 CellChangeTimes->{{3.7954331381824093`*^9, 3.795433291460206*^9}, {
  3.79544245495677*^9, 
  3.795442478671474*^9}},ExpressionUUID->"e427fd51-3f1f-44f5-95b1-\
4d63812c4aa0"],

Cell["Assign rates for each of the sites.", "ItemNumbered",
 CellChangeTimes->{{3.7954331381824093`*^9, 3.795433304043445*^9}, {
  3.7954333903215218`*^9, 
  3.7954333928468122`*^9}},ExpressionUUID->"c37eb527-113b-47b8-91db-\
fa3225818fd9"],

Cell["Simulate.", "ItemNumbered",
 CellChangeTimes->{{3.7954331381824093`*^9, 3.795433304043445*^9}, {
  3.7954333903215218`*^9, 
  3.795433397054606*^9}},ExpressionUUID->"b80c5629-caa4-43b0-8d75-\
5a8530733be6"],

Cell["Plot global simulation results.", "ItemNumbered",
 CellChangeTimes->{{3.7954331381824093`*^9, 3.795433304043445*^9}, {
  3.7954333903215218`*^9, 
  3.795433429044509*^9}},ExpressionUUID->"22e73442-8067-4cec-8261-\
3f1f21d1615d"],

Cell["Plot simulation results for focus sites.", "ItemNumbered",
 CellChangeTimes->{{3.7954331381824093`*^9, 3.795433304043445*^9}, {
  3.7954333903215218`*^9, 3.79543342130469*^9}, {3.795433944550462*^9, 
  3.795433944899562*^9}, {3.795442489245907*^9, 3.7954425005641947`*^9}, {
  3.818890649624918*^9, 
  3.818890649626615*^9}},ExpressionUUID->"af8c99a6-ddfc-4fdd-894b-\
a039806b3cb0"],

Cell["Calibrate the model", "ItemNumbered",
 CellChangeTimes->{{3.7954331381824093`*^9, 3.795433304043445*^9}, {
  3.7954333903215218`*^9, 3.79543342130469*^9}, {3.795433944550462*^9, 
  3.795433944899562*^9}, {3.795442489245907*^9, 3.7954425005641947`*^9}, {
  3.8188906506099854`*^9, 
  3.818890674454564*^9}},ExpressionUUID->"d81602f2-4b8a-464c-93f1-\
4b88dfefbb30"],

Cell["Batch simulate", "ItemNumbered",
 CellChangeTimes->{{3.7954331381824093`*^9, 3.795433304043445*^9}, {
  3.7954333903215218`*^9, 3.79543342130469*^9}, {3.795433944550462*^9, 
  3.795433944899562*^9}, {3.795442489245907*^9, 3.7954425005641947`*^9}, {
  3.8188906506099854`*^9, 3.8188906838089933`*^9}, {3.818890900167104*^9, 
  3.818890900168764*^9}},ExpressionUUID->"e98ebb03-e165-4f98-8aba-\
9dca3b331576"],

Cell["Export results", "ItemNumbered",
 CellChangeTimes->{{3.7954331381824093`*^9, 3.795433304043445*^9}, {
  3.7954333903215218`*^9, 3.79543342130469*^9}, {3.795433944550462*^9, 
  3.795433944899562*^9}, {3.795442489245907*^9, 3.7954425005641947`*^9}, {
  3.8188906506099854`*^9, 3.8188906838089933`*^9}, {3.81889090060015*^9, 
  3.818890903210184*^9}},ExpressionUUID->"983bd96b-d12a-4dbb-83b4-\
06105b37fc8a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Single-site models", "Section",
 CellChangeTimes->{{3.818439183451489*^9, 
  3.818439212124892*^9}},ExpressionUUID->"cf3ba30f-cdd2-4de9-9071-\
229c278df21f"],

Cell["\<\
We have a collection of single-site models that have different properties and \
different modeling goals, [AAp3, AA7, AA8]. Here is as diagram of a \
single-site model that includes hospital beds and medical supplies as \
limitation resources, [AA7]:\
\>", "Text",
 CellChangeTimes->{{3.7972398929582577`*^9, 3.797240037039238*^9}, {
  3.818439433865493*^9, 
  3.8184394392205544`*^9}},ExpressionUUID->"97bf9e24-1e68-4fc8-b7f5-\
0d258bb24d2b"],

Cell[BoxData[
 RowBox[{"Import", "[", 
  "\"\<https://github.com/antononcube/SystemModeling/raw/master/Projects/\
Coronavirus-propagation-dynamics/Diagrams/Coronavirus-propagation-simple-\
dynamics.jpeg\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.818533052785928*^9, 3.818533056511855*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"786884fd-b2e5-4011-96ea-88207553ac01"],

Cell[CellGroupData[{

Cell["SEI2HR model", "Subsection",
 CellChangeTimes->{{3.818439791666689*^9, 3.818439793016231*^9}, {
  3.818440412608404*^9, 3.818440427919792*^9}, {3.818440834590946*^9, 
  3.818440835467952*^9}},ExpressionUUID->"51d30c49-507d-48b7-91ae-\
eadf2bce7f92"],

Cell["\<\
In this sub-section we briefly describe the model SEI2HR, which is used in \
the examples below.\
\>", "Text",
 CellChangeTimes->{{3.818440922511074*^9, 3.818440952103402*^9}, {
  3.8184410163942823`*^9, 
  3.818441033078402*^9}},ExpressionUUID->"e3008776-528e-4720-91d4-\
62326953f3a7"],

Cell[TextData[{
 StyleBox["Remark:",
  FontWeight->"Bold"],
 " SEI2HR stands for \"Susceptible, Exposed, Infected Two, Hospitalized, \
Recovered\" (populations)."
}], "Text",
 CellChangeTimes->{{3.818440922511074*^9, 
  3.818440966275742*^9}},ExpressionUUID->"daffa402-48c8-451b-be1c-\
67dab813f95a"],

Cell["Detailed description of the SEI2HR model is given in [AA7].", "Text",
 CellChangeTimes->{{3.8184405155246973`*^9, 3.818440615482123*^9}, {
  3.818440823993312*^9, 3.818440825612866*^9}, {3.818440982440242*^9, 
  3.818440983677863*^9}},ExpressionUUID->"0dd21276-83e2-4eb0-ad9b-\
6e6c7bcc7f87"],

Cell[CellGroupData[{

Cell["Verbal description", "Subsubsection",
 CellChangeTimes->{{3.8184397969087353`*^9, 3.8184398244636927`*^9}, {
   3.8184399618360767`*^9, 3.818439962206957*^9}, 3.818440253654583*^9, {
   3.8184403054063253`*^9, 3.8184403057317*^9}, {3.818440842746839*^9, 
   3.818440842893188*^9}},ExpressionUUID->"04dd5743-a3c3-4a08-b29f-\
12c42f373597"],

Cell["\<\
We start with one infected (normally symptomatic) person, the rest of the \
people are susceptible. The infected people meet other people directly or get \
in contact with them indirectly. (Say, susceptible people touch things \
touched by infected.) For each susceptible person there is a probability to \
get the decease. The decease has an incubation period: before becoming \
infected the susceptible are (merely) exposed. The infected recover after a \
certain average infection period or die. A certain fraction of the infected \
become severely symptomatic. If there are enough hospital beds the severely \
symptomatic infected are hospitalized. The hospitalized severely infected \
have different death rate than the non-hospitalized ones. The number of \
hospital beds might change: hospitals are extended, new hospitals are build, \
or there are not enough medical personnel or supplies. The deaths from \
infection are tracked (accumulated.) Money for hospital services and money \
from lost productivity are tracked (accumulated.) \
\>", "Text",
 CellChangeTimes->{
  3.818440257751775*^9, {3.818440861603363*^9, 3.8184408643590593`*^9}, {
   3.818440991013218*^9, 
   3.818440993583611*^9}},ExpressionUUID->"7abb1b37-a896-49e1-8ce4-\
b51c700027b4"],

Cell["\<\
The equations below give mathematical interpretation of the model description \
above.\
\>", "Text",
 CellChangeTimes->{
  3.818440257751775*^9, {3.818440861603363*^9, 3.8184408643590593`*^9}, {
   3.818440991013218*^9, 
   3.818440992104309*^9}},ExpressionUUID->"e1fdf9f7-249a-4537-bb9e-\
c8e76eb0b72e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Equations", "Subsubsection",
 CellChangeTimes->{{3.818440898502843*^9, 
  3.818440900156692*^9}},ExpressionUUID->"5a9788c5-7c06-41fa-8b65-\
e58bbf9115b4"],

Cell["\<\
Here are the equations of one the epidemiology compartmental models, SEI2HR, \
[AA7], implemented in [AAp3]:\
\>", "Text",
 CellChangeTimes->{{3.797345123826395*^9, 3.797345168702682*^9}, {
  3.797345223683494*^9, 3.797345294887656*^9}, {3.8184394576603518`*^9, 
  3.818439462036113*^9}, {3.818440632178224*^9, 
  3.818440633392252*^9}},ExpressionUUID->"c63e17b8-e6c9-44ad-9cd3-\
fb1a27a6e897"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ModelGridTableForm", "[", 
   RowBox[{
    RowBox[{"SEI2HRModel", "[", 
     RowBox[{"t", ",", 
      RowBox[{
      "\"\<TotalPopulationRepresentation\>\"", "\[Rule]", 
       "\"\<AlgebraicEquation\>\""}]}], "]"}], ",", 
    RowBox[{"\"\<Tooltips\>\"", "\[Rule]", "False"}]}], "]"}], "[", 
  "\"\<Equations\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7973449928765783`*^9, 3.797345017737121*^9}, {
  3.797345049734861*^9, 3.7973450926220303`*^9}, {3.818884780434512*^9, 
  3.818884808683879*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"dbe3f2c9-77f1-4923-a8d8-49088630a8fa"],

Cell["\<\
The equations for Susceptible, Exposed, Infected, Recovered populations of \
SEI2R are \"standard\" and explanations about them are found in [WK2, HH1]. \
For SEI2HR those equations change because of the stocks Hospitalized \
Population and Hospital Beds.\
\>", "Text",
 CellChangeTimes->{{3.788260077985444*^9, 3.788260105345427*^9}, {
   3.7882601403341007`*^9, 3.78826015034595*^9}, 3.7882602818559847`*^9, 
   3.792432164390764*^9, {3.795009800846743*^9, 3.795009812581058*^9}, {
   3.795010208879356*^9, 3.795010279710746*^9}, {3.795010347797497*^9, 
   3.795010465495901*^9}, {3.818440455787026*^9, 
   3.81844045590897*^9}},ExpressionUUID->"da50b50d-88b9-4356-90c3-\
eba674e6c933"],

Cell["\<\
The equations time unit is one day. The time horizon is one year. In this \
document we consider COVID-19, [Wk2, AA1], hence we do not consider births.\
\>", "Text",
 CellChangeTimes->{{3.795057270866074*^9, 3.795057331077129*^9}, {
  3.7951690526899*^9, 3.795169074334569*^9}, {3.795169140666552*^9, 
  3.79516914405199*^9}, {3.818440783121025*^9, 
  3.818440809749507*^9}},ExpressionUUID->"05e4b5ce-f509-4fca-bc1d-\
6a8a1025fac5"],

Cell[TextData[{
 StyleBox["Remark:",
  FontWeight->"Bold"],
 " This single-site model with ",
 Cell[BoxData[
  FormBox["11", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "bc77a396-292d-40f2-94d9-dce12e0ce1ea"],
 " equations is extended to a multi-site model with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[TildeTilde]", "5000"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "703a20e7-1e16-43dd-9d5c-2f68824ab972"],
 " equations below."
}], "Text",
 CellChangeTimes->{{3.8188848353914347`*^9, 3.818884877085206*^9}, {
  3.818885015946204*^9, 3.8188850592029333`*^9}, {3.818891029617402*^9, 
  3.818891029920744*^9}},ExpressionUUID->"3d66e081-69dd-4531-900a-\
9418a43d7f92"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Single-site model workflow demo", "Section",
 CellChangeTimes->{{3.7954325290972843`*^9, 3.795432539098166*^9}, {
  3.795433033837585*^9, 3.795433036874694*^9}, {3.795442978844274*^9, 
  3.795442979460993*^9}, {3.8184392049815187`*^9, 
  3.81843922084326*^9}},ExpressionUUID->"7c3669e8-7b0f-4081-b65a-\
daa86b6409de"],

Cell[TextData[{
 "In this section we demonstrate the simplest ",
 StyleBox["ECMMon", "Program"],
 " workflow and extend it with sensitivity analysis steps. The sensitivity \
analysis is simple, for demonstration purposes only; for more elaborated \
discussions see [AA6, BC1]."
}], "Text",
 CellChangeTimes->{{3.795433116908766*^9, 3.7954331241196423`*^9}, {
  3.79543395196533*^9, 3.795433991384623*^9}, {3.79543528407828*^9, 
  3.795435296002982*^9}, {3.8188047238581963`*^9, 3.818804782518209*^9}, {
  3.81880484362895*^9, 3.818804946298427*^9}, {3.81880760750404*^9, 
  3.818807611092577*^9}, {3.818807647981749*^9, 
  3.818807688763393*^9}},ExpressionUUID->"4f9d7bc2-f421-4997-b397-\
85fdec978ef5"],

Cell[CellGroupData[{

Cell["Workflow steps", "Subsection",
 CellChangeTimes->{{3.8188025248905277`*^9, 3.818802531786685*^9}, {
   3.818804714026123*^9, 3.8188047172097263`*^9}, 
   3.8188049587301598`*^9},ExpressionUUID->"9f518ab1-a5cf-4a29-a7c3-\
24c5fc7960d5"],

Cell["Here are the workflow steps:", "Text",
 CellChangeTimes->{{3.818802507159931*^9, 3.818802515102592*^9}, {
  3.818802564715933*^9, 
  3.818802565920014*^9}},ExpressionUUID->"147d58af-ad41-4dda-900f-\
f17da34ec301"],

Cell["Create a single-site model", "ItemNumbered",
 CellChangeTimes->{{3.8188025710611067`*^9, 3.8188025887194777`*^9}, {
  3.818802744305709*^9, 
  3.818802744307336*^9}},ExpressionUUID->"8c21bc67-98c6-4ad2-bec3-\
1dd3523b1149"],

Cell[CellGroupData[{

Cell["Make an associations with suitable model parameters:", "ItemNumbered",
 CellChangeTimes->{{3.8188025710611067`*^9, 3.818802588138898*^9}, {
  3.818802667993868*^9, 3.818802684367901*^9}, {3.8188027311738358`*^9, 
  3.8188027406509027`*^9}, {3.818805287606024*^9, 
  3.81880536245356*^9}},ExpressionUUID->"568954ea-c022-4335-b30b-\
890278f84d03"],

Cell["Initial conditions for the stocks", "SubitemNumbered",
 CellChangeTimes->{{3.8188025710611067`*^9, 3.818802588138898*^9}, {
  3.818802667993868*^9, 3.818802684367901*^9}, {3.8188027311738358`*^9, 
  3.8188027406509027`*^9}, {3.818805287606024*^9, 
  3.818805372983685*^9}},ExpressionUUID->"0c24b711-9288-4389-b93f-\
70c6c12e3bc1"],

Cell["Values for the rates", "SubitemNumbered",
 CellChangeTimes->{{3.8188025710611067`*^9, 3.818802588138898*^9}, {
  3.818802667993868*^9, 3.818802684367901*^9}, {3.8188027311738358`*^9, 
  3.8188027406509027`*^9}, {3.818805287606024*^9, 
  3.818805410604545*^9}},ExpressionUUID->"7a403de2-505b-4954-b4bf-\
262c0af43663"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Given a certain epidemic management policy, program suitable functions for \
model\[CloseCurlyQuote]s rates\
\>", "ItemNumbered",
 CellChangeTimes->{{3.8188025710611067`*^9, 3.818802588138898*^9}, {
  3.818802667993868*^9, 3.818802684367901*^9}, {3.8188027311738358`*^9, 
  3.81880284676234*^9}},ExpressionUUID->"3e3b63d2-fd7e-4165-9294-\
64fd521b8642"],

Cell["\<\
For example, quarantine policies can be modeled with a piecewise functions \
\>", "SubitemNumbered",
 CellChangeTimes->{{3.8188025710611067`*^9, 3.818802588138898*^9}, {
  3.818802667993868*^9, 3.818802684367901*^9}, {3.8188027311738358`*^9, 
  3.818802896855411*^9}, {3.8188048055208683`*^9, 
  3.818804805523679*^9}},ExpressionUUID->"28481567-0d40-40ce-9539-\
7f9ade453844"]
}, Open  ]],

Cell["Simulate with the model and verify results", "ItemNumbered",
 CellChangeTimes->{{3.8188025710611067`*^9, 3.818802588138898*^9}, {
  3.818802667993868*^9, 3.818802684367901*^9}, {3.8188027311738358`*^9, 
  3.818802896855411*^9}, {3.818804807482483*^9, 
  3.818804825662506*^9}},ExpressionUUID->"aa336c3f-fa70-425b-8ca9-\
0c7a2e7ba2f9"],

Cell[CellGroupData[{

Cell["Do sensitivity analysis", "ItemNumbered",
 CellChangeTimes->{{3.8188025710611067`*^9, 3.818802588138898*^9}, {
  3.818802667993868*^9, 3.818802706249762*^9}, {3.818802903380701*^9, 
  3.818802910433436*^9}, {3.818803399780846*^9, 3.8188034467764473`*^9}, {
  3.818804826866207*^9, 
  3.818804836305101*^9}},ExpressionUUID->"6aeb1495-71f6-44c1-8ea4-\
783988517ae9"],

Cell["\<\
For a range of values of a chosen parameter (or a set of parameters) \
\>", "SubitemNumbered",
 CellChangeTimes->{{3.8188025710611067`*^9, 3.818802588138898*^9}, {
  3.818802667993868*^9, 3.818802706249762*^9}, {3.818802903380701*^9, 
  3.818802910433436*^9}, {3.818803399780846*^9, 3.8188034467764473`*^9}, {
  3.818804826866207*^9, 
  3.818804833065085*^9}},ExpressionUUID->"733fbf89-4832-46aa-9a62-\
7be5f3cc6233"],

Cell["Simulate the for a certain number of days", "SubitemNumbered",
 CellChangeTimes->{{3.8188025710611067`*^9, 3.818802588138898*^9}, {
  3.818802667993868*^9, 3.818802706249762*^9}, {3.818802903380701*^9, 
  3.818802910433436*^9}, {3.818803399780846*^9, 
  3.8188034484712963`*^9}},ExpressionUUID->"ea142e61-3026-41b6-aa01-\
215d5196b605"],

Cell["Plot the results of each simulation", "SubitemNumbered",
 CellChangeTimes->{{3.8188025710611067`*^9, 3.818802588138898*^9}, {
  3.818802667993868*^9, 3.818802706249762*^9}, {3.818802903380701*^9, 
  3.818802910433436*^9}, {3.818803399780846*^9, 
  3.8188034569539137`*^9}},ExpressionUUID->"37c638af-3f56-4a3d-b456-\
50ae266d318b"]
}, Open  ]],

Cell["\<\
Both theoretical and computational details of the workflow above are given \
[AA7, AA8]. For the calibration of the models built with this workflow see \
the sections below.\
\>", "Text",
 CellChangeTimes->{
  3.818806014526863*^9, {3.818884672197315*^9, 3.81888470732953*^9}, {
   3.818890960237866*^9, 
   3.8188909925813437`*^9}},ExpressionUUID->"567a0227-a66d-4fec-be61-\
ef2e51194ba5"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Basic workflow", "Subsection",
 CellChangeTimes->{{3.818802537468164*^9, 3.818802561465002*^9}, {
  3.818805620915577*^9, 3.818805623412697*^9}, {3.818806036036371*^9, 
  3.8188060442816772`*^9}, {3.81880794205025*^9, 
  3.818807960725099*^9}},ExpressionUUID->"12f4d74c-0f68-486d-9d88-\
2fca7ac0a6d5"],

Cell["\<\
In this sub-section we go through the steps 1-4 of the workflow above. \
\>", "Text",
 CellChangeTimes->{{3.818807107005575*^9, 
  3.818807145953994*^9}},ExpressionUUID->"a1f57b0c-62be-41b4-8395-\
b7ac693392ff"],

Cell["Make a single-site model, SEI2HR:", "Text",
 CellChangeTimes->{{3.795433052895196*^9, 3.795433055459755*^9}, {
  3.795433995727807*^9, 3.795434002590479*^9}, {3.8184403209521627`*^9, 
  3.81844033472246*^9}, {3.8188071025269403`*^9, 3.818807104845667*^9}, {
  3.8188072133205643`*^9, 
  3.81880721451222*^9}},ExpressionUUID->"982f9816-3875-48b4-8053-\
4de3882705ca"],

Cell[BoxData[
 RowBox[{
  RowBox[{"model1", "=", 
   RowBox[{"SEI2HRModel", "[", 
    RowBox[{"t", ",", 
     RowBox[{"\"\<InitialConditions\>\"", "\[Rule]", "True"}], ",", 
     RowBox[{"\"\<RateRules\>\"", "\[Rule]", "True"}], ",", 
     RowBox[{
     "\"\<TotalPopulationRepresentation\>\"", "\[Rule]", 
      "\"\<AlgebraicEquation\>\""}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.795302408170039*^9, 3.7953024585253477`*^9}, {
  3.7953269658275537`*^9, 3.795326967897008*^9}, {3.818440337964449*^9, 
  3.818440338413127*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"f09cdba5-8e5e-428a-8cca-3faf79bd69a4"],

Cell["Make an association with \[OpenCurlyDoubleQuote]default\
\[CloseCurlyDoubleQuote] parameters:", "Text",
 CellChangeTimes->{{3.818466492236445*^9, 
  3.818466519000889*^9}},ExpressionUUID->"024b1c9e-06f4-4652-b418-\
872b64436825"],

Cell[BoxData[
 RowBox[{
  RowBox[{"aDefaultPars", "=", 
   RowBox[{"<|", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"aip", "\[Rule]", "26"}], ",", "\[IndentingNewLine]", 
     RowBox[{"aincp", "\[Rule]", "5"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Beta]", "[", "ISSP", "]"}], "\[Rule]", "0.5"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Beta]", "[", "INSP", "]"}], "\[Rule]", "0.5"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"qsd", "\[Rule]", "60"}], ",", "\[IndentingNewLine]", 
     RowBox[{"ql", "\[Rule]", "21"}], ",", "\[IndentingNewLine]", 
     RowBox[{"qcrf", "\[Rule]", "0.25"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Beta]", "[", "HP", "]"}], "\[Rule]", "0.01"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Mu]", "[", "ISSP", "]"}], "\[Rule]", 
      RowBox[{"0.035", "/", "aip"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Mu]", "[", "INSP", "]"}], "\[Rule]", 
      RowBox[{"0.01", "/", "aip"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"nhbr", "[", "TP", "]"}], "\[Rule]", 
      RowBox[{"3", "/", "1000"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"lpcr", "[", 
       RowBox[{"ISSP", ",", "INSP"}], "]"}], "\[Rule]", "1"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"hscr", "[", 
       RowBox[{"ISSP", ",", "INSP"}], "]"}], "\[Rule]", "1"}]}], 
    "\[IndentingNewLine]", "|>"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.818466521511311*^9, 3.818466526203465*^9}, {
  3.818466582173565*^9, 3.818466589337861*^9}, {3.818805644598661*^9, 
  3.818805648535306*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"60c4190d-a281-4609-bd51-cdcc0a705fac"],

Cell["Here is a simulation computations pipeline:", "Text",
 CellChangeTimes->{{3.8188054373576097`*^9, 3.8188054855530453`*^9}, {
  3.818806119478509*^9, 3.818806153070909*^9}, {3.8188062325196857`*^9, 
  3.818806257686818*^9}, {3.818806317897764*^9, 3.818806402048995*^9}, {
  3.8188067922037973`*^9, 3.81880681623359*^9}, {3.818806968448728*^9, 
  3.818806978708064*^9}},ExpressionUUID->"9f83a89c-3838-401d-8d20-\
b500272c9ab9"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ECMMonUnit", "[", "]"}], "\[DoubleLongRightArrow]", 
   "\[IndentingNewLine]", 
   RowBox[{"ECMMonSetSingleSiteModel", "[", "model1", "]"}], 
   "\[DoubleLongRightArrow]", "\[IndentingNewLine]", 
   RowBox[{"ECMMonAssignRateRules", "[", "aDefaultPars", "]"}], 
   "\[DoubleLongRightArrow]", "\[IndentingNewLine]", 
   RowBox[{"ECMMonSimulate", "[", "240", "]"}], "\[DoubleLongRightArrow]", 
   "\[IndentingNewLine]", 
   RowBox[{"ECMMonPlotSolutions", "[", 
    RowBox[{
     RowBox[{"__", "~~", "\"\<Population\>\""}], ",", "Automatic"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8188041901284246`*^9, 3.8188042225073338`*^9}, {
  3.8188043191698217`*^9, 3.818804426845832*^9}, {3.818805545272498*^9, 
  3.8188055852453423`*^9}, {3.818806086551694*^9, 3.8188061012530003`*^9}, {
  3.818806672155594*^9, 3.8188066819297867`*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"f00412c0-f166-4ad3-bb64-0336e74a1dfe"],

Cell["\<\
The following table explains each step in the pipeline above:\
\>", "Text",
 CellChangeTimes->{{3.8188068389142714`*^9, 
  3.818806861549449*^9}},ExpressionUUID->"62e12166-e273-4c3b-97d9-\
478ff9990df2"],

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {
      TemplateBox[{
        StyleBox[
         TagBox[
          RowBox[{"ECMMonUnit", "[", "]"}], HoldForm], "Input", StripOnInput -> 
         False], 
        StyleBox[
        "\"\[ThinSpace]\[DoubleLongRightArrow]\"", "Input", StripOnInput -> 
         False]},
       "RowDefault"], 
      StyleBox["\<\"Create the monad object\"\>",
       StripOnInput->False,
       ShowAutoStyles->False,
       ShowSyntaxStyles->False,
       TranslationOptions->{"Enabled"->False},
       AutoNumberFormatting->False,
       FontWeight->"Normal",
       FontColor->RGBColor[0.27, 0.58, 0.68]]},
     {
      TemplateBox[{"\"  \"", 
        StyleBox[
         TagBox[
          RowBox[{"ECMMonSetSingleSiteModel", "[", "model1", "]"}], HoldForm],
          "Input", StripOnInput -> False], 
        StyleBox[
        "\"\[ThinSpace]\[DoubleLongRightArrow]\"", "Input", StripOnInput -> 
         False]},
       "RowDefault"], 
      StyleBox["\<\"Set a single-site model\"\>",
       StripOnInput->False,
       ShowAutoStyles->False,
       ShowSyntaxStyles->False,
       TranslationOptions->{"Enabled"->False},
       AutoNumberFormatting->False,
       FontWeight->"Normal",
       FontColor->RGBColor[0.27, 0.58, 0.68]]},
     {
      TemplateBox[{"\"  \"", 
        StyleBox[
         TagBox[
          RowBox[{"ECMMonAssignRateRules", "[", "aDefaultPars", "]"}], 
          HoldForm], "Input", StripOnInput -> False], 
        StyleBox[
        "\"\[ThinSpace]\[DoubleLongRightArrow]\"", "Input", StripOnInput -> 
         False]},
       "RowDefault"], 
      StyleBox["\<\"Assign default parameters\"\>",
       StripOnInput->False,
       ShowAutoStyles->False,
       ShowSyntaxStyles->False,
       TranslationOptions->{"Enabled"->False},
       AutoNumberFormatting->False,
       FontWeight->"Normal",
       FontColor->RGBColor[0.27, 0.58, 0.68]]},
     {
      TemplateBox[{"\"  \"", 
        StyleBox[
         TagBox[
          RowBox[{"ECMMonSimulate", "[", "240", "]"}], HoldForm], "Input", 
         StripOnInput -> False], 
        StyleBox[
        "\"\[ThinSpace]\[DoubleLongRightArrow]\"", "Input", StripOnInput -> 
         False]},
       "RowDefault"], 
      StyleBox["\<\"Simulate for 240 days\"\>",
       StripOnInput->False,
       ShowAutoStyles->False,
       ShowSyntaxStyles->False,
       TranslationOptions->{"Enabled"->False},
       AutoNumberFormatting->False,
       FontWeight->"Normal",
       FontColor->RGBColor[0.27, 0.58, 0.68]]},
     {
      TemplateBox[{"\"  \"", 
        StyleBox[
         TagBox[
          RowBox[{"ECMMonPlotSolutions", "[", 
            RowBox[{
              RowBox[{"__", "~~", "\"\\\"Population\\\"\""}], ",", 
              "Automatic"}], "]"}], HoldForm], "Input", StripOnInput -> 
         False]},
       "RowDefault"], 
      StyleBox["\<\"Plot simulation results\"\>",
       StripOnInput->False,
       ShowAutoStyles->False,
       ShowSyntaxStyles->False,
       TranslationOptions->{"Enabled"->False},
       AutoNumberFormatting->False,
       FontWeight->"Normal",
       FontColor->RGBColor[0.27, 0.58, 0.68]]}
    },
    AutoDelete->False,
    FrameStyle->Directive[
      Dashing[2], 
      GrayLevel[0.87]],
    GridBoxAlignment->{"Columns" -> {{Left}}},
    GridBoxDividers->{"Columns" -> {{True}}, "Rows" -> {{True}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  StripOnInput->False]], "Output",
 CellChangeTimes->{{3.818806932217556*^9, 3.818806941198471*^9}},
 CellLabel->
  "Out[156]=",ExpressionUUID->"854af7cb-d113-422e-a056-4cb06d64764f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Sensitivity analysis workflow", "Subsection",
 CellChangeTimes->{{3.818803816880867*^9, 3.818803818927865*^9}, {
  3.818805715090953*^9, 3.818805739041988*^9}, {3.8188069920409613`*^9, 
  3.8188070185903387`*^9}},ExpressionUUID->"30878f18-20d5-45dd-bcf2-\
ac95830af34a"],

Cell["\<\
In this sub-section we go through the step 5 of the workflow above. \
\>", "Text",
 CellChangeTimes->{{3.818807107005575*^9, 3.818807145953994*^9}, {
  3.818807185205529*^9, 
  3.818807187714267*^9}},ExpressionUUID->"1472ff44-ab4d-40e6-b1e0-\
34375c7e5b75"],

Cell["\<\
Redefine the associations with default parameters to use piecewise constant \
functions for the contact rates:\
\>", "Text",
 CellChangeTimes->{{3.818449018876643*^9, 3.818449080145329*^9}, {
  3.818805978909791*^9, 3.8188060068523684`*^9}, {3.818807004303928*^9, 
  3.818807015261261*^9}, {3.818807194600499*^9, 
  3.818807207964568*^9}},ExpressionUUID->"eb56676c-065c-40b1-8d9b-\
9e303d109939"],

Cell[BoxData[
 RowBox[{
  RowBox[{"aQurantinePars", "=", 
   RowBox[{"Join", "[", "\[IndentingNewLine]", 
    RowBox[{"aDefaultPars", ",", "\[IndentingNewLine]", 
     RowBox[{"<|", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Beta]", "[", "ISSP", "]"}], "\[Rule]", 
        RowBox[{"0.5", "*", 
         RowBox[{"Piecewise", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", 
               RowBox[{"t", "<", "qsd"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"qcrf", ",", 
               RowBox[{"qsd", "\[LessEqual]", "t", "\[LessEqual]", 
                RowBox[{"qsd", "+", "ql"}]}]}], "}"}]}], "}"}], ",", "1"}], 
          "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[Beta]", "[", "INSP", "]"}], "\[Rule]", 
        RowBox[{"0.5", "*", 
         RowBox[{"Piecewise", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", 
               RowBox[{"t", "<", "qsd"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"qcrf", ",", 
               RowBox[{"qsd", "\[LessEqual]", "t", "\[LessEqual]", 
                RowBox[{"qsd", "+", "ql"}]}]}], "}"}]}], "}"}], ",", "1"}], 
          "]"}]}]}]}], "|>"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.818466521511311*^9, 3.818466526203465*^9}, {
  3.818466582173565*^9, 3.818466589337861*^9}, {3.818805652326908*^9, 
  3.818805688281893*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"bab88daf-2d85-4128-b7c8-752e18de16fa"],

Cell["\<\
Simulate the model multiple times with different quarantine starts and same \
length:\
\>", "Text",
 CellChangeTimes->{{3.795433059914815*^9, 3.7954331101582537`*^9}, {
  3.8188072024979143`*^9, 3.818807203633494*^9}, {3.8188074723885393`*^9, 
  3.818807528504457*^9}},ExpressionUUID->"7de08736-93ef-4eda-9590-\
fbec47e7f282"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"qlVar", "=", "56"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"aRes", "=", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ECMMonUnit", "[", "]"}], "\[DoubleLongRightArrow]", 
    "\[IndentingNewLine]", 
    RowBox[{"ECMMonSetSingleSiteModel", "[", "model1", "]"}], 
    "\[DoubleLongRightArrow]", "\[IndentingNewLine]", 
    RowBox[{"ECMMonAssignRateRules", "[", "aQurantinePars", "]"}], 
    "\[DoubleLongRightArrow]", "\[IndentingNewLine]", 
    RowBox[{"ECMMonBatchSimulate", "[", 
     RowBox[{"\"\<Infected Severely Symptomatic Population\>\"", ",", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"qsd", "\[Rule]", 
         RowBox[{"Range", "[", 
          RowBox[{"25", ",", "100", ",", "5"}], "]"}]}], ",", 
        RowBox[{"ql", "\[Rule]", 
         RowBox[{"{", "qlVar", "}"}]}]}], "|>"}], ",", "365"}], "]"}], 
    "\[DoubleLongRightArrow]", "\[IndentingNewLine]", "ECMMonTakeValue"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.795434170940189*^9, 3.795434171097028*^9}, {
   3.795434227620096*^9, 3.7954342280569077`*^9}, {3.795434330965415*^9, 
   3.795434417713215*^9}, {3.795442582610836*^9, 3.795442760073991*^9}, {
   3.7954427988098183`*^9, 3.7954429217508793`*^9}, {3.818466482896792*^9, 
   3.818466484654703*^9}, {3.818466591543578*^9, 3.818466614900679*^9}, 
   3.818466645170699*^9, 3.818536473673691*^9, {3.818802926546932*^9, 
   3.818802939224996*^9}, {3.818802986882904*^9, 3.81880300969506*^9}, {
   3.818803054133762*^9, 3.81880311198979*^9}, {3.8188035106435213`*^9, 
   3.818803529798851*^9}, {3.818803581325568*^9, 3.818803585299078*^9}, 
   3.818805697487381*^9},
 CellLabel->"In[29]:=",ExpressionUUID->"dccd56cd-e75f-48fd-997a-7203157abcb3"],

Cell["\<\
Plot the simulation solutions for \[OpenCurlyDoubleQuote]Infected Severely \
Symptomatic Population\[CloseCurlyDoubleQuote]:\
\>", "Text",
 CellChangeTimes->{{3.795433081706512*^9, 
  3.795433099718218*^9}},ExpressionUUID->"e34d2713-3181-4a97-b3fc-\
c851b68d24c6"],

Cell[BoxData[
 RowBox[{"Multicolumn", "[", "\[IndentingNewLine]", 
  RowBox[{"KeyValueMap", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"ListLinePlot", "[", 
      RowBox[{"#2", ",", "\[IndentingNewLine]", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"Row", "[", 
         RowBox[{"{", 
          RowBox[{"\"\<Quarantine start:\>\"", ",", 
           RowBox[{"Spacer", "[", "5", "]"}], ",", 
           RowBox[{"#1", "[", "qsd", "]"}], ",", "\"\<,\>\"", ",", 
           RowBox[{"Spacer", "[", "5", "]"}], ",", "\"\<end:\>\"", ",", 
           RowBox[{"Spacer", "[", "5", "]"}], ",", 
           RowBox[{
            RowBox[{"#1", "[", "qsd", "]"}], "+", 
            RowBox[{"#1", "[", "ql", "]"}]}]}], "}"}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"Max", "[", 
           RowBox[{"Values", "/@", 
            RowBox[{"Values", "[", "aRes", "]"}]}], "]"}]}], "}"}]}], ",", 
       RowBox[{"Epilog", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Directive", "[", 
           RowBox[{"Orange", ",", "Dashed"}], "]"}], ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Scaled", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{"-", "1"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"#1", "[", "qsd", "]"}], ",", "0"}], "}"}]}], "]"}], 
             ",", 
             RowBox[{"Scaled", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"#1", "[", "qsd", "]"}], ",", "0"}], "}"}]}], 
              "]"}]}], "}"}], "]"}], ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Scaled", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{"-", "1"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#1", "[", "qsd", "]"}], "+", 
                  RowBox[{"#1", "[", "ql", "]"}]}], ",", "0"}], "}"}]}], 
              "]"}], ",", 
             RowBox[{"Scaled", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#1", "[", "qsd", "]"}], "+", 
                  RowBox[{"#1", "[", "ql", "]"}]}], ",", "0"}], "}"}]}], 
              "]"}]}], "}"}], "]"}]}], "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "250"}]}], "]"}], "&"}], ",", "aRes"}],
    "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.818803831902192*^9, 3.81880388712745*^9}, {
  3.818803917200213*^9, 3.8188039557537813`*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"c9fcb382-63d9-4868-ad53-ed63f9384612"],

Cell[TextData[{
 StyleBox["Remark:",
  FontWeight->"Bold"],
 " Instead of using the function ",
 StyleBox["ECMMonBatchSimulate", "Program"],
 " we can execute the workflow multiple times with different quarantine \
starts through ",
 StyleBox["Map", "Program"],
 "."
}], "Text",
 CellChangeTimes->{{3.818807265622223*^9, 3.8188074564700747`*^9}, {
  3.818807538653245*^9, 
  3.818807570782908*^9}},ExpressionUUID->"85bbcfd3-ada7-4c4c-9de4-\
e550a5dfaca0"],

Cell["\<\
The section \[OpenCurlyDoubleQuote]Batch simulations workflow\
\[CloseCurlyDoubleQuote] discusses in more detail different specifications of \
batch simulations. \
\>", "Text",
 CellChangeTimes->{{3.818807265622223*^9, 3.818807365215673*^9}, 
   3.818807581403132*^9},ExpressionUUID->"52290058-62ad-4f92-8005-\
fff0fa29ba8b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Multi-site workflow demo", "Section",
 CellChangeTimes->{{3.795434431897838*^9, 3.7954344418890047`*^9}, {
  3.7954429832309227`*^9, 
  3.7954429838276253`*^9}},ExpressionUUID->"68a09501-d11d-4b29-a215-\
cd1fd35a9163"],

Cell["\<\
In this section we demonstrate the multi-site model workflow using COVID-19 \
data for USA, [WRI2, NYT1]. \
\>", "Text",
 CellChangeTimes->{{3.818449119127634*^9, 
  3.818449183929195*^9}},ExpressionUUID->"2e086db0-3d20-4801-b6d6-\
99f176422fc0"],

Cell[CellGroupData[{

Cell["Workflow steps", "Subsection",
 CellChangeTimes->{{3.818807967318071*^9, 
  3.818807971907793*^9}},ExpressionUUID->"0a2cf5d8-632b-4efc-9e0a-\
5884c76603dc"],

Cell["\<\
A \[OpenCurlyDoubleQuote]standard\[CloseCurlyDoubleQuote] multi-site model \
workflow, without calibration, over real life data has the following steps:\
\>", "Text",
 CellChangeTimes->{{3.818867698852635*^9, 3.818867749473752*^9}, {
  3.81887107487149*^9, 
  3.81887112519265*^9}},ExpressionUUID->"97b3210d-1208-49d4-81b6-\
aeeaa3aa4891"],

Cell["Choose and make a single-site model", "ItemNumbered",
 CellChangeTimes->{{3.8188677541091843`*^9, 
  3.8188677825538692`*^9}},ExpressionUUID->"15f4bcfe-7f5a-45c7-8666-\
7848c2ce11df"],

Cell["Set default parameters for all sites", "ItemNumbered",
 CellChangeTimes->{{3.8188677541091843`*^9, 
  3.818867806707593*^9}},ExpressionUUID->"9c098f65-ac22-4084-94a9-\
19169ce9952c"],

Cell["Review the model", "ItemNumbered",
 CellChangeTimes->{{3.8188677541091843`*^9, 
  3.818867819031967*^9}},ExpressionUUID->"5de5859c-0b75-471b-b0d2-\
f00d37fcb4cf"],

Cell[CellGroupData[{

Cell["Make a grid of sites", "ItemNumbered",
 CellChangeTimes->{{3.8188677541091843`*^9, 3.818867818538589*^9}, {
  3.8188682165820637`*^9, 
  3.8188682330112677`*^9}},ExpressionUUID->"a354db2a-b7e0-43bf-b1bf-\
c02fac83058c"],

Cell["ECMMon has built-in hexagonal and rectangular grids", "SubitemNumbered",
 CellChangeTimes->{{3.8188677541091843`*^9, 3.818867818538589*^9}, {
  3.8188682165820637`*^9, 
  3.8188682573233147`*^9}},ExpressionUUID->"7c277540-59ef-4551-b8cf-\
fe14c80540ab"]
}, Open  ]],

Cell["\<\
Extend the single-site model into multi-site model with the grid of sites\
\>", "ItemNumbered",
 CellChangeTimes->{{3.8188677541091843`*^9, 3.818867818538589*^9}, {
  3.8188682165820637`*^9, 
  3.81886831105763*^9}},ExpressionUUID->"c01e49e5-8a53-4df8-8163-\
a25080f85f33"],

Cell[CellGroupData[{

Cell["\<\
Impose initial conditions for the multi-site model for the populations\
\>", "ItemNumbered",
 CellChangeTimes->{{3.8188677541091843`*^9, 3.818867818538589*^9}, {
  3.8188682165820637`*^9, 3.818868343635727*^9}, {3.818868399858713*^9, 
  3.818868406463101*^9}},ExpressionUUID->"2480f295-c42d-4f95-b567-\
6679dc53696b"],

Cell["Total", "SubitemNumbered",
 CellChangeTimes->{{3.8188677541091843`*^9, 3.818867818538589*^9}, {
  3.8188682165820637`*^9, 3.818868372329842*^9}, {3.818868407981411*^9, 
  3.818868408949074*^9}},ExpressionUUID->"e3abc047-150b-414a-b8db-\
e82fa70d4dcc"],

Cell["Susceptible", "SubitemNumbered",
 CellChangeTimes->{{3.8188677541091843`*^9, 3.818867818538589*^9}, {
  3.8188682165820637`*^9, 3.818868380849853*^9}, {3.818868412425538*^9, 
  3.818868412931574*^9}},ExpressionUUID->"0211c2f5-10f1-43bd-984b-\
4b3dbcad8b46"],

Cell["Exposed", "SubitemNumbered",
 CellChangeTimes->{{3.8188677541091843`*^9, 3.818867818538589*^9}, {
  3.8188682165820637`*^9, 
  3.8188684150241756`*^9}},ExpressionUUID->"d82f38de-a442-4c76-a45f-\
2dd97d7482f2"],

Cell["Infected", "SubitemNumbered",
 CellChangeTimes->{{3.8188677541091843`*^9, 3.818867818538589*^9}, {
  3.8188682165820637`*^9, 
  3.818868418594532*^9}},ExpressionUUID->"0f7d68be-3a45-40d1-9099-\
089bf07dddde"],

Cell["Deceased", "SubitemNumbered",
 CellChangeTimes->{{3.8188677541091843`*^9, 3.818867818538589*^9}, {
  3.8188682165820637`*^9, 3.818868449387084*^9}, {3.8188711407348547`*^9, 
  3.8188711407362967`*^9}},ExpressionUUID->"61410567-5f07-4302-8e27-\
c6c153d9ec60"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Set site-specific parameters", "ItemNumbered",
 CellChangeTimes->{{3.8188677541091843`*^9, 3.818867818538589*^9}, {
  3.8188682165820637`*^9, 3.818868449387084*^9}, {3.81887114342909*^9, 
  3.818871161254291*^9}},ExpressionUUID->"5ce91927-5ece-48e4-8373-\
a74687e692fc"],

Cell["Using site-specific observations or statistics", "SubitemNumbered",
 CellChangeTimes->{{3.8188677541091843`*^9, 3.818867818538589*^9}, {
  3.8188682165820637`*^9, 3.818868449387084*^9}, {3.81887114342909*^9, 
  3.818871206413413*^9}},ExpressionUUID->"44a5c661-73af-4ca7-9e5b-\
f79a5cc9e545"],

Cell["From a calibration process", "SubitemNumbered",
 CellChangeTimes->{{3.8188677541091843`*^9, 3.818867818538589*^9}, {
  3.8188682165820637`*^9, 3.818868449387084*^9}, {3.81887114342909*^9, 
  3.818871216735382*^9}},ExpressionUUID->"237da822-ba56-4a98-bc20-\
58a70535d273"]
}, Open  ]],

Cell["Plot geo-histograms for the infected populations", "ItemNumbered",
 CellChangeTimes->{{3.8188677541091843`*^9, 3.818867818538589*^9}, {
  3.8188682165820637`*^9, 3.818868468822543*^9}, {3.818868531239944*^9, 
  3.818868544385721*^9}},ExpressionUUID->"09447109-86fb-4363-a840-\
afe0c191179f"],

Cell["Simulate with multi-site model for a given time interval", \
"ItemNumbered",
 CellChangeTimes->{{3.8188677541091843`*^9, 3.818867818538589*^9}, {
  3.8188682165820637`*^9, 3.818868468822543*^9}, {3.818868531239944*^9, 
  3.818868584177497*^9}},ExpressionUUID->"7ac8b200-cc0a-4671-9ea6-\
783257101d89"],

Cell["Plot all-site solutions for selected stocks", "ItemNumbered",
 CellChangeTimes->{{3.8188677541091843`*^9, 3.818867818538589*^9}, {
  3.8188682165820637`*^9, 3.818868468822543*^9}, {3.818868531239944*^9, 
  3.818868650975484*^9}},ExpressionUUID->"05e098a8-d682-40b3-8138-\
b92ad3b7e2e4"],

Cell["Plot solutions of selected stocks for specific sites. ", "ItemNumbered",
 CellChangeTimes->{{3.8188677541091843`*^9, 3.818867818538589*^9}, {
  3.8188682165820637`*^9, 3.818868468822543*^9}, {3.818868531239944*^9, 
  3.818868680225895*^9}},ExpressionUUID->"df1a8403-3381-4380-aae9-\
b31d7a4735d9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Specification and execution", "Subsection",
 CellChangeTimes->{{3.818802499015864*^9, 3.818802500702702*^9}, {
  3.818807997267597*^9, 3.8188080027105417`*^9}, {3.818869076793611*^9, 
  3.818869083477003*^9}},ExpressionUUID->"c5ef8e0f-4c4c-4931-98ab-\
a3ffd1acda98"],

Cell["Here a \[OpenCurlyDoubleQuote]seed\[CloseCurlyDoubleQuote], single-site \
model is created:", "Text",
 CellChangeTimes->{{3.818449189914085*^9, 
  3.818449227432926*^9}},ExpressionUUID->"908932d6-130d-4bfb-9bb1-\
ef91a8550d11"],

Cell[BoxData[
 RowBox[{
  RowBox[{"model1", "=", 
   RowBox[{"SEI2HRModel", "[", 
    RowBox[{"t", ",", 
     RowBox[{"\"\<InitialConditions\>\"", "\[Rule]", "True"}], ",", 
     RowBox[{"\"\<RateRules\>\"", "\[Rule]", "True"}], ",", 
     RowBox[{
     "\"\<TotalPopulationRepresentation\>\"", "\[Rule]", 
      "\"\<AlgebraicEquation\>\""}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.795302408170039*^9, 3.7953024585253477`*^9}, 
   3.795351746792047*^9, 3.7954346571521683`*^9, 3.795435011691148*^9},
 CellLabel->"In[32]:=",ExpressionUUID->"73a60e81-a8a1-489d-a74b-e4d2abd7f728"],

Cell["\<\
Here we specify a multi-site model workflow (the monadic steps are separated \
and described with purple print-outs):\
\>", "Text",
 CellChangeTimes->{{3.795434443913897*^9, 3.795434469767128*^9}, {
  3.795434502639468*^9, 3.7954345115497828`*^9}, {3.7954355539920387`*^9, 
  3.795435554892584*^9}, {3.818449093748375*^9, 3.8184491118364*^9}, {
  3.818449232979476*^9, 
  3.818449284651331*^9}},ExpressionUUID->"47dd18d4-9b96-4977-923d-\
51d65a82275d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ecmObjUSA", "=", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ECMMonUnit", "[", "]"}], "\[DoubleLongRightArrow]", 
    "\[IndentingNewLine]", 
    RowBox[{"ECMMonSetSingleSiteModel", "[", "model1", "]"}], 
    "\[DoubleLongRightArrow]", "\[IndentingNewLine]", 
    RowBox[{"ECMMonAssignRateRules", "[", "\[IndentingNewLine]", 
     RowBox[{"<|", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"aip", "\[Rule]", "26"}], ",", "\[IndentingNewLine]", 
       RowBox[{"aincp", "\[Rule]", "5"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[Beta]", "[", "ISSP", "]"}], "\[Rule]", 
        RowBox[{"0.5", "*", 
         RowBox[{"Piecewise", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", 
               RowBox[{"t", "<", "qsd"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"qcrf", ",", 
               RowBox[{"qsd", "\[LessEqual]", "t", "\[LessEqual]", 
                RowBox[{"qsd", "+", "ql"}]}]}], "}"}]}], "}"}], ",", "1"}], 
          "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[Beta]", "[", "INSP", "]"}], "\[Rule]", 
        RowBox[{"0.5", "*", 
         RowBox[{"Piecewise", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", 
               RowBox[{"t", "<", "qsd"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"qcrf", ",", 
               RowBox[{"qsd", "\[LessEqual]", "t", "\[LessEqual]", 
                RowBox[{"qsd", "+", "ql"}]}]}], "}"}]}], "}"}], ",", "1"}], 
          "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"qsd", "\[Rule]", "0"}], ",", "\[IndentingNewLine]", 
       RowBox[{"ql", "\[Rule]", "56"}], ",", "\[IndentingNewLine]", 
       RowBox[{"qcrf", "\[Rule]", "0.25"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[Beta]", "[", "HP", "]"}], "\[Rule]", "0.01"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[Mu]", "[", "ISSP", "]"}], "\[Rule]", 
        RowBox[{"0.035", "/", "aip"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[Mu]", "[", "INSP", "]"}], "\[Rule]", 
        RowBox[{"0.01", "/", "aip"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"nhbr", "[", "TP", "]"}], "\[Rule]", 
        RowBox[{"3", "/", "1000"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"lpcr", "[", 
         RowBox[{"ISSP", ",", "INSP"}], "]"}], "\[Rule]", "1"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"hscr", "[", 
         RowBox[{"ISSP", ",", "INSP"}], "]"}], "\[Rule]", "1"}]}], 
      "\[IndentingNewLine]", "|>"}], "\[IndentingNewLine]", "]"}], 
    "\[DoubleLongRightArrow]", "\[IndentingNewLine]", 
    RowBox[{"ECMMonEcho", "[", 
     RowBox[{"Style", "[", 
      RowBox[{
      "\"\<Show the single-site model tabulated form:\>\"", ",", "Bold", ",", 
       "Purple"}], "]"}], "]"}], "\[DoubleLongRightArrow]", 
    "\[IndentingNewLine]", 
    RowBox[{"ECMMonEchoFunctionContext", "[", 
     RowBox[{
      RowBox[{"Magnify", "[", 
       RowBox[{
        RowBox[{"ModelGridTableForm", "[", "#singleSiteModel", "]"}], ",", 
        "1"}], "]"}], "&"}], "]"}], "\[DoubleLongRightArrow]", 
    "\[IndentingNewLine]", 
    RowBox[{"ECMMonMakePolygonGrid", "[", 
     RowBox[{
      RowBox[{"Keys", "[", "aPopulations", "]"}], ",", "1.5", ",", 
      RowBox[{"\"\<BinningFunction\>\"", "\[Rule]", "Automatic"}]}], "]"}], 
    "\[DoubleLongRightArrow]", "\[IndentingNewLine]", 
    RowBox[{"ECMMonEcho", "[", 
     RowBox[{"Style", "[", 
      RowBox[{
      "\"\<Show the grid based on population coordinates:\>\"", ",", "Bold", 
       ",", "Purple"}], "]"}], "]"}], "\[DoubleLongRightArrow]", 
    "\[IndentingNewLine]", 
    RowBox[{"ECMMonPlotGrid", "[", 
     RowBox[{
      RowBox[{"\"\<CellIDs\>\"", "\[Rule]", "True"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], 
    "\[DoubleLongRightArrow]", "\[IndentingNewLine]", 
    RowBox[{"ECMMonExtendByGrid", "[", 
     RowBox[{"aPopulations", ",", "0.12"}], "]"}], "\[DoubleLongRightArrow]", 
    "\[IndentingNewLine]", 
    RowBox[{"ECMMonAssignInitialConditions", "[", 
     RowBox[{"aPopulations", ",", "\"\<Total Population\>\"", ",", 
      RowBox[{"\"\<Default\>\"", "\[Rule]", "0"}]}], "]"}], 
    "\[DoubleLongRightArrow]", "\[IndentingNewLine]", 
    RowBox[{"ECMMonAssignInitialConditions", "[", 
     RowBox[{
      RowBox[{"DeriveSusceptiblePopulation", "[", 
       RowBox[{"aPopulations", ",", "aInfected", ",", "aDead"}], "]"}], ",", 
      "\"\<Susceptible Population\>\"", ",", 
      RowBox[{"\"\<Default\>\"", "\[Rule]", "0"}]}], "]"}], 
    "\[DoubleLongRightArrow]", "\[IndentingNewLine]", 
    RowBox[{"ECMMonAssignInitialConditions", "[", 
     RowBox[{
      RowBox[{"<|", "|>"}], ",", "\"\<Exposed Population\>\"", ",", 
      RowBox[{"\"\<Default\>\"", "\[Rule]", "0"}]}], "]"}], 
    "\[DoubleLongRightArrow]", "\[IndentingNewLine]", 
    RowBox[{"ECMMonAssignInitialConditions", "[", 
     RowBox[{
     "aInfected", ",", "\"\<Infected Normally Symptomatic Population\>\"", 
      ",", 
      RowBox[{"\"\<Default\>\"", "\[Rule]", "0"}]}], "]"}], 
    "\[DoubleLongRightArrow]", "\[IndentingNewLine]", 
    RowBox[{"ECMMonAssignInitialConditions", "[", 
     RowBox[{
      RowBox[{"<|", "|>"}], ",", 
      "\"\<Infected Severely Symptomatic Population\>\"", ",", 
      RowBox[{"\"\<Default\>\"", "\[Rule]", "0"}]}], "]"}], 
    "\[DoubleLongRightArrow]", "\[IndentingNewLine]", 
    RowBox[{"ECMMonEcho", "[", 
     RowBox[{"Style", "[", 
      RowBox[{
      "\"\<Show total populations initial conditions data:\>\"", ",", "Bold", 
       ",", "Purple"}], "]"}], "]"}], "\[DoubleLongRightArrow]", 
    "\[IndentingNewLine]", 
    RowBox[{"ECMMonPlotGridHistogram", "[", 
     RowBox[{"aPopulations", ",", 
      RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<Total populations\>\""}]}], "]"}], 
    "\[DoubleLongRightArrow]", "\[IndentingNewLine]", 
    RowBox[{"ECMMonEcho", "[", 
     RowBox[{"Style", "[", 
      RowBox[{
      "\"\<Show infected and deceased initial conditions data:\>\"", ",", 
       "Bold", ",", "Purple"}], "]"}], "]"}], "\[DoubleLongRightArrow]", 
    "\[IndentingNewLine]", 
    RowBox[{"ECMMonPlotGridHistogram", "[", 
     RowBox[{"aInfected", ",", 
      RowBox[{"ColorFunction", "\[Rule]", 
       RowBox[{"ColorData", "[", "\"\<RoseColors\>\"", "]"}]}], ",", 
      RowBox[{"\"\<ShowDataPoints\>\"", "\[Rule]", "False"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<Infected\>\""}]}], "]"}], 
    "\[DoubleLongRightArrow]", "\[IndentingNewLine]", 
    RowBox[{"ECMMonPlotGridHistogram", "[", 
     RowBox[{"aDead", ",", 
      RowBox[{"ColorFunction", "\[Rule]", 
       RowBox[{"ColorData", "[", "\"\<RoseColors\>\"", "]"}]}], ",", 
      RowBox[{"\"\<ShowDataPoints\>\"", "\[Rule]", "False"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<Deceased\>\""}]}], "]"}], 
    "\[DoubleLongRightArrow]", "\[IndentingNewLine]", 
    RowBox[{"ECMMonEcho", "[", 
     RowBox[{"Style", "[", 
      RowBox[{"\"\<Simulate:\>\"", ",", "Bold", ",", "Purple"}], "]"}], "]"}],
     "\[DoubleLongRightArrow]", "\[IndentingNewLine]", 
    RowBox[{"ECMMonSimulate", "[", "365", "]"}], "\[DoubleLongRightArrow]", 
    "\[IndentingNewLine]", 
    RowBox[{"ECMMonEcho", "[", 
     RowBox[{"Style", "[", 
      RowBox[{
      "\"\<Show global population simulation results:\>\"", ",", "Bold", ",", 
       "Purple"}], "]"}], "]"}], "\[DoubleLongRightArrow]", 
    "\[IndentingNewLine]", 
    RowBox[{"ECMMonPlotSolutions", "[", 
     RowBox[{
      RowBox[{"__", "~~", "\"\<Population\>\""}], ",", "365"}], "]"}], 
    "\[DoubleLongRightArrow]", "\[IndentingNewLine]", 
    RowBox[{"ECMMonEcho", "[", 
     RowBox[{"Style", "[", 
      RowBox[{
      "\"\<Show site simulation results for Miami and New York areas:\>\"", 
       ",", "Bold", ",", "Purple"}], "]"}], "]"}], "\[DoubleLongRightArrow]", 
    "\[IndentingNewLine]", 
    RowBox[{"ECMMonPlotSiteSolutions", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"160", ",", "174"}], "}"}], ",", 
      RowBox[{"__", "~~", "\"\<Population\>\""}], ",", "365"}], "]"}], 
    "\[DoubleLongRightArrow]", "\[IndentingNewLine]", 
    RowBox[{"ECMMonEcho", "[", 
     RowBox[{"Style", "[", 
      RowBox[{
      "\"\<Show deceased and hospitalzed populations results for Miami and \
New York areas:\>\"", ",", "Bold", ",", "Purple"}], "]"}], "]"}], 
    "\[DoubleLongRightArrow]", "\[IndentingNewLine]", 
    RowBox[{"ECMMonPlotSiteSolutions", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"160", ",", "174"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Deceased Infected Population\>\"", ",", 
        "\"\<Hospitalized Population\>\"", ",", "\"\<Hospital Beds\>\""}], 
       "}"}], ",", "300", ",", 
      RowBox[{"\"\<FocusTime\>\"", "\[Rule]", "120"}]}], "]"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.795287578233603*^9, 3.795287588515078*^9}, {
   3.795287681466363*^9, 3.795287683218265*^9}, {3.795288194799037*^9, 
   3.795288208807078*^9}, {3.7952882825393867`*^9, 3.795288285419002*^9}, {
   3.795288394137258*^9, 3.7952883969206667`*^9}, {3.795288678535161*^9, 
   3.7952886812120533`*^9}, {3.795288833944849*^9, 3.795288838547044*^9}, {
   3.7952889991737823`*^9, 3.795289004858717*^9}, {3.7953004807538424`*^9, 
   3.795300481178404*^9}, {3.795300642067223*^9, 3.795300643439871*^9}, {
   3.795300715*^9, 3.795300798543421*^9}, {3.795302325201783*^9, 
   3.795302405378523*^9}, {3.795302499328578*^9, 3.795302599735695*^9}, {
   3.795304258981353*^9, 3.7953042633081503`*^9}, {3.7953049724675217`*^9, 
   3.7953049966106987`*^9}, {3.795305032681733*^9, 3.7953050539417887`*^9}, {
   3.795305133933345*^9, 3.795305134583077*^9}, {3.795305211216304*^9, 
   3.795305215546032*^9}, {3.795306725032241*^9, 3.795306731578534*^9}, {
   3.795345605528916*^9, 3.7953456184320383`*^9}, 3.795345715510029*^9, {
   3.795345950289612*^9, 3.795345982409128*^9}, {3.795346745010784*^9, 
   3.7953467466326227`*^9}, {3.795346985052218*^9, 3.795346994857889*^9}, {
   3.795347834289167*^9, 3.7953478505225897`*^9}, {3.795348004360433*^9, 
   3.795348004676465*^9}, {3.795348035937413*^9, 3.795348086878769*^9}, {
   3.795348169187887*^9, 3.795348173565732*^9}, {3.7953482304465227`*^9, 
   3.795348236184018*^9}, 3.795350148797793*^9, {3.7953508885906887`*^9, 
   3.795350888828999*^9}, {3.7953517240217743`*^9, 3.795351724437573*^9}, {
   3.7953520179835997`*^9, 3.7953520645972958`*^9}, {3.79536372208044*^9, 
   3.795363725812263*^9}, {3.795434535447801*^9, 3.795434624537059*^9}, {
   3.795434668840149*^9, 3.79543478580015*^9}, {3.7954348465162363`*^9, 
   3.795434996445944*^9}, {3.79543502799197*^9, 3.795435056139021*^9}, {
   3.795437266488126*^9, 3.79543727628508*^9}, {3.796228137313631*^9, 
   3.796228137528902*^9}, {3.796229956251205*^9, 3.796229994989428*^9}, {
   3.7962304710274067`*^9, 3.796230474306613*^9}, {3.799694746113008*^9, 
   3.799694747212048*^9}, {3.8058320748695927`*^9, 3.805832075655065*^9}, {
   3.805832280682461*^9, 3.805832280814888*^9}, {3.81889155264471*^9, 
   3.818891554609289*^9}},
 CellLabel->"In[95]:=",ExpressionUUID->"80c2f63c-6595-41d4-a71a-f5f6317b37fa"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Multi-site model equations", "Subsection",
 CellChangeTimes->{{3.818884378758711*^9, 3.8188843837867537`*^9}, {
  3.818884463584627*^9, 
  3.818884472337019*^9}},ExpressionUUID->"99316e43-2797-48c8-91ee-\
b7314b861120"],

Cell[TextData[{
 "The \[OpenCurlyDoubleQuote]seed\[CloseCurlyDoubleQuote] single site-model \
we started the workflow with has ",
 Cell[BoxData[
  FormBox["11", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "f10be72f-47a7-4a5c-bcea-bbe75d087d6b"],
 " equations\[CloseCurlyDoubleQuote]"
}], "Text",
 CellChangeTimes->{{3.8188844560019712`*^9, 3.818884457183811*^9}, {
  3.8188910397308397`*^9, 
  3.8188910745390244`*^9}},ExpressionUUID->"c83d2944-73c7-4d51-91b1-\
70a20bff91e2"],

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"model1", "[", "\"\<Equations\>\"", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.818884391221243*^9, 3.818884409842786*^9}, {
  3.8188846235626297`*^9, 3.8188846236860647`*^9}, {3.8188912132684526`*^9, 
  3.8188912166544333`*^9}, {3.8188913038864183`*^9, 3.8188913058202763`*^9}, {
  3.8188914681842327`*^9, 3.818891473335409*^9}},
 CellLabel->"In[93]:=",ExpressionUUID->"1220e1b8-9f22-4970-99c8-d55b40b77eb7"],

Cell[TextData[{
 "The obtained multi-site model has ",
 Cell[BoxData[
  FormBox["4939", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "2772f60e-74b5-405f-b901-ed7d05a23367"],
 " equations (using ",
 Cell[BoxData[
  FormBox["449", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "2f9285ce-0df9-4754-8998-8e5d6da95008"],
 " sites):"
}], "Text",
 CellChangeTimes->{{3.8188910796581697`*^9, 
  3.818891147203887*^9}},ExpressionUUID->"aba1d04f-a5bc-4b02-a00e-\
12b03c21e3f2"],

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
    "ecmObjUSA", "\[DoubleLongRightArrow]", "ECMMonTakeMultiSiteModel"}], 
    ")"}], "[", "\"\<Equations\>\"", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.818884391221243*^9, 3.8188844378666763`*^9}, {
  3.818891566947319*^9, 3.818891567554347*^9}},
 CellLabel->"In[98]:=",ExpressionUUID->"b028b815-25fc-446e-84b7-78791b2b52ce"],

Cell["\<\
Here is the Susceptible population equation of the single-site model:\
\>", "Text",
 CellChangeTimes->{{3.8188911679938993`*^9, 
  3.8188911994158287`*^9}},ExpressionUUID->"cd4da9af-d067-40e8-8b47-\
5d49a01cac7e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"model1", "[", "\"\<Equations\>\"", "]"}], "\[LeftDoubleBracket]", 
  "2", "\[RightDoubleBracket]"}]], "Input",
 CellChangeTimes->{3.818891484371562*^9},
 CellLabel->"In[96]:=",ExpressionUUID->"35c66530-094e-42fe-901e-aa51c70472cc"],

Cell[TextData[{
 "Here are ",
 StyleBox["some",
  FontSlant->"Italic"],
 " of the Susceptible population equations of the multi-site model:"
}], "Text",
 CellChangeTimes->{{3.818891493063833*^9, 
  3.81889151408328*^9}},ExpressionUUID->"f3c59db9-38e8-4d82-b260-\
b520ffe29d35"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<GridTableForm\>\"", "]"}], "[", 
  RowBox[{"List", "/@", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
      "ecmObjUSA", "\[DoubleLongRightArrow]", "ECMMonTakeMultiSiteModel"}], 
      ")"}], "[", "\"\<Equations\>\"", "]"}], "\[LeftDoubleBracket]", 
    RowBox[{"24", ";;", 
     RowBox[{"24", "+", 
      RowBox[{"2", "*", "11"}]}], ";;", "11"}], "\[RightDoubleBracket]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8188844805727167`*^9, 3.818884498686262*^9}, {
   3.81888455122368*^9, 3.818884635262425*^9}, {3.818891159501964*^9, 
   3.818891163437735*^9}, 3.818891575882619*^9},
 CellLabel->"In[97]:=",ExpressionUUID->"8e458392-9c3a-427c-8621-cb71a31ff33d"],

Cell["\<\
Theoretical and computational details about the multi-site workflow can be \
found in [AA4, AA5].\
\>", "Text",
 CellChangeTimes->{{3.818449314588879*^9, 3.818449352489923*^9}, {
  3.818449387601437*^9, 
  3.818449392191187*^9}},ExpressionUUID->"f2762580-8fdc-47c5-9707-\
6a5abd451c64"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Batch simulations and calibration processes", "Section",
 CellChangeTimes->{{3.818522217059021*^9, 3.8185222256655807`*^9}, {
   3.818523015109933*^9, 3.81852302188153*^9}, 
   3.818523125641626*^9},ExpressionUUID->"04e091f7-51e1-4b17-a9ba-\
5781bb89bc09"],

Cell["\<\
In this section we describe the in general terms the processes of model batch \
simulations and model calibration. The next two sections give more details of \
the corresponding software design and workflows.\
\>", "Text",
 CellChangeTimes->{{3.818498629350182*^9, 3.818498723715845*^9}, {
  3.81849887558204*^9, 3.818498876515812*^9}, {3.818523095952395*^9, 
  3.818523174220153*^9}},ExpressionUUID->"fca0a70d-4360-4033-8269-\
d88c1c1f580a"],

Cell[CellGroupData[{

Cell["Definitions", "Subsection",
 CellChangeTimes->{{3.8185288848960114`*^9, 
  3.8185288902061872`*^9}},ExpressionUUID->"13836ec9-8292-49a8-8d9f-\
a072e96ac9af"],

Cell[TextData[{
 StyleBox["Batch simulation:",
  FontWeight->"Bold"],
 " If given a SD model ",
 Cell[BoxData[
  FormBox["M", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "1981f093-4ed3-4bf5-a64d-29c6a8c65d5f"],
 ", the set ",
 Cell[BoxData[
  FormBox["P", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "3d192997-85e6-4c7a-909b-3f3ea281de02"],
 " of parameters of ",
 Cell[BoxData[
  FormBox["M", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "6b8a0dcc-979a-4998-8df8-601d4c8c6cec"],
 ", and a set ",
 Cell[BoxData[
  FormBox["B", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "ec241a34-8b5a-42ce-bfd0-40c61cb0471a"],
 " of sets of values ",
 Cell[BoxData[
  FormBox["P", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "736bcec9-9bce-442c-a231-fa1b86c5217d"],
 ",  ",
 Cell[BoxData[
  FormBox[
   RowBox[{"B", ":=", 
    RowBox[{"{", 
     SubscriptBox["V", "i"], "}"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "a1d3b8aa-bcb1-431c-8bb6-2a08f9354d88"],
 ", then the set of multiple runs of ",
 Cell[BoxData[
  FormBox["M", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "5cf8b7d6-ead0-4d6e-9d7e-ad90b3fb4cc4"],
 " over ",
 Cell[BoxData[
  FormBox["B", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "1d2a22b7-e30b-4abd-bdfa-5f0f67bb5531"],
 " are called ",
 StyleBox["batch simulation",
  FontSlant->"Italic"],
 "."
}], "Text",
 InitializationCell->True,
 CellChangeTimes->{{3.818498702959486*^9, 3.818499058712722*^9}, {
  3.8185045400345716`*^9, 3.818504552015254*^9}, {3.818523197328739*^9, 
  3.818523224609111*^9}, {3.8185232827972603`*^9, 3.818523322420203*^9}, {
  3.818523501329833*^9, 3.818523534641451*^9}, {3.818523572880731*^9, 
  3.818523688543528*^9}, {3.8185239758068953`*^9, 3.8185240038088913`*^9}, {
  3.8185241559053*^9, 3.81852415662919*^9}, {3.818528896810033*^9, 
  3.818528901839149*^9}},ExpressionUUID->"541b2293-c04b-447b-afe1-\
1a029ab72459"],

Cell[TextData[{
 StyleBox["Calibration:",
  FontWeight->"Bold"],
 " If given a model ",
 Cell[BoxData[
  FormBox["M", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "2afc1baa-1179-4295-b8f9-2eba61031ee3"],
 ", the set ",
 Cell[BoxData[
  FormBox["P", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "958290b3-72d6-4d6d-b4b4-78fefc985574"],
 " of parameters of ",
 Cell[BoxData[
  FormBox["M", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "4128bfe0-bc8c-43c1-84d1-bdb478e0f7e5"],
 ", and a set of ",
 Cell[BoxData[
  FormBox["k", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "6cbc3fe4-6372-4363-8c0e-4a290e648999"],
 " time series ",
 Cell[BoxData[
  FormBox[
   RowBox[{"T", ":=", 
    SubsuperscriptBox[
     RowBox[{"{", 
      SubscriptBox["T", "i"], "}"}], 
     RowBox[{"i", "=", "1"}], "k"]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "7a3d63a0-321f-4e7d-be5a-9be23a376762"],
 " that correspond to the set of stocks ",
 Cell[BoxData[
  FormBox[
   RowBox[{"S", ":=", 
    SubsuperscriptBox[
     RowBox[{"{", 
      SubscriptBox["S", "i"], "}"}], 
     RowBox[{"i", "=", "1"}], "k"]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "3a6ef313-682f-4420-a31a-0d811c9c4316"],
 " of ",
 Cell[BoxData[
  FormBox["M", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "70053819-1fb0-4449-b029-1eb9cefb92f6"],
 " then the process of finding concrete the values ",
 Cell[BoxData[
  FormBox["V", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "979d53e2-c9c3-43b3-8bf4-9bdcec20e8cc"],
 " for ",
 Cell[BoxData[
  FormBox["P", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "8ef2b1bc-fee1-442d-805e-61116acf706c"],
 " that make the stocks ",
 Cell[BoxData[
  FormBox["S", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "57faf8d0-0f8d-4195-9a1e-1615b830830c"],
 " to closely resemble the time series ",
 Cell[BoxData[
  FormBox["T", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "ab2f3088-b3c7-4e3f-9bb2-9133f7f446ae"],
 " according to some metric is called ",
 StyleBox["calibration",
  FontSlant->"Italic"],
 " of ",
 Cell[BoxData[
  FormBox["M", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "0d6f590c-5781-48ca-bad1-ba10ad2b8323"],
 " over the ",
 StyleBox["targets",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " ",
 Cell[BoxData[
  FormBox["T", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "406b340c-de74-479e-b67f-f781d624d18f"],
 "."
}], "Text",
 CellChangeTimes->{{3.818523233812396*^9, 3.81852327454876*^9}, {
  3.818523333229867*^9, 3.8185234920610933`*^9}, {3.8185235372963343`*^9, 
  3.818523538860323*^9}, {3.818523697949018*^9, 3.818523764270421*^9}, {
  3.818523809134429*^9, 3.818523912795356*^9}, {3.8185239952477694`*^9, 
  3.818524110649774*^9}, {3.818528903830895*^9, 
  3.818528905518094*^9}},ExpressionUUID->"d7b407cc-0017-45f7-9fb7-\
bf6218d7a8b5"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Roles", "Subsection",
 CellChangeTimes->{{3.818528788122101*^9, 
  3.8185287887633953`*^9}},ExpressionUUID->"aeda5d96-7eaa-4677-90d1-\
7a0e73ac66ff"],

Cell[CellGroupData[{

Cell["There are three types of people dealing with the models:", "Item",
 CellChangeTimes->{{3.818528799493083*^9, 
  3.8185288187506332`*^9}},ExpressionUUID->"a306cf01-63a9-4166-959f-\
13c300d03cd2"],

Cell[TextData[{
 StyleBox["Modeler",
  FontWeight->"Bold"],
 ", who develops and implements the model and prepares it for calibration."
}], "Subitem",
 CellChangeTimes->{{3.818528799493083*^9, 
  3.818528819425108*^9}},ExpressionUUID->"eacb42e7-de59-4721-b953-\
11e76a2009b4"],

Cell[TextData[{
 StyleBox["Calibrator",
  FontWeight->"Bold"],
 ", who calibrates the model with different data for different parameters."
}], "Subitem",
 CellChangeTimes->{{3.818528799493083*^9, 
  3.818528820020767*^9}},ExpressionUUID->"f770152c-60ff-4437-a3a3-\
d94e3421fcee"],

Cell[TextData[{
 StyleBox["Stakeholder",
  FontWeight->"Bold"],
 ", who requires different features of the model and outcomes from different \
scenario play-outs."
}], "Subitem",
 CellChangeTimes->{{3.818528799493083*^9, 
  3.818528820595888*^9}},ExpressionUUID->"4595252a-a4c8-4848-be8c-\
144724246862"]
}, Open  ]],

Cell[CellGroupData[{

Cell["There are two main calibration scenarios:", "Item",
 CellChangeTimes->{{3.818528799493083*^9, 
  3.818528831374543*^9}},ExpressionUUID->"8a71f38a-ddbe-41b7-ac92-\
709a5157c697"],

Cell["Modeler and Calibrator are the same person", "Subitem",
 CellChangeTimes->{{3.818528799493083*^9, 
  3.8185288320596733`*^9}},ExpressionUUID->"7c2e46c6-cc17-4077-b9b5-\
e86487bad694"],

Cell["Modeler and Calibrator are different persons", "Subitem",
 CellChangeTimes->{{3.818528799493083*^9, 
  3.818528842354597*^9}},ExpressionUUID->"09de8a79-2799-4158-8f18-\
4b4f35952a5c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Process", "Subsection",
 CellChangeTimes->{{3.8185294243198*^9, 
  3.818529425140332*^9}},ExpressionUUID->"fe6f120b-8c99-490d-96ce-\
be0974480af8"],

Cell["\<\
Model development and calibration is most likely going to be an iterative \
process.\
\>", "Text",
 CellChangeTimes->{{3.818528799493083*^9, 
  3.8185288147735987`*^9}},ExpressionUUID->"26415c2d-5fa2-4e3c-99bb-\
6cdfe69a53e7"],

Cell["\<\
For concreteness let us assume that the model has matured development-wise \
and batch simulation and model calibration is done in a (more) formal way.\
\>", "Text",
 CellChangeTimes->{{3.818523077011889*^9, 3.818523079696422*^9}, {
  3.818523178259012*^9, 3.818523183670257*^9}, {3.818528760470379*^9, 
  3.818528760728079*^9}, {3.818528977472948*^9, 
  3.818529017636774*^9}},ExpressionUUID->"e99eef95-d5ba-4303-91fd-\
abbeaa75ec20"],

Cell["\<\
Here are the steps of a well defined process between the modeling activity \
players described above:\
\>", "Text",
 CellChangeTimes->{{3.818529528653481*^9, 3.81852958781822*^9}, {
  3.818529626687455*^9, 
  3.8185296325934772`*^9}},ExpressionUUID->"9abffa20-4200-4fbc-88c5-\
760c238bb457"],

Cell["Stakeholder requires certain scenarios to be investigated.", \
"ItemNumbered",
 CellChangeTimes->{{3.818529441439608*^9, 
  3.818529455791191*^9}},ExpressionUUID->"5faee4f3-a9d8-41bd-975e-\
a5fe471f7036"],

Cell["Modeler prepares the model for those scenarios.", "ItemNumbered",
 CellChangeTimes->{{3.818529441439608*^9, 
  3.818529456758821*^9}},ExpressionUUID->"92414ada-101f-495a-9618-\
015d09183043"],

Cell["Stakeholder and Modeler formulate a calibration request.", \
"ItemNumbered",
 CellChangeTimes->{{3.818529441439608*^9, 
  3.8185294575689287`*^9}},ExpressionUUID->"138d96bc-94fa-4b95-a4cf-\
c2e389b43b24"],

Cell[CellGroupData[{

Cell["\<\
Calibrator uses the specifications from the calibration request to:\
\>", "ItemNumbered",
 CellChangeTimes->{{3.818529441439608*^9, 
  3.8185294583338547`*^9}},ExpressionUUID->"d2934e27-ef43-4ccc-8af5-\
e5f34f53963c"],

Cell["Calibrate the model", "SubitemNumbered",
 CellChangeTimes->{{3.818529441439608*^9, 
  3.818529459121484*^9}},ExpressionUUID->"d462eba0-89ac-42f2-a27c-\
05876c6a8c3f"],

Cell["Derive model outcomes results", "SubitemNumbered",
 CellChangeTimes->{{3.818529441439608*^9, 
  3.81852945983011*^9}},ExpressionUUID->"60c19440-cf97-4ad8-916b-\
132562004060"],

Cell["Provide model qualitative results", "SubitemNumbered",
 CellChangeTimes->{{3.818529441439608*^9, 
  3.8185294603928013`*^9}},ExpressionUUID->"756f0a28-6aa1-45fb-8bc7-\
44a10ed7931b"],

Cell["Provide model sensitivity analysis results", "SubitemNumbered",
 CellChangeTimes->{{3.818529441439608*^9, 3.818529453670816*^9}, {
  3.818529661554276*^9, 
  3.818529661558414*^9}},ExpressionUUID->"c7c8ae3e-5fc8-44e9-be64-\
b9a1d048eb4b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Modeler (and maybe Stakeholder) review the results and decides should more \
calibration be done.\
\>", "ItemNumbered",
 CellChangeTimes->{{3.818529441439608*^9, 3.818529453670816*^9}, {
  3.8185296634637117`*^9, 3.818529683342854*^9}, {3.8185297289735403`*^9, 
  3.8185297311402893`*^9}, {3.8185297940220633`*^9, 3.818529815623342*^9}, {
  3.8185298780168552`*^9, 
  3.81852993599338*^9}},ExpressionUUID->"a80f167a-1714-4f18-9556-\
274c98416be4"],

Cell["I.e. go to 3.", "SubitemNumbered",
 CellChangeTimes->{{3.818529441439608*^9, 3.818529453670816*^9}, {
  3.8185296634637117`*^9, 3.818529683342854*^9}, {3.8185297289735403`*^9, 
  3.8185297311402893`*^9}, {3.8185297940220633`*^9, 3.818529815623342*^9}, {
  3.8185298780168552`*^9, 
  3.818529947846789*^9}},ExpressionUUID->"7ba1f8fd-298e-474e-b22a-\
8e00e3691c99"]
}, Open  ]],

Cell["\<\
Modeler does batch simulations with the calibrated model for the \
investigation scenarios.\
\>", "ItemNumbered",
 CellChangeTimes->{{3.818529441439608*^9, 3.818529453670816*^9}, {
  3.8185296634637117`*^9, 3.818529683342854*^9}, {3.8185297289735403`*^9, 
  3.81852979182819*^9}, {3.818529833871279*^9, 3.818529864145609*^9}, {
  3.818529957071783*^9, 
  3.81852997600093*^9}},ExpressionUUID->"07b9d1ae-ed4f-491f-87a3-\
e020c034ede2"],

Cell["Modeler and Stakeholder prepare report with the results.", \
"ItemNumbered",
 CellChangeTimes->{{3.818529441439608*^9, 3.818529453670816*^9}, {
  3.8185296634637117`*^9, 3.818529683342854*^9}, {3.8185297289735403`*^9, 
  3.81852979182819*^9}, {3.818529833871279*^9, 3.818529864145609*^9}, {
  3.818529957071783*^9, 
  3.81852999236478*^9}},ExpressionUUID->"a0eb238e-1e3b-43f0-b18d-\
6ced5b92b7c2"],

Cell["\<\
See the documents [AA9, AA10] have questionnaires that further clarify the \
details of interaction between the modelers and calibrators.\
\>", "Text",
 CellChangeTimes->{{3.81853180736724*^9, 3.818531821823531*^9}, {
  3.8185318569462147`*^9, 
  3.818531978931439*^9}},ExpressionUUID->"e14da21b-0291-4db4-86c2-\
a5902cf601ee"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Batch simulation vs calibration", "Subsection",
 CellChangeTimes->{{3.818528781619404*^9, 3.81852878593956*^9}, {
  3.818529400907981*^9, 
  3.8185294142721863`*^9}},ExpressionUUID->"65fd8080-970c-490a-b1b4-\
a49f86a7713e"],

Cell["\<\
In order to clarify the similarities and differences between batch simulation \
and calibration we list the following observations: \
\>", "Text",
 CellChangeTimes->{{3.818530000250471*^9, 
  3.818530045880788*^9}},ExpressionUUID->"d7affcd6-fff9-40dc-a253-\
848d1d4e373c"],

Cell["\<\
Each batch simulation or model calibration is done either for model \
development purposes or for scenario play-out studies.\
\>", "Item",
 CellChangeTimes->{{3.818523077011889*^9, 3.818523079696422*^9}, {
  3.818523178259012*^9, 3.818523183670257*^9}, {3.818528760470379*^9, 
  3.818528760728079*^9}, {3.818528962996966*^9, 3.818528963000703*^9}, {
  3.8185290381468697`*^9, 3.818529038148904*^9}, {3.8185295003137493`*^9, 
  3.818529507908155*^9}},ExpressionUUID->"abc50f7a-582f-4cf7-ad40-\
81a42e9c075f"],

Cell["\<\
Batch simulation is used for qualitative studies of the model. For example, \
doing sensitivity analysis; see [BC1, AA7, AA8].\
\>", "Item",
 CellChangeTimes->{{3.818523077011889*^9, 3.818523079696422*^9}, {
  3.818523178259012*^9, 3.818523183670257*^9}, {3.818528760470379*^9, 
  3.818528760728079*^9}, {3.818528962996966*^9, 3.818528963000703*^9}, {
  3.818529039484707*^9, 3.818529128579104*^9}, {3.818529169722722*^9, 
  3.818529259492763*^9}},ExpressionUUID->"19b188bb-a318-47e1-80c0-\
8a7ba85da6cd"],

Cell["\<\
Before starting the calibration we might want to study the \
\[OpenCurlyDoubleQuote]landscape\[CloseCurlyDoubleQuote] of the search space \
of the calibration parameters using batch simulations.\
\>", "Item",
 CellChangeTimes->{{3.818523077011889*^9, 3.818523079696422*^9}, {
  3.818523178259012*^9, 3.818523183670257*^9}, {3.818528760470379*^9, 
  3.818528760728079*^9}, {3.818528962996966*^9, 3.818528963000703*^9}, {
  3.818529039484707*^9, 3.818529154663924*^9}, {3.818529325677455*^9, 
  3.8185293781933327`*^9}},ExpressionUUID->"44553251-da3e-487c-be24-\
8bc650b12811"],

Cell["\<\
Batch simulation is also done after model calibration in order to evaluate \
different scenarios,\
\>", "Item",
 CellChangeTimes->{{3.818523077011889*^9, 3.818523079696422*^9}, {
  3.818523178259012*^9, 3.818523183670257*^9}, {3.818528760470379*^9, 
  3.818528760728079*^9}, {3.818528962996966*^9, 3.818528963000703*^9}, {
  3.818529039484707*^9, 3.818529128579104*^9}, {3.818529171134102*^9, 
  3.818529172281577*^9}, {3.818529265939495*^9, 
  3.818529310968499*^9}},ExpressionUUID->"184939b4-5286-4379-a938-\
f3e2c2e8d6bb"],

Cell["\<\
For some models with large computational complexity batch simulation -- \
together with some evaluation metric -- can be used instead of model \
calibration.\
\>", "Item",
 CellChangeTimes->{{3.818523077011889*^9, 3.818523079696422*^9}, {
  3.818523178259012*^9, 3.818523183670257*^9}, {3.818528760470379*^9, 
  3.818528760728079*^9}, {3.818528962996966*^9, 3.818528963000703*^9}, {
  3.818529039484707*^9, 3.818529128579104*^9}, {3.818529171134102*^9, 
  3.818529172281577*^9}, {3.818529265939495*^9, 
  3.8185293223700123`*^9}},ExpressionUUID->"bb0b1818-ca18-4600-8bd8-\
a8b51aaafbe1"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Batch simulations workflow", "Section",
 CellChangeTimes->{{3.8050176970255136`*^9, 3.8050177001076117`*^9}, {
  3.818522227465323*^9, 
  3.818522233248004*^9}},ExpressionUUID->"3ba0a6e6-fd92-48ce-bcaa-\
59ac8d454711"],

Cell["\<\
In this section we describe the specification and execution of model batch \
simulations.\
\>", "Text",
 CellChangeTimes->{{3.818498629350182*^9, 3.818498723715845*^9}, {
  3.81849887558204*^9, 
  3.818498876515812*^9}},ExpressionUUID->"c3c42747-aac4-41bf-9120-\
061a53acf672"],

Cell["\<\
Batch simulations can be time consuming, hence it is good idea to \
\>", "Text",
 CellChangeTimes->{{3.818512445831553*^9, 3.8185125127248077`*^9}, 
   3.8188691793515797`*^9},ExpressionUUID->"f191cf8a-16d0-4f67-8992-\
26ff1a824609"],

Cell["\<\
In the rest of the section we go through the following steps:\
\>", "Text",
 CellChangeTimes->{{3.818512105007615*^9, 3.818512153169075*^9}, {
  3.818512452198656*^9, 
  3.818512456811081*^9}},ExpressionUUID->"cec06c2a-595e-4093-9be2-\
41d198a07adb"],

Cell["Make a model object", "ItemNumbered",
 CellChangeTimes->{{3.818512156308008*^9, 
  3.8185121874311247`*^9}},ExpressionUUID->"75ab2eaa-973e-463d-8b36-\
77add7945c1c"],

Cell[CellGroupData[{

Cell["\<\
Batch simulate over a few combinations of parameters and show:\
\>", "ItemNumbered",
 CellChangeTimes->{{3.818512156308008*^9, 
  3.818512231688064*^9}},ExpressionUUID->"f170e498-a687-455c-bf85-\
2119379147c0"],

Cell["Plots of the simulation results for all populations", "SubitemNumbered",
 CellChangeTimes->{{3.818512156308008*^9, 
  3.818512313079262*^9}},ExpressionUUID->"429580b2-6bf7-4c1e-b2b8-\
791689f1eefd"],

Cell["Plots of the simulation results for a particular population", \
"SubitemNumbered",
 CellChangeTimes->{{3.818512156308008*^9, 
  3.8185123157004642`*^9}},ExpressionUUID->"228f2ac8-b26a-4d7b-8e31-\
8ac80b66f27f"]
}, Open  ]],

Cell["\<\
Batch simulate over the Cartesian (outer) product of values lists of a \
selected pair of parameters and show the corresponding plots of all \
simulations\
\>", "ItemNumbered",
 CellChangeTimes->{{3.818512156308008*^9, 3.8185122078902063`*^9}, {
  3.818512318164019*^9, 
  3.8185123994580803`*^9}},ExpressionUUID->"5d089da3-87b6-4c8d-85ad-\
a06d91a5917e"],

Cell[CellGroupData[{

Cell["Model (object) for batch simulations", "Subsection",
 CellChangeTimes->{{3.818512115391059*^9, 
  3.818512128936445*^9}},ExpressionUUID->"c533d743-9e08-4142-9142-\
2be0b37523f6"],

Cell["Here we make a new ECMMon object:", "Text",
 CellChangeTimes->{{3.818454160603196*^9, 
  3.818454175329562*^9}},ExpressionUUID->"18cdcd7c-b4b0-432b-86a6-\
6585753a3957"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   StyleBox["ecmObj2",
    FontSize->14], 
   StyleBox["=",
    FontSize->14], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ECMMonUnit", "[", "]"}], "\[DoubleLongRightArrow]", 
    "\[IndentingNewLine]", 
    RowBox[{"ECMMonSetSingleSiteModel", "[", "model1", "]"}], 
    "\[DoubleLongRightArrow]", "\[IndentingNewLine]", 
    RowBox[{"ECMMonAssignRateRules", "[", "aDefaultPars", "]"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.795434170940189*^9, 3.795434171097028*^9}, {
   3.795434227620096*^9, 3.7954342280569077`*^9}, {3.795434330965415*^9, 
   3.795434417713215*^9}, {3.795442582610836*^9, 3.795442760073991*^9}, {
   3.7954427988098183`*^9, 3.7954429217508793`*^9}, {3.7965746260240726`*^9, 
   3.796574643346909*^9}, {3.796648117834461*^9, 3.7966481910554028`*^9}, {
   3.796648226573782*^9, 3.796648285353858*^9}, {3.796648403495227*^9, 
   3.796648434735167*^9}, {3.7966485566882277`*^9, 3.796648639072644*^9}, {
   3.796648680946189*^9, 3.7966487163339243`*^9}, {3.796648774783004*^9, 
   3.796648851272829*^9}, {3.796648901688528*^9, 3.79664891893613*^9}, {
   3.796649988207951*^9, 3.796650001168395*^9}, 3.796656262007443*^9, {
   3.79665762099372*^9, 3.796657674025812*^9}, {3.818453800227006*^9, 
   3.818453820555184*^9}, {3.818454145462113*^9, 3.8184541530902987`*^9}, {
   3.81846641938461*^9, 3.818466419707819*^9}, {3.818466667187685*^9, 
   3.81846668235426*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"d59cfec5-9920-4851-b885-77328464825d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Direct specification of combinations of parameters", "Subsection",
 CellChangeTimes->{{3.818459992660263*^9, 
  3.818460002649651*^9}},ExpressionUUID->"a7f29d04-ee95-4d2e-aa32-\
7fee37e5b12f"],

Cell[CellGroupData[{

Cell["All populations", "Subsubsection",
 CellChangeTimes->{{3.818461847840328*^9, 
  3.818461850191173*^9}},ExpressionUUID->"8223a3bb-c07e-443e-b62f-\
e9455d1b0f1b"],

Cell["\<\
Here we simulate the model in the object of different parameter combinations \
given in a list of associations:\
\>", "Text",
 CellChangeTimes->{{3.818454189100775*^9, 
  3.818454242920586*^9}},ExpressionUUID->"b6fe2988-d35e-4cdd-a9a8-\
e1bd609a1a5e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   StyleBox["res1",
    FontSize->14], 
   StyleBox["=",
    FontSize->14], 
   StyleBox["\[IndentingNewLine]",
    FontSize->14], 
   RowBox[{"ecmObj2", "\[DoubleLongRightArrow]", "\[IndentingNewLine]", 
    RowBox[{"ECMMonBatchSimulate", "[", 
     RowBox[{
      RowBox[{"___", "~~", "\"\<Population\>\""}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"qsd", "\[Rule]", "60"}], ",", 
          RowBox[{"ql", "\[Rule]", "28"}]}], "|>"}], ",", 
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"qsd", "\[Rule]", "55"}], ",", 
          RowBox[{"ql", "\[Rule]", "28"}]}], "|>"}], ",", 
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"qsd", "\[Rule]", "75"}], ",", 
          RowBox[{"ql", "\[Rule]", "21"}], ",", 
          RowBox[{
           RowBox[{"\[Beta]", "[", "ISSP", "]"}], "\[Rule]", "0"}]}], 
         "|>"}]}], "}"}], ",", "240"}], "]"}], "\[DoubleLongRightArrow]", 
    "\[IndentingNewLine]", "ECMMonTakeValue"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.795434170940189*^9, 3.795434171097028*^9}, {
   3.795434227620096*^9, 3.7954342280569077`*^9}, {3.795434330965415*^9, 
   3.795434417713215*^9}, {3.795442582610836*^9, 3.795442760073991*^9}, {
   3.7954427988098183`*^9, 3.7954429217508793`*^9}, {3.7965746260240726`*^9, 
   3.796574643346909*^9}, {3.796648117834461*^9, 3.7966481910554028`*^9}, {
   3.796648226573782*^9, 3.796648285353858*^9}, {3.796648403495227*^9, 
   3.796648434735167*^9}, {3.7966485566882277`*^9, 3.796648639072644*^9}, {
   3.796648680946189*^9, 3.7966487163339243`*^9}, {3.796648774783004*^9, 
   3.796648851272829*^9}, {3.796648901688528*^9, 3.79664891893613*^9}, {
   3.796649988207951*^9, 3.796650001168395*^9}, 3.796656262007443*^9, {
   3.79665762099372*^9, 3.796657674025812*^9}, {3.818453785648614*^9, 
   3.818453792430319*^9}, {3.818453826248816*^9, 3.8184538736910477`*^9}, {
   3.818453970386908*^9, 3.8184539825023193`*^9}, 3.8184540646519117`*^9, {
   3.818454996257337*^9, 3.8184550318345413`*^9}, {3.818455080499881*^9, 
   3.818455135198427*^9}, {3.818455169275816*^9, 3.818455174556065*^9}, 
   3.818455267031156*^9, {3.8184557856172733`*^9, 3.818455785796015*^9}, {
   3.818456091690268*^9, 3.8184561209397297`*^9}, {3.818456225592918*^9, 
   3.8184562468318167`*^9}, {3.818456312050828*^9, 3.8184563204427834`*^9}, {
   3.818456428331436*^9, 3.818456429074038*^9}, {3.818465892141711*^9, 
   3.8184658927145357`*^9}, {3.818466440195937*^9, 3.818466440892189*^9}, {
   3.8184666910825567`*^9, 3.818466691902605*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"74f89f9e-6ae7-49a9-91a1-df4e3686a307"],

Cell[TextData[{
 StyleBox["Remark:",
  FontWeight->"Bold"],
 " The stocks in the results are only stocks that are populations -- that is \
specified with the string expression pattern ",
 StyleBox["___~~\[CloseCurlyDoubleQuote]Population\[CloseCurlyDoubleQuote]", 
  "Program"],
 "."
}], "Text",
 CellChangeTimes->{{3.818533244453679*^9, 
  3.81853332364392*^9}},ExpressionUUID->"3a99efec-c9d0-4881-b1e3-\
b028c14ef38e"],

Cell["Here is the shape of the result:", "Text",
 CellChangeTimes->{{3.8185331895748672`*^9, 
  3.818533201612653*^9}},ExpressionUUID->"4ae2cce5-cfb8-473b-a60a-\
50588077d4dc"],

Cell[BoxData[
 RowBox[{"Short", "/@", "res1"}]], "Input",
 CellChangeTimes->{{3.818453860216593*^9, 3.818453863430929*^9}, 
   3.81845612633955*^9, {3.818465896113391*^9, 3.818465896269281*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"a8cb9e59-8335-40e6-98f8-b830f4ae2eee"],

Cell["Here are the corresponding plots:", "Text",
 CellChangeTimes->{{3.818533204942565*^9, 
  3.818533215191656*^9}},ExpressionUUID->"2bcaf647-c49a-407b-9e37-\
29d98baa2b81"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"#", ",", 
     RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "&"}], "/@", 
  "res1"}]], "Input",
 CellChangeTimes->{{3.81845620702882*^9, 3.818456218053878*^9}, {
  3.818456253628606*^9, 3.8184562932973757`*^9}, {3.8184563309841423`*^9, 
  3.818456357704013*^9}, {3.818459354439674*^9, 3.81845936501309*^9}, {
  3.8184664307000313`*^9, 3.818466431193968*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"5e14aa28-3688-4fa6-9712-61475b21bb2e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Focus population", "Subsubsection",
 CellChangeTimes->{{3.818461798575564*^9, 
  3.818461807204211*^9}},ExpressionUUID->"3cbf3a25-99b1-4a84-93e3-\
a1e858a36c50"],

Cell["\<\
We might be interested in the batch simulations results for only one, focus \
populations. Here is an example:\
\>", "Text",
 CellChangeTimes->{{3.818533136856957*^9, 
  3.818533186008675*^9}},ExpressionUUID->"dd7fe209-a494-43cc-a6fa-\
baab03920c1d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"res2", "=", "\[IndentingNewLine]", 
   RowBox[{"ecmObj2", "\[DoubleLongRightArrow]", "\[IndentingNewLine]", 
    RowBox[{"ECMMonBatchSimulate", "[", 
     RowBox[{"\"\<Infected Normally Symptomatic Population\>\"", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"qsd", "\[Rule]", "60"}], ",", 
          RowBox[{"ql", "\[Rule]", "28"}]}], "|>"}], ",", 
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"qsd", "\[Rule]", "55"}], ",", 
          RowBox[{"ql", "\[Rule]", "28"}]}], "|>"}], ",", 
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"qsd", "\[Rule]", "75"}], ",", 
          RowBox[{"ql", "\[Rule]", "21"}], ",", 
          RowBox[{
           RowBox[{"\[Beta]", "[", "ISSP", "]"}], "\[Rule]", "0"}]}], 
         "|>"}]}], "}"}], ",", "240"}], "]"}], "\[DoubleLongRightArrow]", 
    "\[IndentingNewLine]", "ECMMonTakeValue"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.795434170940189*^9, 3.795434171097028*^9}, {
   3.795434227620096*^9, 3.7954342280569077`*^9}, {3.795434330965415*^9, 
   3.795434417713215*^9}, {3.795442582610836*^9, 3.795442760073991*^9}, {
   3.7954427988098183`*^9, 3.7954429217508793`*^9}, {3.7965746260240726`*^9, 
   3.796574643346909*^9}, {3.796648117834461*^9, 3.7966481910554028`*^9}, {
   3.796648226573782*^9, 3.796648285353858*^9}, {3.796648403495227*^9, 
   3.796648434735167*^9}, {3.7966485566882277`*^9, 3.796648639072644*^9}, {
   3.796648680946189*^9, 3.7966487163339243`*^9}, {3.796648774783004*^9, 
   3.796648851272829*^9}, {3.796648901688528*^9, 3.79664891893613*^9}, {
   3.796649988207951*^9, 3.796650001168395*^9}, 3.796656262007443*^9, {
   3.79665762099372*^9, 3.796657674025812*^9}, {3.818453800227006*^9, 
   3.818453820555184*^9}, {3.818454145462113*^9, 3.8184541530902987`*^9}, {
   3.8184549287018013`*^9, 3.818454933492959*^9}, {3.8184561909764*^9, 
   3.818456192235005*^9}, {3.818456402401765*^9, 3.818456403176342*^9}, {
   3.818466450106494*^9, 3.818466456664341*^9}, {3.818466704289978*^9, 
   3.818466706538706*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"4780d9f7-0644-42c0-aa5a-193968488f21"],

Cell["Here is the shape of the result:", "Text",
 CellChangeTimes->{{3.8185331895748672`*^9, 
  3.818533201612653*^9}},ExpressionUUID->"5c0ec899-4713-46fa-8cc2-\
7352fa8eeb1e"],

Cell[BoxData[
 RowBox[{"Short", "/@", "res2"}]], "Input",
 CellChangeTimes->{{3.796657585015065*^9, 3.79665758523755*^9}, {
   3.796657706594697*^9, 3.7966577207457027`*^9}, 3.8184561946772423`*^9, {
   3.8184664598045588`*^9, 3.818466460770915*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"49ecb97d-30a5-472b-b612-f12776d2db29"],

Cell["Here are the corresponding plots:", "Text",
 CellChangeTimes->{{3.818533204942565*^9, 
  3.818533215191656*^9}},ExpressionUUID->"552c4343-bf3a-43c1-a1ae-\
145d6f401cb1"],

Cell[BoxData[
 RowBox[{"Multicolumn", "[", 
  RowBox[{"KeyValueMap", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"ListLinePlot", "[", 
      RowBox[{"#2", ",", 
       RowBox[{"PlotLabel", "\[Rule]", "#1"}], ",", 
       RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
       RowBox[{"Epilog", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Directive", "[", 
           RowBox[{"Orange", ",", "Dashed"}], "]"}], ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Scaled", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{"-", "1"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"#1", "[", "qsd", "]"}], ",", "0"}], "}"}]}], "]"}], 
             ",", 
             RowBox[{"Scaled", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"#1", "[", "qsd", "]"}], ",", "0"}], "}"}]}], 
              "]"}]}], "}"}], "]"}], ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Scaled", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{"-", "1"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#1", "[", "qsd", "]"}], "+", 
                  RowBox[{"#1", "[", "ql", "]"}]}], ",", "0"}], "}"}]}], 
              "]"}], ",", 
             RowBox[{"Scaled", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#1", "[", "qsd", "]"}], "+", 
                  RowBox[{"#1", "[", "ql", "]"}]}], ",", "0"}], "}"}]}], 
              "]"}]}], "}"}], "]"}]}], "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], "&"}], ",", 
    "res2"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.818453757755789*^9, 3.818453760120803*^9}, {
   3.8184538391869917`*^9, 3.8184538397147217`*^9}, {3.818454254363783*^9, 
   3.81845441483729*^9}, {3.818454451648452*^9, 3.8184544824849453`*^9}, {
   3.8184545932683268`*^9, 3.818454652003079*^9}, {3.818454688500798*^9, 
   3.81845477449561*^9}, {3.818454808268599*^9, 3.818454883149302*^9}, 
   3.818454960933014*^9, 3.81845642167369*^9, 3.818456476216763*^9, {
   3.8184598690234737`*^9, 3.8184599134992447`*^9}, {3.818461732179905*^9, 
   3.818461750796632*^9}, {3.818466464148211*^9, 3.81846646451779*^9}, {
   3.818466714501604*^9, 3.818466729375029*^9}, 3.818535829035617*^9},
 CellLabel->"In[40]:=",ExpressionUUID->"f1faa401-fe3d-4ca2-9c54-7cb0c2e36a97"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Outer product of parameters", "Subsection",
 CellChangeTimes->{{3.81845941525707*^9, 
  3.818459436272069*^9}},ExpressionUUID->"b5a93abc-20e9-4989-b364-\
024b0406b47e"],

Cell["\<\
Instead of specifying an the combinations of parameters directly we can \
specify the values taken by each parameter using an association in which the \
keys are parameters and the values are list of values:\
\>", "Text",
 CellChangeTimes->{{3.8184594411434097`*^9, 
  3.818459531932271*^9}},ExpressionUUID->"ddbf3d20-1ae3-41cf-a6ea-\
675bc727bf42"],

Cell[BoxData[
 RowBox[{
  RowBox[{"res3", "=", "\[IndentingNewLine]", 
   RowBox[{"ecmObj2", "\[DoubleLongRightArrow]", "\[IndentingNewLine]", 
    RowBox[{"ECMMonBatchSimulate", "[", 
     RowBox[{
      RowBox[{"__", "~~", "\"\<Population\>\""}], ",", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"qsd", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"60", ",", "55", ",", "75"}], "}"}]}], ",", 
        RowBox[{"ql", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"28", ",", "21"}], "}"}]}]}], "|>"}], ",", "240"}], "]"}], 
    "\[DoubleLongRightArrow]", "\[IndentingNewLine]", "ECMMonTakeValue"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.795434170940189*^9, 3.795434171097028*^9}, {
   3.795434227620096*^9, 3.7954342280569077`*^9}, {3.795434330965415*^9, 
   3.795434417713215*^9}, {3.795442582610836*^9, 3.795442760073991*^9}, {
   3.7954427988098183`*^9, 3.7954429217508793`*^9}, {3.7965746260240726`*^9, 
   3.796574643346909*^9}, {3.796648117834461*^9, 3.7966481910554028`*^9}, {
   3.796648226573782*^9, 3.796648285353858*^9}, {3.796648403495227*^9, 
   3.796648434735167*^9}, {3.7966485566882277`*^9, 3.796648639072644*^9}, {
   3.796648680946189*^9, 3.7966487163339243`*^9}, {3.796648774783004*^9, 
   3.796648851272829*^9}, {3.796648901688528*^9, 3.79664891893613*^9}, {
   3.796649988207951*^9, 3.796650001168395*^9}, 3.796656262007443*^9, {
   3.79665762099372*^9, 3.796657674025812*^9}, {3.818453800227006*^9, 
   3.818453820555184*^9}, {3.818454145462113*^9, 3.8184541530902987`*^9}, {
   3.8184549287018013`*^9, 3.818454933492959*^9}, {3.8184561909764*^9, 
   3.818456192235005*^9}, {3.818456402401765*^9, 3.818456403176342*^9}, {
   3.818459483872671*^9, 3.818459490801238*^9}, {3.818459538749167*^9, 
   3.8184595706330223`*^9}, {3.8184598260792217`*^9, 3.818459838307107*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"f06902f1-9c5e-42b5-a579-0dc326fd6e47"],

Cell["Here is the shallow form of the results", "Text",
 CellChangeTimes->{{3.818459810620172*^9, 
  3.818459820880908*^9}},ExpressionUUID->"70c4d736-d568-47f0-8665-\
dd9d73ee6a5e"],

Cell[BoxData[
 RowBox[{"Short", "/@", "res3"}]], "Input",
 CellChangeTimes->{{3.796657585015065*^9, 3.79665758523755*^9}, {
   3.796657706594697*^9, 3.7966577207457027`*^9}, 3.8184561946772423`*^9, {
   3.818459573334642*^9, 3.818459573771694*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"51375182-29fd-4c1f-b8e4-c73855f2f873"],

Cell["Here are the corresponding plots:", "Text",
 CellChangeTimes->{{3.818459973871258*^9, 
  3.818459980690473*^9}},ExpressionUUID->"687eb43a-65bb-4c5d-8232-\
c3da110ae5eb"],

Cell[BoxData[
 RowBox[{"Multicolumn", "[", 
  RowBox[{"KeyValueMap", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"ListLinePlot", "[", 
      RowBox[{"#2", ",", 
       RowBox[{"PlotLabel", "\[Rule]", "#1"}], ",", 
       RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
       RowBox[{"Epilog", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Directive", "[", 
           RowBox[{"Gray", ",", "Dashed"}], "]"}], ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Scaled", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{"-", "1"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"#1", "[", "qsd", "]"}], ",", "0"}], "}"}]}], "]"}], 
             ",", 
             RowBox[{"Scaled", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"#1", "[", "qsd", "]"}], ",", "0"}], "}"}]}], 
              "]"}]}], "}"}], "]"}], ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Scaled", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{"-", "1"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#1", "[", "qsd", "]"}], "+", 
                  RowBox[{"#1", "[", "ql", "]"}]}], ",", "0"}], "}"}]}], 
              "]"}], ",", 
             RowBox[{"Scaled", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#1", "[", "qsd", "]"}], "+", 
                  RowBox[{"#1", "[", "ql", "]"}]}], ",", "0"}], "}"}]}], 
              "]"}]}], "}"}], "]"}]}], "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], "&"}], ",", 
    "res3"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.818453757755789*^9, 3.818453760120803*^9}, {
   3.8184538391869917`*^9, 3.8184538397147217`*^9}, {3.818454254363783*^9, 
   3.81845441483729*^9}, {3.818454451648452*^9, 3.8184544824849453`*^9}, {
   3.8184545932683268`*^9, 3.818454652003079*^9}, {3.818454688500798*^9, 
   3.81845477449561*^9}, {3.818454808268599*^9, 3.818454883149302*^9}, 
   3.818454960933014*^9, 3.81845642167369*^9, 3.818456476216763*^9, {
   3.818459580849291*^9, 3.818459635929619*^9}, {3.818459692697588*^9, 
   3.8184597944441338`*^9}, {3.818459920992112*^9, 3.81845993731746*^9}, {
   3.818466747035185*^9, 3.818466763057249*^9}, {3.818466949803644*^9, 
   3.8184670500530653`*^9}, {3.818467082117052*^9, 3.8184671716679287`*^9}, {
   3.818467215016917*^9, 3.818467223943679*^9}, 3.818535941342514*^9},
 CellLabel->"In[43]:=",ExpressionUUID->"de6b2a53-80b6-42e7-8160-a51c514107a2"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Export of batch simulation results", "Subsection",
 CellChangeTimes->{{3.8188692203579884`*^9, 
  3.8188692322827883`*^9}},ExpressionUUID->"a5be6d5c-378b-450c-af78-\
f5fd6cf2d521"],

Cell["\<\
Batch simulations might produce large results. Hence it is a good idea to \
have some strategy of managing the batch simulations data.\
\>", "Text",
 CellChangeTimes->{{3.818892256584251*^9, 
  3.8188923192135487`*^9}},ExpressionUUID->"759ce16c-51d7-43b1-b16b-\
721f415aba62"],

Cell[TextData[{
 "One way is to have export the data in the form consumed by the software \
monad ",
 StyleBox["ERTMon", "Program"],
 ", [AA12]. "
}], "Text",
 CellChangeTimes->{{3.8188923399030447`*^9, 3.8188923919117107`*^9}, {
  3.818892612797359*^9, 
  3.8188926292902393`*^9}},ExpressionUUID->"3534685c-db95-4b76-97d0-\
1fd41eea8c62"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Calibration workflow", "Section",
 CellChangeTimes->{{3.8050177032022247`*^9, 3.80501770493368*^9}, {
  3.8185222391882*^9, 3.818522240527027*^9}, {3.818530089318274*^9, 
  3.818530090059948*^9}},ExpressionUUID->"1b684767-b366-4a71-923e-\
1d7aff9aab13"],

Cell["\<\
In this section we go through the computation steps of the calibration of \
single-site SEI2HR model.\
\>", "Text",
 CellChangeTimes->{{3.818467244006021*^9, 
  3.818467299637929*^9}},ExpressionUUID->"b20c4880-476e-4480-8424-\
52a30490b6d2"],

Cell[TextData[{
 StyleBox["Remark:",
  FontWeight->"Bold"],
 " We use real data in this section, but the presented calibration results \
and outcome plots are for illustration purposes only. A rigorous study with \
discussions of the related assumptions and conclusions is beyond the scope of \
this notebook/document."
}], "Text",
 CellChangeTimes->{{3.818532801535726*^9, 3.818532981199486*^9}, 
   3.818807811806777*^9},ExpressionUUID->"da65d4af-4eef-4ad9-a51d-\
401b23313849"],

Cell[CellGroupData[{

Cell["Calibration steps", "Subsection",
 CellChangeTimes->{{3.818467310157441*^9, 
  3.818467342354699*^9}},ExpressionUUID->"8e93e695-5742-4c03-a710-\
7d57615397c1"],

Cell["\<\
Here are the steps performed in the rest of the sub-sections of this section:\
\
\>", "Text",
 CellChangeTimes->{{3.8184674155025063`*^9, 
  3.818467443830965*^9}},ExpressionUUID->"c55481f5-ccd1-474e-a622-\
a828d219fd76"],

Cell["Ingest data for infected cases, deaths due to disease, etc.", \
"ItemNumbered",
 CellChangeTimes->{{3.818467347473572*^9, 3.818467394416072*^9}, {
  3.8184677677383623`*^9, 
  3.8184677677404547`*^9}},ExpressionUUID->"c7fc0647-6879-4a08-8391-\
eb48c7aa6aad"],

Cell["Choose a model to calibrate.", "ItemNumbered",
 CellChangeTimes->{{3.818467347473572*^9, 3.818467394416072*^9}, {
  3.8184677685906353`*^9, 
  3.818467776611725*^9}},ExpressionUUID->"27eaf73c-476b-4469-abcf-\
95361432af03"],

Cell[CellGroupData[{

Cell["\<\
Make the calibration targets -- those a vectors corresponding to time series \
over regular grids.\
\>", "ItemNumbered",
 CellChangeTimes->{{3.818467347473572*^9, 3.8184674084865007`*^9}, {
  3.818467505898389*^9, 3.818467573737143*^9}, {3.818467697424872*^9, 
  3.818467697426797*^9}},ExpressionUUID->"b586e0b1-672e-403e-8572-\
82d064a73082"],

Cell["\<\
Consider using all of the data in order to evaluate model\[CloseCurlyQuote]s \
applicability.\
\>", "SubitemNumbered",
 CellChangeTimes->{{3.818467347473572*^9, 3.8184674084865007`*^9}, {
  3.818467505898389*^9, 3.818467573737143*^9}, {3.8184676985128117`*^9, 
  3.818467741556319*^9}, {3.8185320233817673`*^9, 
  3.818532052755871*^9}},ExpressionUUID->"734e71c4-0555-4d52-80cf-\
1e37e5895a99"],

Cell["\<\
Consider using fractions of the data in order to evaluate model\
\[CloseCurlyQuote]s ability to predict the future or reconstruct data gaps.\
\>", "SubitemNumbered",
 CellChangeTimes->{{3.818467347473572*^9, 3.8184674084865007`*^9}, {
  3.818467505898389*^9, 3.818467573737143*^9}, {3.8184676985128117`*^9, 
  3.818467741556319*^9}, {3.818532022858151*^9, 3.818532022861211*^9}, {
  3.8185320650975523`*^9, 
  3.818532081061487*^9}},ExpressionUUID->"1dbb9694-cf22-41d5-bed6-\
970e4a15a461"]
}, Open  ]],

Cell["\<\
Choose calibration parameters and corresponding ranges for their values.\
\>", "ItemNumbered",
 CellChangeTimes->{{3.818467347473572*^9, 3.818467407987002*^9}, {
  3.818467459244219*^9, 
  3.818467491515696*^9}},ExpressionUUID->"f30191d1-4547-4ec3-8608-\
41007ddc2af9"],

Cell["\<\
If more than one target choose the relative weight (or importance) of the \
targets.\
\>", "ItemNumbered",
 CellChangeTimes->{{3.818467347473572*^9, 3.818467407987002*^9}, {
  3.818467459244219*^9, 3.818467502342866*^9}, {3.8184675791034517`*^9, 
  3.818467618722439*^9}},ExpressionUUID->"e9066985-0770-49f6-a523-\
a398af2f03c6"],

Cell["Calibrate the model.", "ItemNumbered",
 CellChangeTimes->{{3.818467347473572*^9, 3.818467407987002*^9}, {
  3.818467459244219*^9, 3.818467502342866*^9}, {3.8184675791034517`*^9, 
  3.818467639700527*^9}},ExpressionUUID->"cc91335e-dbbb-4f9a-8172-\
bdc75bff6937"],

Cell[CellGroupData[{

Cell["\<\
Evaluate the fitting between the simulation results and data.\
\>", "ItemNumbered",
 CellChangeTimes->{{3.818467347473572*^9, 3.818467407987002*^9}, {
  3.818467459244219*^9, 3.818467502342866*^9}, {3.8184675791034517`*^9, 
  3.818467637514764*^9}, {3.8184677556533327`*^9, 
  3.818467864940486*^9}},ExpressionUUID->"f8224897-e0e0-40d7-b2cd-\
fb02a05b098a"],

Cell["Using statistics and plots.", "SubitemNumbered",
 CellChangeTimes->{{3.818467347473572*^9, 3.818467407987002*^9}, {
  3.818467459244219*^9, 3.818467502342866*^9}, {3.8184675791034517`*^9, 
  3.818467637514764*^9}, {3.8184677556533327`*^9, 
  3.818467874713526*^9}},ExpressionUUID->"4d22a736-5036-4c42-821b-\
5e543c61446c"]
}, Open  ]],

Cell["\<\
 Make conclusions. If insufficiently good results are obtained go to 2 or 4.\
\>", "ItemNumbered",
 CellChangeTimes->{{3.818467347473572*^9, 3.818467407987002*^9}, {
  3.818467459244219*^9, 3.818467502342866*^9}, {3.8184675791034517`*^9, 
  3.818467637514764*^9}, {3.8184677556533327`*^9, 3.818467831332477*^9}, {
  3.818467878043562*^9, 
  3.818467918566031*^9}},ExpressionUUID->"a74ce6e8-1326-48b8-bdae-\
9f9cb1f80190"],

Cell[TextData[{
 StyleBox["Remark:",
  FontWeight->"Bold"],
 " When doing calibration epidemiological models a team of people it is \
better certain to follow (rigorously) well defined procedures. See the \
documents: "
}], "Text",
 CellChangeTimes->{{3.818468222729682*^9, 
  3.818468378811798*^9}},ExpressionUUID->"cb0af7aa-2cbb-41ef-8cdb-\
3880da231598"],

Cell[TextData[{
 StyleBox["Remark:",
  FontWeight->"Bold"],
 " We plan to prepare have several notebooks dedicated to calibration of both \
single-site and multi-site models."
}], "Text",
 CellChangeTimes->{{3.818468396226877*^9, 
  3.818468455425454*^9}},ExpressionUUID->"32ea23ac-cfda-4bb5-90e5-\
b970c6a2c119"]
}, Open  ]],

Cell[CellGroupData[{

Cell["USA COVID-19 data", "Subsection",
 CellChangeTimes->{{3.818462552516374*^9, 
  3.8184625637570133`*^9}},ExpressionUUID->"e5c728cc-2099-4cb3-aded-\
bebd4f42f578"],

Cell["\<\
Here data for the USA COVID-19 infection cases and deaths from [NYT1] (see \
[AA6] data ingestion details):\
\>", "Text",
 CellChangeTimes->{{3.818462576695237*^9, 3.818462577448976*^9}, {
  3.818462608769679*^9, 
  3.818462689703326*^9}},ExpressionUUID->"682ff718-0862-47c0-8ae0-\
af1a19f8f9e3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"lsCases", "=", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "1", ",", "2", ",", "3", ",", "5", ",", "5", ",", "5",
      ",", "5", ",", "6", ",", "7", ",", "8", ",", "11", ",", "11", ",", "11",
      ",", "12", ",", "12", ",", "12", ",", "12", ",", "12", ",", "13", ",", 
     "13", ",", "14", ",", "15", ",", "15", ",", "15", ",", "15", ",", "25", 
     ",", "25", ",", "25", ",", "27", ",", "30", ",", "30", ",", "30", ",", 
     "43", ",", "45", ",", "60", ",", "60", ",", "65", ",", "70", ",", "85", 
     ",", "101", ",", "121", ",", "157", ",", "222", ",", "303", ",", "413", 
     ",", "530", ",", "725", ",", "976", ",", "1206", ",", "1566", ",", 
     "2045", ",", "2603", ",", "3240", ",", "4009", ",", "5222", ",", "6947", 
     ",", "9824", ",", "13434", ",", "17918", ",", "23448", ",", "30082", ",",
      "37696", ",", "46791", ",", "59678", ",", "73970", ",", "88796", ",", 
     "103318", ",", "119676", ",", "139165", ",", "160159", ",", "184764", 
     ",", "212033", ",", "241127", ",", "262275", ",", "288195", ",", 
     "314991", ",", "341540", ",", "370689", ",", "398491", ",", "423424", 
     ",", "445213", ",", "467106", ",", "490170", ",", "512972", ",", 
     "539600", ",", "566777", ",", "590997", ",", "613302", ",", "637812", 
     ",", "660549", ",", "685165", ",", "714907", ",", "747741", ",", 
     "777098", ",", "800341", ",", "820764", ",", "844225", ",", "868644", 
     ",", "895924", ",", "927372", ",", "953923", ",", "977395", ",", 
     "998136", ",", "1020622", ",", "1043873", ",", "1069587", ",", "1095405",
      ",", "1118643", ",", "1137145", ",", "1155671", ",", "1176913", ",", 
     "1196485", ",", "1222057", ",", "1245777", ",", "1267911", ",", 
     "1285105", ",", "1306316", ",", "1326559", ",", "1349019", ",", 
     "1373255", ",", "1395981", ",", "1416682", ",", "1436260", ",", 
     "1455183", ",", "1473813", ",", "1491974", ",", "1513223", ",", 
     "1536848", ",", "1559020", ",", "1578876", ",", "1600414", ",", 
     "1620096", ",", "1639677", ",", "1660303", ",", "1688335", ",", 
     "1709852", ",", "1727711", ",", "1745546", ",", "1763803", ",", 
     "1784049", ",", "1806724", ",", "1831494", ",", "1855870", ",", 
     "1874023", ",", "1894074", ",", "1918373", ",", "1943743", ",", 
     "1970066", ",", "2001470", ",", "2031613", ",", "2057493", ",", 
     "2088420", ",", "2123068", ",", "2159633", ",", "2199841", ",", 
     "2244876", ",", "2286401", ",", "2324563", ",", "2362875", ",", 
     "2411709", ",", "2461341", ",", "2514500", ",", "2573030", ",", 
     "2622980", ",", "2667278", ",", "2713656", ",", "2767129", ",", 
     "2825865", ",", "2885325", ",", "2952393", ",", "3012349", ",", 
     "3069369", ",", "3129738", ",", "3194944", ",", "3263077", ",", 
     "3338308", ",", "3407962", ",", "3469137", ",", "3529938", ",", 
     "3588229", ",", "3653114", ",", "3721574", ",", "3790356", ",", 
     "3862588", ",", "3928575", ",", "3981476", ",", "4039440", ",", 
     "4101329", ",", "4167741", ",", "4235717", ",", "4303663", ",", 
     "4359188", ",", "4408708", ",", "4455340", ",", "4507370", ",", 
     "4560539", ",", "4617036", ",", "4676822", ",", "4730639", ",", 
     "4777548", ",", "4823529", ",", "4876038", ",", "4929115", ",", 
     "4981066", ",", "5038637", ",", "5089258", ",", "5130147", ",", 
     "5166032", ",", "5206970", ",", "5251824", ",", "5297150", ",", 
     "5344322", ",", "5388034", ",", "5419494", ",", "5458726", ",", 
     "5497530", ",", "5541830", ",", "5586297", ",", "5631403", ",", 
     "5674714", ",", "5707327", ",", "5742814", ",", "5786178", ",", 
     "5817338", ",", "5862014", ",", "5917466", ",", "5958619", ",", 
     "5988001", ",", "6012054", ",", "6040456", ",", "6073671", ",", 
     "6110645", ",", "6157050", ",", "6195893", ",", "6228601", ",", 
     "6264192", ",", "6301923", ",", "6341145", ",", "6385411", ",", 
     "6432677", ",", "6472474", ",", "6507345", ",", "6560827", ",", 
     "6597281", ",", "6638806", ",", "6682079", ",", "6734971", ",", 
     "6776512", ",", "6812354", ",", "6847745", ",", "6889421", ",", 
     "6930523", ",", "6975693", ",", "7027692", ",", "7073962", ",", 
     "7107992", ",", "7168298", ",", "7210171", ",", "7261433", ",", 
     "7315687", ",", "7373073", ",", "7422798", ",", "7466501", ",", 
     "7513020", ",", "7565839", ",", "7625285", ",", "7688761", ",", 
     "7757326", ",", "7808123", ",", "7853753", ",", "7916879", ",", 
     "7976530", ",", "8039653", ",", "8113165", ",", "8193658", ",", 
     "8270925", ",", "8328369", ",", "8401001", ",", "8473618", ",", 
     "8555199", ",", "8642599", ",", "8737995", ",", "8814233", ",", 
     "8892933", ",", "8983153", ",", "9074711", ",", "9182627", ",", 
     "9301455", ",", "9436244", ",", "9558668", ",", "9659817", ",", 
     "9784920", ",", "9923082", ",", "10065150", ",", "10222441", ",", 
     "10405550", ",", "10560047", ",", "10691686", ",", "10852769", ",", 
     "11011484", ",", "11183982", ",", "11367840", ",", "11561152", ",", 
     "11727724", ",", "11864571", ",", "12039323", ",", "12213742", ",", 
     "12397014", ",", "12495699", ",", "12693598", ",", "12838076", ",", 
     "12972986", ",", "13135728", ",", "13315143", ",", "13516558", ",", 
     "13728192", ",", "13958512", ",", "14158135", ",", "14325555", ",", 
     "14519697", ",", "14731424", ",", "14954596", ",", "15174109", ",", 
     "15447371", ",", "15647963", ",", "15826415", ",", "16020169", ",", 
     "16218331", ",", "16465552", ",", "16697862", ",", "16941306", ",", 
     "17132902", ",", "17305013", ",", "17498382", ",", "17694678", ",", 
     "17918870", ",", "18106293", ",", "18200349", ",", "18410644", ",", 
     "18559596", ",", "18740591", ",", "18932346", ",", "19157710"}], "}"}]}],
   ";"}]], "Input",
 CellChangeTimes->{{3.818462519028777*^9, 3.8184625226169786`*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"39d15c68-6c8b-41c4-974d-54c55339d7ab"],

Cell[BoxData[
 RowBox[{
  RowBox[{"lsDeaths", "=", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
      ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "1", ",", "3", ",", "6", ",", "10", 
     ",", "12", ",", "12", ",", "15", ",", "19", ",", "22", ",", "26", ",", 
     "31", ",", "37", ",", "43", ",", "50", ",", "59", ",", "63", ",", "84", 
     ",", "106", ",", "137", ",", "181", ",", "223", ",", "284", ",", "335", 
     ",", "419", ",", "535", ",", "694", ",", "880", ",", "1181", ",", "1444",
      ",", "1598", ",", "1955", ",", "2490", ",", "3117", ",", "3904", ",", 
     "4601", ",", "5864", ",", "6408", ",", "7376", ",", "8850", ",", "10159",
      ",", "11415", ",", "12924", ",", "14229", ",", "15185", ",", "16320", 
     ",", "18257", ",", "20168", ",", "21941", ",", "23382", ",", "24617", 
     ",", "26160", ",", "27535", ",", "29821", ",", "31633", ",", "33410", 
     ",", "35104", ",", "36780", ",", "37660", ",", "38805", ",", "40801", 
     ",", "42976", ",", "44959", ",", "46552", ",", "48064", ",", "49122", 
     ",", "50012", ",", "52079", ",", "54509", ",", "56277", ",", "57766", 
     ",", "59083", ",", "59903", ",", "60840", ",", "62299", ",", "63961", 
     ",", "65623", ",", "67143", ",", "68260", ",", "68959", ",", "69633", 
     ",", "71042", ",", "72474", ",", "73718", ",", "74907", ",", "75891", 
     ",", "76416", ",", "76888", ",", "77579", ",", "79183", ",", "80329", 
     ",", "81452", ",", "82360", ",", "82904", ",", "83582", ",", "84604", 
     ",", "85545", ",", "86487", ",", "87559", ",", "88256", ",", "88624", 
     ",", "89235", ",", "90220", ",", "91070", ",", "91900", ",", "92621", 
     ",", "93282", ",", "93578", ",", "93988", ",", "94710", ",", "95444", 
     ",", "96123", ",", "96760", ",", "97297", ",", "97514", ",", "97832", 
     ",", "98638", ",", "99372", ",", "101807", ",", "102525", ",", "103018", 
     ",", "103258", ",", "103594", ",", "104257", ",", "104886", ",", 
     "105558", ",", "106148", ",", "106388", ",", "106614", ",", "106998", 
     ",", "107921", ",", "108806", ",", "109705", ",", "110522", ",", 
     "111177", ",", "111567", ",", "111950", ",", "112882", ",", "113856", 
     ",", "114797", ",", "115695", ",", "116458", ",", "116854", ",", 
     "117367", ",", "118475", ",", "119606", ",", "120684", ",", "121814", 
     ",", "122673", ",", "123105", ",", "124782", ",", "126089", ",", 
     "127465", ",", "128720", ",", "130131", ",", "131172", ",", "131584", 
     ",", "132174", ",", "133517", ",", "134756", ",", "135271", ",", 
     "136584", ",", "137547", ",", "138076", ",", "138601", ",", "140037", 
     ",", "141484", ",", "142656", ",", "143793", ",", "144819", ",", 
     "145315", ",", "145831", ",", "147148", ",", "148517", ",", "149550", 
     ",", "150707", ",", "151641", ",", "152065", ",", "152551", ",", 
     "153741", ",", "154908", ",", "156026", ",", "157006", ",", "157869", 
     ",", "158235", ",", "158714", ",", "159781", ",", "160851", ",", 
     "161916", ",", "162869", ",", "163573", ",", "163970", ",", "164213", 
     ",", "164654", ",", "165811", ",", "166713", ",", "167913", ",", 
     "168594", ",", "168990", ",", "169423", ",", "170674", ",", "171663", 
     ",", "172493", ",", "173408", ",", "174075", ",", "174281", ",", 
     "174689", ",", "175626", ",", "176698", ",", "177559", ",", "178390", 
     ",", "179145", ",", "179398", ",", "179736", ",", "180641", ",", 
     "181607", ",", "182455", ",", "183282", ",", "183975", ",", "184298", 
     ",", "184698", ",", "185414", ",", "186359", ",", "187280", ",", 
     "188168", ",", "188741", ",", "189165", ",", "189501", ",", "190312", 
     ",", "191267", ",", "192077", ",", "192940", ",", "193603", ",", 
     "193976", ",", "194481", ",", "195405", ",", "196563", ",", "197386", 
     ",", "198271", ",", "199126", ",", "199462", ",", "199998", ",", 
     "200965", ",", "201969", ",", "202958", ",", "203878", ",", "204691", 
     ",", "205119", ",", "205623", ",", "206757", ",", "208331", ",", 
     "209417", ",", "210829", ",", "211838", ",", "212277", ",", "212989", 
     ",", "214442", ",", "215872", ",", "217029", ",", "218595", ",", 
     "219791", ",", "220402", ",", "221165", ",", "222750", ",", "224641", 
     ",", "226589", ",", "228452", ",", "229868", ",", "230695", ",", 
     "231669", ",", "233856", ",", "236127", ",", "237284", ",", "238636", 
     ",", "239809", ",", "240607", ",", "241834", ",", "244430", ",", 
     "247258", ",", "250102", ",", "252637", ",", "254784", ",", "255857", 
     ",", "257282", ",", "260038", ",", "263240", ",", "266144", ",", 
     "268940", ",", "271172", ",", "272499", ",", "274082", ",", "277088", 
     ",", "280637", ",", "283899", ",", "286640", ",", "289168", ",", 
     "290552", ",", "292346", ",", "295549", ",", "298953", ",", "301713", 
     ",", "302802", ",", "304403", ",", "305581", ",", "307396", ",", 
     "310994", ",", "314654"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8184625344187403`*^9, 3.8184625395932093`*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"c58577e0-640e-4753-ad4a-1e05bc896aaa"],

Cell[TextData[{
 StyleBox["Remark:",
  FontWeight->"Bold"],
 " The COVID-19 data was ingested from [NYT1] on 2020-12-31,"
}], "Text",
 CellChangeTimes->{{3.818463822901095*^9, 
  3.818463863885261*^9}},ExpressionUUID->"5e756875-9545-426d-a4c1-\
d1f8a2fd0f8b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Calibration targets", "Subsection",
 CellChangeTimes->{{3.818463039213187*^9, 
  3.8184630432747393`*^9}},ExpressionUUID->"eddca158-5d88-40e3-b94c-\
7c72603376a6"],

Cell["From the data we make the calibration targets association:", "Text",
 CellChangeTimes->{{3.8184630451642838`*^9, 3.818463055615624*^9}, {
  3.818463203453323*^9, 
  3.8184632077290907`*^9}},ExpressionUUID->"dac89f09-57b9-4374-b2c0-\
ba3661d379f2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"aTargets", "=", 
   RowBox[{"<|", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ISSP", "\[Rule]", 
       RowBox[{"0.2", "lsCases"}]}], ",", 
      RowBox[{"INSP", "\[Rule]", 
       RowBox[{"0.8", "lsCases"}]}], ",", 
      RowBox[{"DIP", "\[Rule]", "lsDeaths"}]}], "}"}], "|>"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.804369217864964*^9, 3.804369296750217*^9}, {
  3.804370538199041*^9, 3.8043705412805767`*^9}, {3.804370572848668*^9, 
  3.804370577800021*^9}, {3.8044463115151167`*^9, 3.80444632423997*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"92df50b2-0804-4dba-a57b-ee54407e4066"],

Cell[TextData[{
 StyleBox["Remark:",
  FontWeight->"Bold"],
 " Note that we split the infection cases into 20% severely symptomatic cases \
and 80% normally symptomatic cases."
}], "Text",
 CellChangeTimes->{{3.818463226921801*^9, 3.818463245281516*^9}, {
  3.8184632850524073`*^9, 
  3.818463317823193*^9}},ExpressionUUID->"950d1c27-3c2f-478d-be78-\
9b167cce1b25"],

Cell["Here is the corresponding plot:", "Text",
 CellChangeTimes->{{3.81846332090491*^9, 
  3.8184633332806387`*^9}},ExpressionUUID->"5fe240b5-fcb6-4802-9d6a-\
4d6a0d9fafdd"],

Cell[BoxData[
 RowBox[{"ListLogPlot", "[", 
  RowBox[{"aTargets", ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Calibration targets\>\""}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.818463060969989*^9, 3.818463166743802*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"28f49f24-dd9a-4238-be24-82a86ce8b823"],

Cell["\<\
Here we prepare a smaller set of the targets data for the calibration \
experiments below:\
\>", "Text",
 CellChangeTimes->{{3.818463226921801*^9, 3.818463245281516*^9}, {
  3.8184632850524073`*^9, 3.818463317823193*^9}, {3.818464953852476*^9, 
  3.818465004545072*^9}, {3.8184650354385633`*^9, 
  3.8184650517289467`*^9}},ExpressionUUID->"402dc058-3f54-464b-8db8-\
9440a329c1cd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"aTargetsShort", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Take", "[", 
      RowBox[{"#", ",", "170"}], "]"}], "&"}], "/@", "aTargets"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.818463663466659*^9, 3.818463695054034*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"9c9e907b-fd8f-4240-b6ca-f535f0637934"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Model creation", "Subsection",
 CellChangeTimes->{{3.818462746775309*^9, 
  3.818462749644105*^9}},ExpressionUUID->"a226f9fd-f365-4fdc-bba2-\
0930a09ca32d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"modelSEI2HR", "=", 
   RowBox[{"SEI2HRModel", "[", 
    RowBox[{"t", ",", 
     RowBox[{
     "\"\<TotalPopulationRepresentation\>\"", "\[Rule]", 
      "\"\<AlgebraicEquation\>\""}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.804348417694106*^9, 3.8043484406318417`*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"f82b52e5-792b-48d7-abb8-68cf989f0a4b"],

Cell["\<\
Here are the parameters we want to experiment with (or do calibration with):\
\>", "Text",
 CellChangeTimes->{{3.792782885557115*^9, 
  3.792782913850957*^9}},ExpressionUUID->"f7c8d111-2f05-40b8-8c50-\
c5933411fa4b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"lsFocusParams", "=", 
   RowBox[{"{", 
    RowBox[{"aincp", ",", "aip", ",", 
     RowBox[{"sspf", "[", "SP", "]"}], ",", 
     RowBox[{"\[Beta]", "[", "HP", "]"}], ",", "qsd", ",", "ql", ",", "qcrf", 
     ",", 
     RowBox[{"nhbcr", "[", 
      RowBox[{"ISSP", ",", "INSP"}], "]"}], ",", 
     RowBox[{"nhbr", "[", "TP", "]"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7863148338718843`*^9, 3.7863148644238167`*^9}, {
   3.786314969410964*^9, 3.786314969770688*^9}, {3.786315318877136*^9, 
   3.786315423456758*^9}, {3.786315466907583*^9, 3.786315467039927*^9}, {
   3.786315534473729*^9, 3.786315535036262*^9}, 3.7863155993404713`*^9, 
   3.7863174496926823`*^9, {3.786317496751482*^9, 3.786317565432353*^9}, {
   3.7863177467407846`*^9, 3.786317747077957*^9}, 3.7863179750983877`*^9, {
   3.786318053354103*^9, 3.78631805379137*^9}, {3.7863180874206123`*^9, 
   3.7863180878904448`*^9}, {3.786318193576859*^9, 3.78631819420512*^9}, {
   3.786318225683996*^9, 3.7863182264702682`*^9}, {3.786318451093602*^9, 
   3.786318464796071*^9}, 3.7863185848337793`*^9, {3.786318762276565*^9, 
   3.786318787991737*^9}, {3.786318877363761*^9, 3.7863189048831797`*^9}, {
   3.7863191345789337`*^9, 3.786319179396864*^9}, {3.7863192276959763`*^9, 
   3.786319243996009*^9}, 3.786319882705675*^9, {3.7863204115173597`*^9, 
   3.786320430150361*^9}, {3.786320824602812*^9, 3.786320832250454*^9}, 
   3.786320911094233*^9, {3.786321002131366*^9, 3.786321057592033*^9}, {
   3.786322419080089*^9, 3.786322428376965*^9}, {3.786548989402964*^9, 
   3.786548990706039*^9}, {3.786549162937529*^9, 3.786549163565218*^9}, {
   3.786549287240192*^9, 3.7865492939884253`*^9}, {3.7867549383743258`*^9, 
   3.7867549702797527`*^9}, {3.78681085193745*^9, 3.7868108618553247`*^9}, {
   3.7870672422451077`*^9, 3.787067246810301*^9}, {3.787067293377285*^9, 
   3.787067293937261*^9}, 3.787067362210042*^9, {3.78706807533466*^9, 
   3.7870680757391663`*^9}, {3.7870681214696903`*^9, 3.787068127587439*^9}, {
   3.787501433289083*^9, 3.787501434283085*^9}, {3.7879332682485933`*^9, 
   3.787933290318729*^9}, {3.788011564525116*^9, 3.788011598218856*^9}, {
   3.792338815009306*^9, 3.7923388191018*^9}, {3.792341071071682*^9, 
   3.7923410713251257`*^9}, {3.7923466525491962`*^9, 3.7923466693789043`*^9}, 
   3.792432616989259*^9, 3.7924326928489313`*^9, {3.792443472165268*^9, 
   3.7924434725022078`*^9}, {3.792451530856949*^9, 3.792451539720593*^9}, 
   3.792518559606106*^9, {3.79326158407848*^9, 3.793261592514369*^9}, {
   3.793262125671596*^9, 3.7932621261005783`*^9}, {3.793263354678767*^9, 
   3.7932633548438873`*^9}, {3.7932891569010553`*^9, 3.793289160206669*^9}, {
   3.793290541062859*^9, 3.7932905494816647`*^9}, {3.793466376655335*^9, 
   3.793466377170805*^9}, {3.793466523131755*^9, 3.793466526597267*^9}, 
   3.793765266084045*^9, {3.795261540589345*^9, 3.795261541465951*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"83551bf4-d9df-4b5a-9195-e7b4c48c97cc"],

Cell["Here we set custom rates and initial conditions:", "Text",
 CellChangeTimes->{{3.7928417223874493`*^9, 
  3.792841744259144*^9}},ExpressionUUID->"9d75501a-894e-4d9d-8ebf-\
1cb7824bf76e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"aDefaultPars", "=", 
   RowBox[{"<|", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Beta]", "[", "ISSP", "]"}], "\[Rule]", 
      RowBox[{"0.5", "*", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", 
             RowBox[{"t", "<", "qsd"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"qcrf", ",", 
             RowBox[{"qsd", "\[LessEqual]", "t", "\[LessEqual]", 
              RowBox[{"qsd", "+", "ql"}]}]}], "}"}]}], "}"}], ",", "1"}], 
        "]"}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Beta]", "[", "INSP", "]"}], "\[Rule]", 
      RowBox[{"0.5", "*", 
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", 
             RowBox[{"t", "<", "qsd"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"qcrf", ",", 
             RowBox[{"qsd", "\[LessEqual]", "t", "\[LessEqual]", 
              RowBox[{"qsd", "+", "ql"}]}]}], "}"}]}], "}"}], ",", "1"}], 
        "]"}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"qsd", "\[Rule]", "60"}], ",", "\[IndentingNewLine]", 
     RowBox[{"ql", "\[Rule]", 
      RowBox[{"8", "*", "7"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"qcrf", "\[Rule]", "0.25"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Beta]", "[", "HP", "]"}], "\[Rule]", "0.01"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Mu]", "[", "ISSP", "]"}], "\[Rule]", 
      RowBox[{"0.035", "/", "aip"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Mu]", "[", "INSP", "]"}], "\[Rule]", 
      RowBox[{"0.01", "/", "aip"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"nhbr", "[", "TP", "]"}], "\[Rule]", 
      RowBox[{"3", "/", "1000"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"lpcr", "[", 
       RowBox[{"ISSP", ",", "INSP"}], "]"}], "\[Rule]", "1"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"hscr", "[", 
       RowBox[{"ISSP", ",", "INSP"}], "]"}], "\[Rule]", "1"}]}], 
    "\[IndentingNewLine]", "|>"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8043265338929253`*^9, 3.804326536343721*^9}, {
   3.804337266893701*^9, 3.804337267343337*^9}, {3.804337300215623*^9, 
   3.804337325371647*^9}, {3.804341626114832*^9, 3.8043416800230417`*^9}, 
   3.804343556747047*^9, {3.804343855247666*^9, 3.804343857474448*^9}, 
   3.804348529339581*^9},
 CellLabel->"In[51]:=",ExpressionUUID->"a784ea8d-718c-40de-8c05-6941f6deb1e4"],

Cell[TextData[{
 StyleBox["Remark:",
  FontWeight->"Bold"],
 " Note the piecewise functions for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Beta]", "[", "ISSP", "]"}], TraditionalForm]],ExpressionUUID->
  "6a87a4a9-6968-4d20-ab4a-595252f9e06f"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Beta]", "[", "INSP", "]"}], TraditionalForm]],ExpressionUUID->
  "ee6deef6-6540-4fd4-aba5-9e0c95a561fd"],
 "."
}], "Text",
 CellChangeTimes->{{3.795102808824319*^9, 3.795102886844214*^9}, {
  3.795102954671949*^9, 
  3.795102956617049*^9}},ExpressionUUID->"5c9f5d2e-c63b-48aa-bb91-\
826e962d5e4a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Calibration", "Subsection",
 CellChangeTimes->{{3.8184625952920647`*^9, 
  3.818462596866186*^9}},ExpressionUUID->"a5118dd2-aee9-41ed-850d-\
016967236eae"],

Cell["Here is the USA population number we use for calibration:", "Text",
 CellChangeTimes->{{3.818462924911119*^9, 
  3.818462943271099*^9}},ExpressionUUID->"93a957ea-8b01-40d4-bf3b-\
1bd7b02c05dc"],

Cell[BoxData[
 RowBox[{"usaPopulation", "=", 
  RowBox[{"QuantityMagnitude", "@", 
   RowBox[{"CountryData", "[", 
    RowBox[{"\"\<UnitedStates\>\"", ",", "\"\<Population\>\""}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.804369610868513*^9, 3.8043696313646383`*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"d6bca065-7fdb-4861-be18-488f16d000c8"],

Cell[TextData[{
 "Here is we create a ",
 StyleBox["ECMMon", "Program"],
 " object that has default parameters and initial conditions assigned above:"
}], "Text",
 CellChangeTimes->{{3.8184628003713493`*^9, 
  3.81846288015722*^9}},ExpressionUUID->"075a4216-d4f9-49bb-b575-\
bc19e30ae9fd"],

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ecmObj3", "=", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ECMMonUnit", "[", "]"}], "\[DoubleLongRightArrow]", 
     "\[IndentingNewLine]", 
     RowBox[{"ECMMonSetSingleSiteModel", "[", "modelSEI2HR", "]"}], 
     "\[DoubleLongRightArrow]", "\[IndentingNewLine]", 
     RowBox[{"ECMMonAssignInitialConditions", "[", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{
         RowBox[{"TP", "[", "0", "]"}], "->", "usaPopulation"}], ",", 
        RowBox[{
         RowBox[{"SP", "[", "0", "]"}], "->", 
         RowBox[{"usaPopulation", "-", "1"}]}], ",", 
        RowBox[{
         RowBox[{"ISSP", "[", "0", "]"}], "\[Rule]", "1"}]}], "|>"}], "]"}], 
     "\[DoubleLongRightArrow]", "\[IndentingNewLine]", 
     RowBox[{"ECMMonAssignRateRules", "[", 
      RowBox[{"KeyDrop", "[", 
       RowBox[{"aDefaultPars", ",", 
        RowBox[{"{", 
         RowBox[{"aip", ",", "aincp", ",", "qsd", ",", "ql", ",", "qcrf"}], 
         "}"}]}], "]"}], "]"}], "\[DoubleLongRightArrow]", 
     "\[IndentingNewLine]", 
     RowBox[{"ECMMonCalibrate", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\"\<Target\>\"", "\[Rule]", 
        RowBox[{"KeyTake", "[", 
         RowBox[{"aTargetsShort", ",", 
          RowBox[{"{", 
           RowBox[{"ISSP", ",", "DIP"}], "}"}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<StockWeights\>\"", "\[Rule]", 
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"ISSP", "\[Rule]", "0.8"}], ",", 
          RowBox[{"DIP", "\[Rule]", "0.2"}]}], "|>"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<Parameters\>\"", "\[Rule]", 
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"aip", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"10", ",", "35"}], "}"}]}], ",", 
          RowBox[{"aincp", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"2", ",", "16"}], "}"}]}], ",", 
          RowBox[{"qsd", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"60", ",", "120"}], "}"}]}], ",", 
          RowBox[{"ql", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"20", ",", "160"}], "}"}]}], ",", 
          RowBox[{"qcrf", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"0.1", ",", "0.9"}], "}"}]}]}], "|>"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"DistanceFunction", "\[Rule]", "EuclideanDistance"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Method", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<NelderMead\>\"", ",", 
          RowBox[{"\"\<PostProcess\>\"", "\[Rule]", "False"}]}], "}"}]}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"MaxIterations", "\[Rule]", "1000"}]}], "\[IndentingNewLine]", 
      "]"}]}]}], ";"}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.804337374220709*^9, 3.804337402075745*^9}, {
   3.8043374901763477`*^9, 3.8043375391817207`*^9}, {3.804337614824973*^9, 
   3.8043376341560783`*^9}, {3.804339692164978*^9, 3.804339702277137*^9}, {
   3.8043411983602543`*^9, 3.804341249481577*^9}, {3.804341306350803*^9, 
   3.804341345027828*^9}, {3.804341401876987*^9, 3.804341409412942*^9}, {
   3.804341751642761*^9, 3.804341763905292*^9}, {3.804341797307976*^9, 
   3.8043418024814863`*^9}, {3.80434184581889*^9, 3.804341863851161*^9}, 
   3.804341930135056*^9, {3.804341968140644*^9, 3.804342012430502*^9}, {
   3.804342096348937*^9, 3.804342137909004*^9}, 3.8043422708483467`*^9, {
   3.804342340796399*^9, 3.804342369839341*^9}, {3.8043425595279427`*^9, 
   3.8043425846274567`*^9}, {3.804342652017815*^9, 3.804342664099402*^9}, {
   3.8043427594683104`*^9, 3.80434279628909*^9}, 3.804342850705316*^9, {
   3.804342928908042*^9, 3.804342942901683*^9}, {3.804343026064649*^9, 
   3.804343041216563*^9}, {3.804343076249714*^9, 3.804343128754484*^9}, {
   3.804343443840131*^9, 3.804343445324411*^9}, {3.804343477748535*^9, 
   3.804343514321164*^9}, {3.804343644476548*^9, 3.80434365587197*^9}, {
   3.80434370527213*^9, 3.8043437071843777`*^9}, {3.804343786297757*^9, 
   3.8043438436713037`*^9}, {3.804343942617141*^9, 3.804343943471793*^9}, {
   3.8043448529488573`*^9, 3.804344860586071*^9}, {3.804344967519166*^9, 
   3.804344979243846*^9}, {3.804345032411215*^9, 3.804345150984757*^9}, {
   3.804345551372299*^9, 3.804345574432785*^9}, {3.80434563536544*^9, 
   3.8043456728720417`*^9}, {3.8043486185537653`*^9, 3.804348629893417*^9}, {
   3.804348674478195*^9, 3.804348676570799*^9}, {3.8043488271312103`*^9, 
   3.804348886835476*^9}, {3.804349350854616*^9, 3.804349353471005*^9}, {
   3.804349396571639*^9, 3.804349401227777*^9}, 3.804349526376301*^9, {
   3.804349751639037*^9, 3.804349754382463*^9}, {3.804369425881366*^9, 
   3.804369427275457*^9}, {3.8043695466964006`*^9, 3.804369649792639*^9}, {
   3.804369771306951*^9, 3.804369780081492*^9}, {3.804369833599503*^9, 
   3.804369853128327*^9}, {3.804370262061945*^9, 3.8043702623535624`*^9}, {
   3.8043703208217077`*^9, 3.804370359318874*^9}, {3.804446701300519*^9, 
   3.804446728435069*^9}, {3.804446795734058*^9, 3.8044468823035803`*^9}, {
   3.804447232524191*^9, 3.8044472398570223`*^9}, {3.804447406541258*^9, 
   3.804447409386243*^9}, {3.804448579252914*^9, 3.804448579364211*^9}, {
   3.804448759211546*^9, 3.8044487624273376`*^9}, {3.818462949121224*^9, 
   3.818462949885953*^9}, {3.8184637067326593`*^9, 3.818463707702914*^9}, {
   3.818465116780349*^9, 3.818465135891502*^9}, {3.818465211650622*^9, 
   3.8184652126852093`*^9}, {3.818465256967985*^9, 3.8184652572588053`*^9}, 
   3.8184653337308197`*^9, 3.81846563033838*^9, {3.818466827536347*^9, 
   3.818466828502789*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"1ea9d9a0-38bf-48d1-ba7d-0326076dca90"],

Cell["Here are the found parameters:", "Text",
 CellChangeTimes->{{3.8184634837180567`*^9, 
  3.8184634937757597`*^9}},ExpressionUUID->"7c5b64fb-301e-41de-96cf-\
f7114a3334ea"],

Cell[BoxData[
 RowBox[{"calRes", "=", 
  RowBox[{
  "ecmObj3", "\[DoubleLongRightArrow]", "ECMMonTakeValue"}]}]], "Input",
 CellChangeTimes->{{3.8043412048630123`*^9, 3.804341214525535*^9}, {
  3.804341531793662*^9, 3.804341546440835*^9}, {3.81846349650004*^9, 
  3.818463501043887*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"51fe3b51-8254-43fa-a9e8-195323986385"],

Cell[CellGroupData[{

Cell["Using different minimization methods and distance functions", \
"Subsubsection",
 CellChangeTimes->{{3.818532190312188*^9, 3.81853219556567*^9}, {
  3.818532601933724*^9, 
  3.818532611957402*^9}},ExpressionUUID->"3ba93ca4-68dd-4740-888c-\
a7edda9fc71d"],

Cell[TextData[{
 "In the monad the calibration of the models is done with ",
 StyleBox["NMinimize", "Program"],
 ".  Hence, the monad function ",
 StyleBox["ECMMonCalibrate", "Program"],
 " takes all options of ",
 StyleBox["NMinimize", "Program"],
 " and can do calibrations  with the same data and parameter search space \
using different global minima finding methods and distance functions."
}], "Text",
 CellChangeTimes->{{3.808933139432103*^9, 3.80893315193039*^9}, {
  3.811247175120582*^9, 3.811247185740822*^9}, {3.818532631093704*^9, 
  3.818532739410831*^9}, {3.818534384901309*^9, 
  3.8185344170263147`*^9}},ExpressionUUID->"5328643f-7ced-4a24-aa23-\
fe412c783195"],

Cell[TextData[{
 StyleBox["Remark:",
  FontWeight->"Bold"],
 " ",
 StyleBox["EuclideanDistance", "Program"],
 " is an obvious distance function, but use others like infinity norm and sum \
norm. Also, we can use a distance function that takes parts of the data. \
(E.g. between days 50 and 150 because the rest of the data is, say, \
unreliable.)"
}], "Text",
 CellChangeTimes->{{3.818532197151672*^9, 3.818532387437668*^9}, {
  3.818532617255987*^9, 3.818532626368504*^9}, {3.818532753204282*^9, 
  3.8185327742294703`*^9}},ExpressionUUID->"a7fd77eb-f93b-4350-b768-\
752c60065162"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Verification of the fit", "Subsection",
 CellChangeTimes->{{3.818463521609366*^9, 
  3.81846352571533*^9}},ExpressionUUID->"a18a3eb5-6e8b-4075-aaac-\
4128c8c0edfd"],

Cell["Get the simulation max time from the targets data:", "Text",
 CellChangeTimes->{{3.818892657505002*^9, 
  3.81889267453885*^9}},ExpressionUUID->"d8a6e62b-3436-461e-914f-\
f8bacd024f52"],

Cell[BoxData[
 RowBox[{
  RowBox[{"maxTime", "=", 
   RowBox[{"Length", "[", 
    RowBox[{
    "aTargets", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8043694931898603`*^9, 3.8043694985003157`*^9}, {
  3.818463723043806*^9, 3.818463729185685*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"6d3fbcf1-c240-45a8-a8ab-c9e71c2d8949"],

Cell["\<\
Create a model, modify its rates to correspond to the calibration found \
parameter values, simulate, and plot the results:\
\>", "Text",
 CellChangeTimes->{{3.818892682548504*^9, 
  3.8188927800214367`*^9}},ExpressionUUID->"89351162-bdb2-4064-b2a3-\
61c2045ca57d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ecmObj4", "=", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ECMMonUnit", "[", "]"}], "\[DoubleLongRightArrow]", 
    "\[IndentingNewLine]", 
    RowBox[{"ECMMonSetSingleSiteModel", "[", "modelSEI2HR", "]"}], 
    "\[DoubleLongRightArrow]", "\[IndentingNewLine]", 
    RowBox[{"ECMMonAssignInitialConditions", "[", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{
        RowBox[{"TP", "[", "0", "]"}], "->", "usaPopulation"}], ",", 
       RowBox[{
        RowBox[{"SP", "[", "0", "]"}], "->", 
        RowBox[{"usaPopulation", "-", "1"}]}], ",", 
       RowBox[{
        RowBox[{"ISSP", "[", "0", "]"}], "\[Rule]", "1"}]}], "|>"}], "]"}], 
    "\[DoubleLongRightArrow]", "\[IndentingNewLine]", 
    RowBox[{"ECMMonAssignRateRules", "[", 
     RowBox[{"Join", "[", 
      RowBox[{"aDefaultPars", ",", 
       RowBox[{"Association", "[", 
        RowBox[{
        "calRes", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
        "]"}]}], "]"}], "]"}], "\[DoubleLongRightArrow]", 
    "\[IndentingNewLine]", 
    RowBox[{"ECMMonSimulate", "[", "maxTime", "]"}], 
    "\[DoubleLongRightArrow]", "\[IndentingNewLine]", 
    RowBox[{"ECMMonPlotSolutions", "[", 
     RowBox[{
      RowBox[{"___", "~~", "\"\<Population\>\"", "~~", "___"}], ",", 
      "maxTime", ",", 
      RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
      RowBox[{"LogPlot", "\[Rule]", "False"}]}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8043266532685747`*^9, 3.804326737745943*^9}, {
   3.8043364330871887`*^9, 3.80433643457232*^9}, 3.804337261494314*^9, {
   3.804341081816414*^9, 3.804341084034913*^9}, {3.804341436155323*^9, 
   3.804341450687169*^9}, {3.804341519891452*^9, 3.804341520474533*^9}, {
   3.8043415526076517`*^9, 3.804341567522797*^9}, {3.804341823047975*^9, 
   3.804341833723054*^9}, {3.804348915885347*^9, 3.804348930442541*^9}, {
   3.8043696962901363`*^9, 3.8043696965356607`*^9}, {3.8044464370792828`*^9, 
   3.804446437774735*^9}, {3.804447134915358*^9, 3.804447153121715*^9}, {
   3.804447185565065*^9, 3.8044471934397783`*^9}, {3.804447283273191*^9, 
   3.804447290831852*^9}, {3.804448798081204*^9, 3.804448799901333*^9}, {
   3.818463543121304*^9, 3.818463576273383*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"8da7c428-a611-4210-b8fd-6e896a28c14a"],

Cell["Get the simulations solutions:", "Text",
 CellChangeTimes->{{3.818892785060248*^9, 
  3.818892790752665*^9}},ExpressionUUID->"916fe32a-f6af-454f-8c1e-\
9f1592fa2438"],

Cell[BoxData[
 RowBox[{
  RowBox[{"aSol4", "=", 
   RowBox[{"ecmObj4", "\[DoubleLongRightArrow]", 
    RowBox[{"ECMMonGetSolutionValues", "[", 
     RowBox[{
      RowBox[{"Keys", "[", "aTargets", "]"}], ",", "maxTime"}], "]"}], 
    "\[DoubleLongRightArrow]", "ECMMonTakeValue"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.804343274748178*^9, 3.804343331118219*^9}, {
  3.804343385361916*^9, 3.80434339859935*^9}, {3.8043695169621*^9, 
  3.804369518086087*^9}, {3.818463547316519*^9, 3.818463548981028*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"52ee6e22-94a0-4a6b-ae54-7a7808868532"],

Cell["Plot the targets and simulated solutions:", "Text",
 CellChangeTimes->{{3.818892795252472*^9, 
  3.818892810136189*^9}},ExpressionUUID->"377ef70f-b65e-49c7-b62a-\
c16a892a2ad2"],

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"ListLogPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"aSol4", "[", "#", "]"}], ",", 
        RowBox[{"aTargets", "[", "#", "]"}]}], "}"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "#"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<Calibrated model\>\"", ",", "\"\<Target\>\""}], 
        "}"}]}]}], "]"}], "&"}], ",", 
   RowBox[{"Keys", "[", "aTargets", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.804343342791767*^9, 3.804343431095969*^9}, {
  3.8043452900727367`*^9, 3.8043453172084227`*^9}, {3.804348080751944*^9, 
  3.804348122423113*^9}, {3.804369520925066*^9, 3.804369521214137*^9}, {
  3.804369724944376*^9, 3.80436972528102*^9}, {3.804369956911933*^9, 
  3.8043699691961203`*^9}, {3.8043704076967382`*^9, 3.804370421398196*^9}, {
  3.804446442433774*^9, 3.804446457676242*^9}, {3.804447463850092*^9, 
  3.8044474662904997`*^9}, {3.818463551085907*^9, 3.818463551174946*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"bfad30f4-6763-4509-b63b-321160311515"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Conclusions from the calibration results", "Subsection",
 CellChangeTimes->{{3.818466872053653*^9, 
  3.818466890332745*^9}},ExpressionUUID->"661d7feb-9f5e-4162-8cff-\
fd6f659e9d88"],

Cell["\<\
We see the that with the calibration found parameter values the model can fit \
the data for the first 200 days, after that it overestimates the evolution of \
the infected and deceased populations.\
\>", "Text",
 CellChangeTimes->{{3.81853209655305*^9, 3.81853217088272*^9}, {
  3.818532404560837*^9, 3.818532452564782*^9}, {3.818802654604603*^9, 
  3.8188026547959146`*^9}},ExpressionUUID->"93087b09-e311-4427-ac90-\
b6146bf17012"],

Cell["We can conjecture that:", "Text",
 CellChangeTimes->{{3.818532455354309*^9, 
  3.8185324689447803`*^9}},ExpressionUUID->"c6699010-0e2b-4a5f-bc64-\
5cdb0e813aa2"],

Cell["The model is too simple, hence inadequate", "Item",
 CellChangeTimes->{{3.818532470587297*^9, 
  3.8185325123483458`*^9}},ExpressionUUID->"f50ceeee-325b-49ff-b8ab-\
a2f41594e5fa"],

Cell["\<\
That more complicated quarantine policy functions have to be used\
\>", "Item",
 CellChangeTimes->{{3.818532470587297*^9, 
  3.818532541052972*^9}},ExpressionUUID->"567c61cd-3aa0-4145-92e1-\
e18a94acb283"],

Cell["That the calibration process got stuck in some local minima", "Item",
 CellChangeTimes->{{3.818532470587297*^9, 
  3.81853256439133*^9}},ExpressionUUID->"7a1b1395-6f55-45ba-865f-\
59fbc9309914"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Unit testing", "Section",
 CellChangeTimes->{{3.8188710086863403`*^9, 
  3.818871015222294*^9}},ExpressionUUID->"e2071760-c24f-4876-9570-\
425df2b73818"],

Cell[TextData[{
 "We consider the preparation and systematic utilization of unit tests to be \
a very important component of any software development. Unit tests are \
especially important when complicated software package like ",
 StyleBox["ECMMon", "Program"],
 " are developed."
}], "Text",
 CellChangeTimes->{{3.818524757309753*^9, 3.818524774128935*^9}, {
   3.8185248056524363`*^9, 3.818524924054224*^9}, 
   3.818524964353797*^9},ExpressionUUID->"2c077c96-e0bf-4603-9760-\
3e8d7fd89576"],

Cell["\<\
For the presented software monad (and its separately developed, underlying \
packages) have implemented a few collections of tests, see [AAp10, AAp11]. \
\>", "Text",
 CellChangeTimes->{{3.818524757309753*^9, 3.818524774128935*^9}, {
  3.8185248056524363`*^9, 3.818524924054224*^9}, {3.818524969465714*^9, 
  3.81852501589511*^9}, {3.818525221919291*^9, 3.818525229884597*^9}, {
  3.8185260002731123`*^9, 
  3.8185260399032307`*^9}},ExpressionUUID->"eb5167f8-d9a8-41c0-a88e-\
5fa61cd7ad4d"],

Cell["Single-site model functionalities", "Subsection",
 CellChangeTimes->{{3.818871018923387*^9, 
  3.8188710324912567`*^9}},ExpressionUUID->"ea7881cb-a9c0-4d55-b801-\
002c8cf27dc2"],

Cell["Multi-site model adequacy", "Subsection",
 CellChangeTimes->{{3.8188710362601833`*^9, 
  3.818871052133768*^9}},ExpressionUUID->"29f560c9-de92-403d-9597-\
508e54dfb7a6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Future plans", "Section",
 CellChangeTimes->{{3.818524743730886*^9, 
  3.818524747938637*^9}},ExpressionUUID->"07e9adb1-b33e-40ff-a175-\
377798af7f2b"],

Cell["\<\
In this section we outline some of the directions in which the presented work \
on ECMMon can be extended.\
\>", "Text",
 CellChangeTimes->{{3.8185307705380793`*^9, 
  3.818530828093995*^9}},ExpressionUUID->"5b327aae-5143-4b30-b464-\
f7321f5c15a2"],

Cell[CellGroupData[{

Cell["More unit tests and random unit tests", "Subsection",
 CellChangeTimes->{{3.818524738466197*^9, 3.818524741874798*^9}, {
  3.818524951454624*^9, 
  3.818524961466961*^9}},ExpressionUUID->"ca376063-761d-4102-b215-\
fd48c6135a26"],

Cell["\<\
We plan to extend and add more complicated unit tests that test for both \
quantitative and qualitative behavior. Here are some examples for such tests:\
\
\>", "Text",
 CellChangeTimes->{{3.818524757309753*^9, 3.818524774128935*^9}, {
  3.8185248056524363`*^9, 3.818524924054224*^9}, {3.818524969465714*^9, 
  3.81852501589511*^9}, {3.818525221919291*^9, 3.818525229884597*^9}, {
  3.8185260002731123`*^9, 3.818526152652254*^9}, {3.8185268671225977`*^9, 
  3.818526887024197*^9}},ExpressionUUID->"ecb22a71-12ca-4091-8c6e-\
1cfa421e7353"],

Cell["\<\
Stock-vs-stock orbits produced by simulations of certain epidemic models\
\>", "Item",
 CellChangeTimes->{{3.818524757309753*^9, 3.818524774128935*^9}, {
  3.8185248056524363`*^9, 3.818524924054224*^9}, {3.818524969465714*^9, 
  3.81852501589511*^9}, {3.818525221919291*^9, 3.818525229884597*^9}, {
  3.8185260002731123`*^9, 3.818526202033759*^9}, {3.818526483515222*^9, 
  3.818526500670929*^9}},ExpressionUUID->"7d56eab5-b832-46ad-a0db-\
d7cda59a8633"],

Cell["\<\
Expected theoretical relationships between populations (or other stocks) for \
certain initial conditions and rates\
\>", "Item",
 CellChangeTimes->{{3.818524757309753*^9, 3.818524774128935*^9}, {
  3.8185248056524363`*^9, 3.818524924054224*^9}, {3.818524969465714*^9, 
  3.81852501589511*^9}, {3.818525221919291*^9, 3.818525229884597*^9}, {
  3.8185260002731123`*^9, 3.818526202033759*^9}, {3.818526483515222*^9, 
  3.8185265373856993`*^9}, {3.818526603891032*^9, 
  3.818526610134995*^9}},ExpressionUUID->"f7d48520-0eb0-4ab3-8b74-\
b2302230dd56"],

Cell["\<\
Wave-like propagation of the proportions of the infected populations in \
multi-site models over artificial countries and traveling patterns\
\>", "Item",
 CellChangeTimes->{{3.818524757309753*^9, 3.818524774128935*^9}, {
  3.8185248056524363`*^9, 3.818524924054224*^9}, {3.818524969465714*^9, 
  3.81852501589511*^9}, {3.818525221919291*^9, 3.818525229884597*^9}, {
  3.8185260002731123`*^9, 3.818526202033759*^9}, {3.818526483515222*^9, 
  3.8185266340364037`*^9}, {3.818526714570332*^9, 
  3.818526743427408*^9}},ExpressionUUID->"a9e5d6b0-fd23-49c8-a930-\
f326b1ae4890"],

Cell["\<\
Finding of correct parameter values with model calibration over different \
data (both artificial and real life)\
\>", "Item",
 CellChangeTimes->{{3.818524757309753*^9, 3.818524774128935*^9}, {
  3.8185248056524363`*^9, 3.818524924054224*^9}, {3.818524969465714*^9, 
  3.81852501589511*^9}, {3.818525221919291*^9, 3.818525229884597*^9}, {
  3.8185260002731123`*^9, 3.818526202033759*^9}, {3.818526483515222*^9, 
  3.8185267107455482`*^9}, {3.8185267495807457`*^9, 
  3.818526819766198*^9}},ExpressionUUID->"6ecba391-2949-4c2a-a31a-\
77a9c94ae572"],

Cell["Expected number of equations for different model set-ups", "Item",
 CellChangeTimes->{{3.818524757309753*^9, 3.818524774128935*^9}, {
  3.8185248056524363`*^9, 3.818524924054224*^9}, {3.818524969465714*^9, 
  3.81852501589511*^9}, {3.818525221919291*^9, 3.818525229884597*^9}, {
  3.8185260002731123`*^9, 3.818526202033759*^9}, {3.818526483515222*^9, 
  3.8185267107455482`*^9}, {3.8185267495807457`*^9, 
  3.818526929133398*^9}},ExpressionUUID->"8f1b6500-2114-4c27-862b-\
5594b064a913"],

Cell["\<\
Expected (relative) speed of simulations with respect to model sizes\
\>", "Item",
 CellChangeTimes->{{3.818524757309753*^9, 3.818524774128935*^9}, {
  3.8185248056524363`*^9, 3.818524924054224*^9}, {3.818524969465714*^9, 
  3.81852501589511*^9}, {3.818525221919291*^9, 3.818525229884597*^9}, {
  3.8185260002731123`*^9, 3.818526202033759*^9}, {3.818526483515222*^9, 
  3.8185267107455482`*^9}, {3.8185267495807457`*^9, 
  3.8185269511951523`*^9}},ExpressionUUID->"1ec90964-6e66-4873-b32c-\
4dbb3f9c3080"],

Cell[TextData[{
 "Further for the monad ",
 StyleBox["ECMMon", "Program"],
 " we plant to develop random pipeline unit tests as the ones in [AAp12] for \
the classification monad ",
 ButtonBox["ClCon",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/MathematicaForPrediction/blob/master/\
MonadicProgramming/MonadicContextualClassification.m"], None},
  ButtonNote->
   "https://github.com/antononcube/MathematicaForPrediction/blob/master/\
MonadicProgramming/MonadicContextualClassification.m"],
 ", [",
 ButtonBox["AA11",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://mathematicaforprediction.wordpress.com/2018/05/15/a-monad-\
for-classification-workflows/"], None},
  ButtonNote->
   "https://mathematicaforprediction.wordpress.com/2018/05/15/a-monad-for-\
classification-workflows/"],
 "]."
}], "Text",
 CellChangeTimes->{{3.818526961410611*^9, 3.818526983719214*^9}, {
  3.818527185244301*^9, 3.8185272439246817`*^9}, {3.818527773492401*^9, 
  3.818527774426463*^9}, {3.818527858556177*^9, 3.818527858560049*^9}, {
  3.818527893195857*^9, 
  3.818527893199935*^9}},ExpressionUUID->"795fac9b-795a-4f81-b440-\
182715e9eae5"]
}, Open  ]],

Cell[CellGroupData[{

Cell["More comprehensive calibration guides and documentation", "Subsection",
 CellChangeTimes->{{3.8185276476036673`*^9, 
  3.8185276647822113`*^9}},ExpressionUUID->"e62a4130-7155-4e02-888c-\
e5ed63c4e495"],

Cell[TextData[{
 "We plan to produce more comprehensive guides for doing calibration with ",
 StyleBox["ECMMon", "Program"],
 " and in general with Mathematica\[CloseCurlyQuote]s ",
 StyleBox[ButtonBox["NDSolve",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/NDSolve.html"], None},
  ButtonNote->"https://reference.wolfram.com/language/ref/NDSolve.html"], 
  "Program"],
 " and ",
 StyleBox[ButtonBox["NMinimize",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/NMinimize.html"], None},
  ButtonNote->"https://reference.wolfram.com/language/ref/NMinimize.html"], 
  "Program"],
 " functions."
}], "Text",
 CellChangeTimes->{{3.818527669878798*^9, 3.818527725229515*^9}, {
  3.8185277595293283`*^9, 3.818527759533046*^9}, {3.818527796761222*^9, 
  3.818527796765442*^9}},ExpressionUUID->"3bd040c7-7e17-414d-8a73-\
1c703d0ae229"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Full correspondence between the Mathematica and R implementations\
\>", "Subsection",
 CellChangeTimes->{{3.818530834585236*^9, 
  3.818530853890647*^9}},ExpressionUUID->"be892f12-aab8-44f1-a82b-\
1ee4c4c30a5e"],

Cell[TextData[{
 "The ingredients of the software monad ",
 StyleBox["ECMMon", "Program"],
 " and ",
 StyleBox["ECMMon", "Program"],
 " itself were designed and implemented in Mathematica first. The \
corresponding design and implementation was done in R, [",
 ButtonBox["AAr2",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/ECMMon-R"], None},
  ButtonNote->"https://github.com/antononcube/ECMMon-R"],
 "]. To distinguish the two implementations we call the R one ",
 StyleBox["ECMMon-R", "Program"],
 " and Mathematica (Wolfram Language) one ",
 StyleBox["ECMMon-WL", "Program"],
 ".  "
}], "Text",
 CellChangeTimes->{{3.81853091719521*^9, 
  3.818531149500373*^9}},ExpressionUUID->"5dd34ecd-500b-49ce-9986-\
7e000f605afa"],

Cell[TextData[{
 "At this point the calibration is not implemented in ",
 StyleBox["ECMMon-R", "Program"],
 ", but we plan to do that soon. "
}], "Text",
 CellChangeTimes->{{3.818530857164324*^9, 3.8185308651635923`*^9}, {
  3.8185309003088818`*^9, 3.818530911727808*^9}, {3.8185310657093773`*^9, 
  3.8185310771953773`*^9}, {3.818531164969714*^9, 3.81853118780721*^9}, {
  3.81853127472575*^9, 
  3.818531331545323*^9}},ExpressionUUID->"27f51efc-04ab-4857-b670-\
22a5610aaa1b"],

Cell["\<\
Using ECMMon-R (and the RStudio\[CloseCurlyQuote]s Shiny ecosystem) allows \
for highly shareable interactive interfaces to be programed. Here is an \
example: https://antononcube.shinyapps.io/SEI2HR-flexdashboard/ .\
\>", "Text",
 CellChangeTimes->{{3.818530857164324*^9, 3.8185308651635923`*^9}, {
  3.8185309003088818`*^9, 3.818530911727808*^9}, {3.8185310657093773`*^9, 
  3.8185310771953773`*^9}, {3.818531164969714*^9, 3.81853118780721*^9}, {
  3.81853127472575*^9, 
  3.818531445548512*^9}},ExpressionUUID->"3b9354f1-dd3b-407c-959c-\
93c73de622f1"],

Cell["\<\
(With Mathematica similar interactive interfaces are presented in [AA7, AA8].)\
\>", "Text",
 CellChangeTimes->{{3.8185314566303453`*^9, 
  3.818531497187579*^9}},ExpressionUUID->"48579555-fca3-4a94-bb37-\
9d811acdbc75"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Model transfer between Mathematica and R", "Subsection",
 CellChangeTimes->{{3.81853119798844*^9, 
  3.818531244125567*^9}},ExpressionUUID->"1b17ac72-82b6-4a87-b8c7-\
6b7c098a5376"],

Cell["\<\
We are very interested in transferring epidemiological models from \
Mathematica to R (or Python, or Julia.)\
\>", "Text",
 CellChangeTimes->{{3.81853122550633*^9, 3.818531266996787*^9}, {
  3.818531505017906*^9, 
  3.818531563562899*^9}},ExpressionUUID->"815364d4-d3e7-46db-b319-\
005c686c7208"],

Cell["\<\
This can be done in two principle ways: (i) using Mathematica expressions \
parsers, or (ii) using matrix representations. We plan to investigate the \
usage of both approaches.\
\>", "Text",
 CellChangeTimes->{{3.8185315675227203`*^9, 
  3.81853163001772*^9}},ExpressionUUID->"5fb0acb4-8f71-4239-8cfb-\
1587dc4caccc"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Conversational agent", "Subsection",
 CellChangeTimes->{{3.8050177098953753`*^9, 3.805017715306533*^9}, {
  3.81853163812971*^9, 
  3.818531638804062*^9}},ExpressionUUID->"d93afca6-f81d-4711-a700-\
a4a7b9d3b0e3"],

Cell["\<\
Consider the making of a conversational agent for epidemiology modeling \
workflows building. Initial design and implementation is given in [AA13, \
AA14].\
\>", "Text",
 CellChangeTimes->{{3.805017879312057*^9, 3.805017936687951*^9}, {
  3.8050180447016573`*^9, 3.8050180916822987`*^9}, {3.818525959502941*^9, 
  3.8185259623151083`*^9}},ExpressionUUID->"05162e3d-45ef-4216-9d57-\
2b8245b9b239"],

Cell["\<\
Consider the following epidemiology modeling workflow specification:\
\>", "Text",
 CellChangeTimes->{{3.8050202590538883`*^9, 
  3.805020273644047*^9}},ExpressionUUID->"e610e1cc-8c26-42e7-862d-\
3ad03968d1bd"],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "lsCommands", "=", 
   "\"\<create with SEI2HR;\nassign 100000 to total population;\nset infected \
normally symptomatic population to be 0;\nset infected severely symptomatic \
population to be 1;\nassign 0.56 to contact rate of infected normally \
symptomatic population;\nassign 0.58 to contact rate of infected severely \
symptomatic population;\nassign 0.1 to contact rate of the hospitalized \
population;\nsimulate for 240 days;\nplot populations results;\ncalibrate for \
target DIPt -> tsDeaths, over parameters contactRateISSP in from 0.1 to 0.7;\n\
echo pipeline value\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.805018432858494*^9, 3.8050184420935993`*^9}, {
   3.80501992017662*^9, 3.805019938569845*^9}, {3.805019997555914*^9, 
   3.805020001424638*^9}, {3.805020062548814*^9, 3.805020091594904*^9}, {
   3.80502065321824*^9, 3.805020746785475*^9}, {3.805020795072227*^9, 
   3.805020871415182*^9}, {3.8050365342032223`*^9, 3.8050365507977867`*^9}, {
   3.805036698040254*^9, 3.805036698253428*^9}, {3.8050373245707083`*^9, 
   3.805037337260491*^9}, 3.8050374426857567`*^9, {3.80504647591197*^9, 
   3.805046477664949*^9}, {3.818528003615902*^9, 3.818528003930348*^9}, {
   3.8185281234072104`*^9, 3.818528123889879*^9}, {3.818530711239834*^9, 
   3.818530719462633*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"018e98fb-8422-4308-9405-329894d5b49c"],

Cell["\<\
Here is the ECMMon code generated using the workflow specification:\
\>", "Text",
 CellChangeTimes->{{3.805020233988604*^9, 
  3.805020253372898*^9}},ExpressionUUID->"a7ca4328-35f8-4105-88fe-\
1a49618789d9"],

Cell[BoxData[
 RowBox[{"ToEpidemiologyModelingWorkflowCode", "[", 
  RowBox[{"lsCommands", ",", " ", 
   RowBox[{"\"\<Execute\>\"", "\[Rule]", "False"}], ",", 
   RowBox[{"\"\<StringResult\>\"", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.805018339756577*^9, 3.805018428760912*^9}, {
  3.8112496214443007`*^9, 3.811249623354583*^9}, {3.8185279321888247`*^9, 
  3.8185279383867893`*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"58acbfa1-bd01-4a85-956b-c5345b658f02"],

Cell["Here is the execution of the code above:", "Text",
 CellChangeTimes->{{3.805020283399228*^9, 
  3.805020305100173*^9}},ExpressionUUID->"daa75ffc-f0ad-4f22-9ee0-\
c24c4fcf45a5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tsDeaths", "=", 
      RowBox[{"Take", "[", 
       RowBox[{"lsDeaths", ",", "150"}], "]"}]}], "}"}], ",", 
    RowBox[{"ToEpidemiologyModelingWorkflowCode", "[", "lsCommands", "]"}]}], 
   "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.805018339756577*^9, 3.805018428760912*^9}, {
   3.8050184697025642`*^9, 3.8050184772611837`*^9}, 3.805020100416257*^9, {
   3.818528096429263*^9, 3.8185281199742823`*^9}, {3.8185305995952253`*^9, 
   3.8185306059933167`*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"daae76e6-ac31-48e4-a291-c6db132f40b6"],

Cell[CellGroupData[{

Cell["Different target languages", "Subsubsection",
 CellChangeTimes->{{3.805020115681645*^9, 
  3.805020122926235*^9}},ExpressionUUID->"1c09e056-b293-4954-be45-\
c908e53350e5"],

Cell["\<\
Using the natural commands workflow specification we can generate code to \
other languages, like, Python or R:\
\>", "Text",
 CellChangeTimes->{{3.805020124816115*^9, 3.805020172786942*^9}, {
  3.805020204591276*^9, 
  3.805020213298699*^9}},ExpressionUUID->"a9892f57-a43b-4a8e-9a61-\
82b5f77d43d2"],

Cell[BoxData[
 RowBox[{"ToEpidemiologyModelingWorkflowCode", "[", 
  RowBox[{"lsCommands", ",", " ", 
   RowBox[{"\"\<Target\>\"", "\[Rule]", "\"\<Python\>\""}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.8050201840486107`*^9, 3.8050201998991327`*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"697763f6-3ab9-4645-bac4-2bbb4f719bac"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["References", "Section",
 CellChangeTimes->{{3.793819068515966*^9, 
  3.793819069978736*^9}},ExpressionUUID->"c0d6d2af-65f1-40ef-8707-\
9645deca026f"],

Cell[CellGroupData[{

Cell["Articles", "Subsection",
 CellChangeTimes->{{3.7938192941283903`*^9, 
  3.793819299584835*^9}},ExpressionUUID->"e47ff3ac-6c5e-45b8-b850-\
59cbf485d49a"],

Cell[TextData[{
 "[Wk1] Wikipedia entry, ",
 ButtonBox["Monad",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://en.wikipedia.org/wiki/Monad_(functional_programming)"], None},
  ButtonNote->
   "https://en.wikipedia.org/wiki/Monad_(functional_programming)"],
 "."
}], "Text",
 CellChangeTimes->{{3.7341287089547653`*^9, 3.734128709043704*^9}, {
  3.734128749644702*^9, 3.734128778892705*^9}, {3.7350532365259733`*^9, 
  3.735053237323921*^9}, {3.812650095934407*^9, 
  3.8126500988475313`*^9}},ExpressionUUID->"4d42199a-814d-492f-a7f2-\
02f137b2b322"],

Cell[TextData[{
 "[Wk2] Wikipedia entry, ",
 ButtonBox["\"Compartmental models in epidemiology\"",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://en.wikipedia.org/wiki/Compartmental_models_in_epidemiology"],
     None},
  ButtonNote->
   "https://en.wikipedia.org/wiki/Compartmental_models_in_epidemiology"],
 "."
}], "Text",
 CellChangeTimes->{{3.7925809029512987`*^9, 3.792580956058198*^9}, {
  3.7951690818496*^9, 3.7951690840996933`*^9}, {3.812650076346504*^9, 
  3.812650076447933*^9}},ExpressionUUID->"713603dc-4cac-40a5-9f06-\
dadc76df4695"],

Cell[TextData[{
 "[Wk3] Wikipedia entry, ",
 ButtonBox["\"Coronavirus disease 2019\"",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://en.wikipedia.org/wiki/Coronavirus_disease_2019"], None},
  ButtonNote->"https://en.wikipedia.org/wiki/Coronavirus_disease_2019"],
 "."
}], "Text",
 CellChangeTimes->{{3.79516908583174*^9, 3.795169130465127*^9}, {
  3.81265007908055*^9, 
  3.812650086820813*^9}},ExpressionUUID->"db7f8ad6-2890-4b15-bcdf-\
733d43f7cea8"],

Cell[TextData[{
 "[BC1] Lucia Breierova,  Mark Choudhari,  ",
 ButtonBox["An Introduction to Sensitivity Analysis",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://ocw.mit.edu/courses/sloan-school-of-management/15-988-system-\
dynamics-self-study-fall-1998-spring-1999/readings/sensitivityanalysis.pdf"], 
    None},
  ButtonNote->
   "https://ocw.mit.edu/courses/sloan-school-of-management/15-988-system-\
dynamics-self-study-fall-1998-spring-1999/readings/sensitivityanalysis.pdf"],
 ", (1996), Massachusetts Institute of Technology."
}], "Text",
 CellChangeTimes->{{3.7951006575283747`*^9, 3.795100709469963*^9}, {
  3.795100763074478*^9, 
  3.795100763076239*^9}},ExpressionUUID->"c2aef62b-dfd5-4cc3-ae63-\
ec8938758a24"],

Cell["\<\
[JS1] John D.Sterman, Business Dynamics: Systems Thinking and Modeling for a \
Complex World. (2000), New York: McGraw.\
\>", "Text",
 CellChangeTimes->{{3.797241056327997*^9, 3.7972410749139147`*^9}, {
  3.797241239610293*^9, 
  3.797241244600545*^9}},ExpressionUUID->"4771597b-cd7c-4198-8f90-\
9a416293e736"],

Cell[TextData[{
 "[HH1] Herbert W. Hethcote (2000). ",
 ButtonBox["\"The Mathematics of Infectious Diseases\"",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://leonidzhukov.net/hse/2014/socialnetworks/papers/2000SiamRev.\
pdf"], None},
  ButtonNote->
   "http://leonidzhukov.net/hse/2014/socialnetworks/papers/2000SiamRev.pdf"],
 ". SIAM Review. 42 (4): 599\[Dash]653. Bibcode:2000SIAMR..42..599H. \
doi:10.1137/s0036144500371907."
}], "Text",
 CellChangeTimes->{{3.792336502490754*^9, 3.792336535278623*^9}, {
  3.792409361602792*^9, 
  3.792409368869828*^9}},ExpressionUUID->"7f75590e-6686-4647-898f-\
7c2cb011b89b"],

Cell[TextData[{
 "[AA1] Anton Antonov, ",
 ButtonBox["\[CloseCurlyDoubleQuote]Monad code generation and extension\
\[CloseCurlyDoubleQuote]",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/MathematicaForPrediction/blob/master/\
MarkdownDocuments/Monad-code-generation-and-extension.md"], None},
  ButtonNote->
   "https://github.com/antononcube/MathematicaForPrediction/blob/master/\
MarkdownDocuments/Monad-code-generation-and-extension.md"],
 ", (2017),  ",
 ButtonBox["MathematicaForPrediction at GitHub/antononcube",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/MathematicaForPrediction"], None},
  ButtonNote->"https://github.com/antononcube/MathematicaForPrediction"],
 StyleBox[".",
  FontSlant->"Italic"]
}], "Text",
 CellChangeTimes->{{3.705575754330531*^9, 3.705575756704212*^9}, {
   3.705575967113101*^9, 3.70557597427962*^9}, {3.7055762229979753`*^9, 
   3.705576259716416*^9}, {3.705578011040422*^9, 3.705578012711824*^9}, {
   3.706865177302528*^9, 3.706865180238822*^9}, {3.706866115695068*^9, 
   3.7068661183026342`*^9}, {3.72710242100144*^9, 3.7271024577163258`*^9}, {
   3.727105928209372*^9, 3.727105928599859*^9}, {3.729945445854418*^9, 
   3.729945446549246*^9}, 3.729963300846294*^9, {3.7392713858055973`*^9, 
   3.7392713904968777`*^9}, {3.812650126264995*^9, 3.812650136242999*^9}, 
   3.818527327133931*^9},ExpressionUUID->"809feb64-1028-4fff-af90-\
988263acdce2"],

Cell[TextData[{
 "[AA2] Anton Antonov, ",
 ButtonBox["\"Coronavirus propagation modeling considerations\"",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling/blob/master/Projects/\
Coronavirus-propagation-dynamics/Documents/Coronavirus-propagation-modeling-\
considerations.md"], None},
  ButtonNote->
   "https://github.com/antononcube/SystemModeling/blob/master/Projects/\
Coronavirus-propagation-dynamics/Documents/Coronavirus-propagation-modeling-\
considerations.md"],
 ", (2020), ",
 ButtonBox["SystemModeling at GitHub/antononcube",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling"], None},
  ButtonNote->"https://github.com/antononcube/SystemModeling"],
 "."
}], "Text",
 CellChangeTimes->{{3.792580630613844*^9, 3.79258066346693*^9}, {
   3.792580699618342*^9, 3.792580699619379*^9}, {3.812650138729381*^9, 
   3.8126501387629013`*^9}, 
   3.818527317211266*^9},ExpressionUUID->"e70bbcdd-dbf6-45a0-b636-\
a3a46e55cbb1"],

Cell[TextData[{
 "[AA3] Anton Antonov, ",
 ButtonBox["\"Basic experiments workflow for simple epidemiological models\"",
  
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling/blob/master/Projects/\
Coronavirus-propagation-dynamics/Documents/Basic-experiments-workflow-for-\
simple-epidemiological-models.md"], None},
  ButtonNote->
   "https://github.com/antononcube/SystemModeling/blob/master/Projects/\
Coronavirus-propagation-dynamics/Documents/Basic-experiments-workflow-for-\
simple-epidemiological-models.md"],
 ", (2020), ",
 ButtonBox["SystemModeling at GitHub/antononcube",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling"], None},
  ButtonNote->"https://github.com/antononcube/SystemModeling"],
 "."
}], "Text",
 CellChangeTimes->{{3.792836760631132*^9, 3.792836844502586*^9}, {
   3.792942846010427*^9, 3.792942880222164*^9}, {3.812650140518017*^9, 
   3.812650140968039*^9}, 
   3.818527314512082*^9},ExpressionUUID->"1ffdc8e6-e941-452b-8535-\
85b31b24bd56"],

Cell[TextData[{
 "[AA4] Anton Antonov, ",
 ButtonBox["\"Scaling of Epidemiology Models with Multi-site Compartments\"",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling/blob/master/Projects/\
Coronavirus-propagation-dynamics/Documents/Scaling-of-epidemiology-models-\
with-multi-site-compartments.md"], None},
  ButtonNote->
   "https://github.com/antononcube/SystemModeling/blob/master/Projects/\
Coronavirus-propagation-dynamics/Documents/Scaling-of-epidemiology-models-\
with-multi-site-compartments.md"],
 ", (2020), ",
 ButtonBox["SystemModeling at GitHub/antononcube",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling"], None},
  ButtonNote->"https://github.com/antononcube/SystemModeling"],
 "."
}], "Text",
 CellChangeTimes->{{3.793819181468184*^9, 3.793819243245372*^9}, {
   3.793819286943555*^9, 3.793819291565818*^9}, {3.812650142689406*^9, 
   3.812650143240543*^9}, 
   3.818527308537243*^9},ExpressionUUID->"f71f9e02-a75a-4fe1-a070-\
0089ff679413"],

Cell[TextData[{
 "[AA5] Anton Antonov, ",
 ButtonBox["\"WirVsVirus hackathon multi-site SEI2R over a hexagonal grid \
graph\"",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling/blob/master/Projects/\
Coronavirus-propagation-dynamics/Documents/WirVsVirus-hackathon-Multi-site-\
SEI2R-over-a-hexagonal-grid-graph.md"], None},
  ButtonNote->
   "https://github.com/antononcube/SystemModeling/blob/master/Projects/\
Coronavirus-propagation-dynamics/Documents/WirVsVirus-hackathon-Multi-site-\
SEI2R-over-a-hexagonal-grid-graph.md"],
 ", (2020), ",
 ButtonBox["SystemModeling at GitHub/antononcube",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling"], None},
  ButtonNote->"https://github.com/antononcube/SystemModeling"],
 "."
}], "Text",
 CellChangeTimes->{{3.795432842854154*^9, 3.795432885121542*^9}, {
   3.812650144556973*^9, 3.812650145209302*^9}, 
   3.81852730556798*^9},ExpressionUUID->"e5de2654-9e69-4879-bb06-\
ed3674be7919"],

Cell[TextData[{
 "[AA6] Anton Antonov, ",
 ButtonBox["\"NY Times COVID-19 data visualization\"",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling/blob/master/Projects/\
Coronavirus-propagation-dynamics/Documents/NYTimes-COVID-19-data-\
visualization.md"], None},
  ButtonNote->
   "https://github.com/antononcube/SystemModeling/blob/master/Projects/\
Coronavirus-propagation-dynamics/Documents/NYTimes-COVID-19-data-\
visualization.md"],
 ", (2020), ",
 ButtonBox["SystemModeling at GitHub/antononcube",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling"], None},
  ButtonNote->"https://github.com/antononcube/SystemModeling"],
 "."
}], "Text",
 CellChangeTimes->{{3.7954323682421427`*^9, 3.795432392744731*^9}, {
   3.7954324454285316`*^9, 3.7954324522000303`*^9}, {3.7954328469717093`*^9, 
   3.795432847646503*^9}, {3.812650146626939*^9, 3.81265014707673*^9}, 
   3.818527482397541*^9},ExpressionUUID->"c06cc9da-8cd5-41bd-bab1-\
235ec1c3151a"],

Cell[TextData[{
 "[AA7] Anton Antonov, ",
 ButtonBox["\"SEI2HR model with quarantine scenarios\[CloseCurlyDoubleQuote]",
  
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling/blob/master/Projects/\
Coronavirus-propagation-dynamics/Documents/SEI2HR-model-with-quarantine-\
scenarios.md"], None},
  ButtonNote->
   "https://github.com/antononcube/SystemModeling/blob/master/Projects/\
Coronavirus-propagation-dynamics/Documents/SEI2HR-model-with-quarantine-\
scenarios.md"],
 ", (2020), ",
 ButtonBox["SystemModeling at GitHub/antononcube",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling"], None},
  ButtonNote->"https://github.com/antononcube/SystemModeling"],
 "."
}], "Text",
 CellChangeTimes->{{3.793819181468184*^9, 3.793819243245372*^9}, {
   3.793819286943555*^9, 3.793819291565818*^9}, {3.795432239653325*^9, 
   3.795432296873851*^9}, {3.795432365812475*^9, 3.795432365913549*^9}, {
   3.7954328512577143`*^9, 3.795432852090397*^9}, {3.812650148517221*^9, 
   3.81265014902309*^9}, 3.818527484884809*^9, {3.818536641200776*^9, 
   3.8185366513699713`*^9}},ExpressionUUID->"96710e6b-b7a7-45b2-87bd-\
090b89fff93c"],

Cell[TextData[{
 "[AA8] Anton Antonov, ",
 ButtonBox["\"SEI2HR-Econ model with quarantine and supplies scenarios\"",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling/blob/master/Projects/\
Coronavirus-propagation-dynamics/Documents/SEI2HR-Econ-model-with-quarantine-\
and-supplies-scenarios.md"], None},
  ButtonNote->
   "https://github.com/antononcube/SystemModeling/blob/master/Projects/\
Coronavirus-propagation-dynamics/Documents/SEI2HR-Econ-model-with-quarantine-\
and-supplies-scenarios.md"],
 ", (2020), ",
 ButtonBox["SystemModeling at GitHub/antononcube",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling"], None},
  ButtonNote->"https://github.com/antononcube/SystemModeling"],
 "."
}], "Text",
 CellChangeTimes->{{3.793819181468184*^9, 3.793819243245372*^9}, {
   3.793819286943555*^9, 3.793819291565818*^9}, {3.795432239653325*^9, 
   3.795432296873851*^9}, {3.795432365812475*^9, 3.795432365913549*^9}, {
   3.7954328512577143`*^9, 3.795432852090397*^9}, {3.795643393939996*^9, 
   3.795643423741897*^9}, {3.81265015145321*^9, 3.812650152285673*^9}, 
   3.8185274888390512`*^9},ExpressionUUID->"cf2d8ae2-301f-457e-ac66-\
b35e2a1b23ec"],

Cell[TextData[{
 "[AA9] Anton Antonov, ",
 ButtonBox["Modelers questionnaire",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling/blob/master/org/\
Modelers-questionnaire.org"], None},
  ButtonNote->
   "https://github.com/antononcube/SystemModeling/blob/master/org/Modelers-\
questionnaire.org"],
 ", (2020), ",
 ButtonBox["SystemModeling at GitHub/antononcube",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling"], None},
  ButtonNote->"https://github.com/antononcube/SystemModeling"],
 "."
}], "Text",
 CellChangeTimes->{{3.818527252587009*^9, 3.818527260788211*^9}, {
  3.81852745293075*^9, 3.818527490429723*^9}, {3.818527531750806*^9, 
  3.8185275317547407`*^9}, {3.8185275625184*^9, 3.8185275628335047`*^9}, {
  3.818531995751349*^9, 
  3.81853199705622*^9}},ExpressionUUID->"f4553b30-982a-4cb2-aed8-\
f15733155331"],

Cell[TextData[{
 "[AA10] Anton Antonov, ",
 ButtonBox["Calibrators questionnaire",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling/blob/master/org/\
Calibrators-questionnaire.org"], None},
  ButtonNote->
   "https://github.com/antononcube/SystemModeling/blob/master/org/Calibrators-\
questionnaire.org"],
 ", (2020), ",
 ButtonBox["SystemModeling at GitHub/antononcube",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling"], None},
  ButtonNote->"https://github.com/antononcube/SystemModeling"],
 "."
}], "Text",
 CellChangeTimes->{{3.818527262914752*^9, 3.818527274772482*^9}, {
  3.818527496392495*^9, 3.818527500394882*^9}, {3.8185275533738947`*^9, 
  3.818527559975596*^9}, {3.8185319989802313`*^9, 
  3.818531999486556*^9}},ExpressionUUID->"416d1323-0077-4001-93a6-\
b0f3c05b6055"],

Cell[TextData[{
 "[AA11] Anton Antonov, ",
 ButtonBox["\[OpenCurlyDoubleQuote]A monad for classification workflow\
\[CloseCurlyDoubleQuote]",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://mathematicaforprediction.wordpress.com/2018/05/15/a-monad-\
for-classification-workflows/"], None},
  ButtonNote->
   "https://mathematicaforprediction.wordpress.com/2018/05/15/a-monad-for-\
classification-workflows/"],
 ", (2018), ",
 ButtonBox["MathematicaForPrediction at WordPress",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://mathematicaforprediction.wordpress.com"], None},
  ButtonNote->"https://mathematicaforprediction.wordpress.com"],
 "."
}], "Text",
 CellChangeTimes->{{3.818527277911252*^9, 3.8185272845264397`*^9}, {
  3.818527335647876*^9, 3.818527372986568*^9}, {3.818527405544982*^9, 
  3.818527448861972*^9}, {3.8188925250349073`*^9, 
  3.818892530648134*^9}},ExpressionUUID->"1c010036-af5f-4418-b70d-\
37ed96c3818b"],

Cell[TextData[{
 "[AA12] Anton Antonov, ",
 ButtonBox["Parametrized event records data\[NonBreakingSpace]transformations",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://mathematicaforprediction.wordpress.com/2018/10/05/\
parametrized-event-records-data-transformations/"], None},
  ButtonNote->
   "https://mathematicaforprediction.wordpress.com/2018/10/05/parametrized-\
event-records-data-transformations/"],
 ", (2018), ",
 ButtonBox["MathematicaForPrediction at WordPress",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://mathematicaforprediction.wordpress.com"], None},
  ButtonNote->"https://mathematicaforprediction.wordpress.com"],
 "."
}], "Text",
 CellChangeTimes->{{3.818892483724503*^9, 3.818892493725944*^9}, {
  3.818892532968197*^9, 
  3.818892557740457*^9}},ExpressionUUID->"ebe6b336-343f-4197-a1b6-\
5ba5d918846b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Repositories, packages", "Subsection",
 CellChangeTimes->{{3.792792973327919*^9, 3.7927929880315247`*^9}, {
  3.7930262856498327`*^9, 
  3.7930262863136473`*^9}},ExpressionUUID->"3e32ab85-01e1-4e5f-9636-\
755157cf0f22"],

Cell[TextData[{
 "[WRI1] Wolfram Research, Inc., ",
 ButtonBox["\"Epidemic Data for Novel Coronavirus COVID-19\"",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.wolframcloud.com/obj/resourcesystem/published/\
DataRepository/resources/Epidemic-Data-for-Novel-Coronavirus-COVID-19"], None},
  ButtonNote->
   "https://www.wolframcloud.com/obj/resourcesystem/published/DataRepository/\
resources/Epidemic-Data-for-Novel-Coronavirus-COVID-19"],
 ", ",
 ButtonBox["WolframCloud",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.wolframcloud.com"], None},
  ButtonNote->"https://www.wolframcloud.com"],
 "."
}], "Text",
 CellChangeTimes->{{3.79284700154799*^9, 3.792847018423129*^9}, {
  3.792848397923408*^9, 
  3.792848432986006*^9}},ExpressionUUID->"61e14905-c550-4e4d-a9ef-\
eb2ed499dcdb"],

Cell[TextData[{
 "[WRI2] Wolfram Research Inc., ",
 ButtonBox["USA county records",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling/blob/master/Data/\
dfUSACountyRecords.csv"], None},
  ButtonNote->
   "https://github.com/antononcube/SystemModeling/blob/master/Data/\
dfUSACountyRecords.csv"],
 ", (2020), ",
 ButtonBox["System Modeling at GitHub",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling"], None},
  ButtonNote->"https://github.com/antononcube/SystemModeling"],
 "."
}], "Text",
 CellChangeTimes->{{3.794345644675522*^9, 3.79434574018814*^9}, {
  3.795434495845536*^9, 
  3.795434495934627*^9}},ExpressionUUID->"0dae8ad8-a296-4e19-805f-\
3706ed558206"],

Cell[TextData[{
 "[NYT1] The New York Times, ",
 ButtonBox["Coronavirus (Covid-19) Data in the United States",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/nytimes/covid-19-data"], None},
  ButtonNote->"https://github.com/nytimes/covid-19-data"],
 ", (2020), GitHub."
}], "Text",
 CellChangeTimes->{{3.794345559432405*^9, 3.794345636927494*^9}, {
  3.794356689316554*^9, 
  3.79435669028293*^9}},ExpressionUUID->"c653e0a1-c063-4fa7-bbbd-\
8f8d10d5173f"],

Cell[TextData[{
 "[AAr1] Anton Antonov, ",
 ButtonBox["Coronavirus propagation dynamics project",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling/tree/master/Projects/\
Coronavirus-propagation-dynamics"], None},
  ButtonNote->
   "https://github.com/antononcube/SystemModeling/tree/master/Projects/\
Coronavirus-propagation-dynamics"],
 ", (2020), ",
 ButtonBox["SystemModeling at GitHub/antononcube",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling"], None},
  ButtonNote->"https://github.com/antononcube/SystemModeling"],
 "."
}], "Text",
 CellChangeTimes->{{3.788089798305283*^9, 3.788089800881453*^9}, {
  3.7882595209218683`*^9, 3.788259579130772*^9}, {3.788259655834017*^9, 
  3.7882596599065332`*^9}, {3.792335102609013*^9, 3.792335162932585*^9}, {
  3.7925188075238953`*^9, 3.792518811281426*^9}, {3.818525430172484*^9, 
  3.818525436977661*^9}},ExpressionUUID->"db613a2b-4dd9-4a54-81fb-\
50728e29427a"],

Cell[TextData[{
 "[AAr2] Anton Antonov, ",
 ButtonBox["Epidemiology Compartmental Modeling Monad R package",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/ECMMon-R"], None},
  ButtonNote->"https://github.com/antononcube/ECMMon-R"],
 ", (2020), ",
 ButtonBox["ECMMon-R at GitHu/antononcube",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/ECMMon-R"], None},
  ButtonNote->"https://github.com/antononcube/ECMMon-R"],
 "."
}], "Text",
 CellChangeTimes->{{3.8126507517741213`*^9, 3.812650765858988*^9}, {
  3.812650805077936*^9, 3.812650828275137*^9}, {3.81852541588339*^9, 
  3.8185254269987926`*^9}},ExpressionUUID->"5e36df52-a8c6-41bd-963b-\
358b5d9fd408"],

Cell[TextData[{
 "[AAp1] Anton Antonov, ",
 ButtonBox["State monad code generator Mathematica package",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/MathematicaForPrediction/blob/master/\
MonadicProgramming/StateMonadCodeGenerator.m"], None},
  ButtonNote->
   "https://github.com/antononcube/MathematicaForPrediction/blob/master/\
MonadicProgramming/StateMonadCodeGenerator.m"],
 ", (2017), ",
 ButtonBox["MathematicaForPrediction at GitHub/antononcube",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/MathematicaForPrediction"], None},
  ButtonNote->"https://github.com/antononcube/MathematicaForPrediction"],
 StyleBox[".",
  FontSlant->"Italic"]
}], "Text",
 CellChangeTimes->{{3.706456619439595*^9, 3.706456747838007*^9}, {
   3.706865186763788*^9, 3.706865193986063*^9}, {3.7271026559922657`*^9, 
   3.7271026562659388`*^9}, {3.72710587790245*^9, 3.727105878229785*^9}, {
   3.7278047782737637`*^9, 3.727804779240018*^9}, {3.729945256286964*^9, 
   3.72994525994268*^9}, {3.7333326115788317`*^9, 3.733332614938723*^9}, 
   3.81265016762045*^9, {3.818525398984475*^9, 
   3.818525413554907*^9}},ExpressionUUID->"d490c4f6-48d3-46ac-812a-\
25fe94c367a0"],

Cell[TextData[{
 "[AAp2] Anton Antonov, ",
 ButtonBox["Monadic tracing Mathematica package",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/MathematicaForPrediction/blob/master/\
MonadicProgramming/MonadicTracing.m"], None},
  ButtonNote->
   "https://github.com/antononcube/MathematicaForPrediction/blob/master/\
MonadicProgramming/MonadicTracing.m"],
 ", (2017), ",
 ButtonBox["MathematicaForPrediction at GitHub/antononcube",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/MathematicaForPrediction"], None},
  ButtonNote->"https://github.com/antononcube/MathematicaForPrediction"],
 StyleBox[".",
  FontSlant->"Italic"]
}], "Text",
 CellChangeTimes->{{3.7064568538808203`*^9, 3.706456930742619*^9}, {
   3.7068652023343678`*^9, 3.70686520471863*^9}, {3.727102661284461*^9, 
   3.727102661489911*^9}, {3.727105882066367*^9, 3.727105882370846*^9}, {
   3.727804785214168*^9, 3.727804797634253*^9}, {3.729944985867598*^9, 
   3.729944986012497*^9}, {3.72994526316127*^9, 3.7299452643534203`*^9}, {
   3.733332617099053*^9, 3.733332618459921*^9}, 3.812650170747499*^9, {
   3.818525388500587*^9, 
   3.8185253956445847`*^9}},ExpressionUUID->"c1fee6c3-bcf4-43b1-b60c-\
19ac0d71ae7a"],

Cell[TextData[{
 "[AAp3] Anton Antonov, ",
 ButtonBox["Epidemiology models Mathematica package",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling/blob/master/Projects/\
Coronavirus-propagation-dynamics/WL/EpidemiologyModels.m"], None},
  ButtonNote->
   "https://github.com/antononcube/SystemModeling/blob/master/Projects/\
Coronavirus-propagation-dynamics/WL/EpidemiologyModels.m"],
 ", (2020), ",
 ButtonBox["SystemModeling at GitHub/antononcube",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling"], None},
  ButtonNote->"https://github.com/antononcube/SystemModeling"],
 "."
}], "Text",
 CellChangeTimes->{{3.7925160899066896`*^9, 3.792516159421608*^9}, {
   3.7925187526504107`*^9, 3.7925188050487967`*^9}, {3.792782050096183*^9, 
   3.792782085248444*^9}, {3.792793007922522*^9, 3.7927930082592697`*^9}, {
   3.792850913255866*^9, 3.792850913660157*^9}, 3.795432399157723*^9, {
   3.812650174156063*^9, 3.8126501745721703`*^9}, {3.8185250554678097`*^9, 
   3.8185250577458897`*^9}, {3.818525310829311*^9, 
   3.8185253157456293`*^9}},ExpressionUUID->"3ffe5793-3e08-4bfa-9b3f-\
2f002a410315"],

Cell[TextData[{
 "[AAp4] Anton Antonov, ",
 ButtonBox["Epidemiology models modifications Mathematica package",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling/blob/master/Projects/\
Coronavirus-propagation-dynamics/WL/EpidemiologyModelModifications.m"], None},
  
  ButtonNote->
   "https://github.com/antononcube/SystemModeling/blob/master/Projects/\
Coronavirus-propagation-dynamics/WL/EpidemiologyModelModifications.m"],
 ", (2020), ",
 ButtonBox["SystemModeling at GitHub/antononcube",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling"], None},
  ButtonNote->"https://github.com/antononcube/SystemModeling"],
 "."
}], "Text",
 CellChangeTimes->{{3.7925160899066896`*^9, 3.792516159421608*^9}, {
   3.7925187526504107`*^9, 3.7925188050487967`*^9}, {3.792782050096183*^9, 
   3.792782085248444*^9}, {3.792782191837761*^9, 3.792782197033924*^9}, {
   3.792782233165003*^9, 3.7927822331669693`*^9}, {3.792793010217144*^9, 
   3.792793010914422*^9}, {3.7928509155729322`*^9, 3.7928509156292143`*^9}, 
   3.795432403275066*^9, {3.8126501768448677`*^9, 3.812650177069688*^9}, {
   3.8185250669599857`*^9, 3.818525070166469*^9}, {3.818525294719124*^9, 
   3.818525305542181*^9}},ExpressionUUID->"2d41b972-fbc8-4d90-8784-\
8b8fa7f63aa3"],

Cell[TextData[{
 "[AAp5] Anton Antonov, ",
 ButtonBox["Epidemiology modeling visualization functions Mathematica package",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling/blob/master/Projects/\
Coronavirus-propagation-dynamics/WL/\
EpidemiologyModelingVisualizationFunctions.m"], None},
  ButtonNote->
   "https://github.com/antononcube/SystemModeling/blob/master/Projects/\
Coronavirus-propagation-dynamics/WL/\
EpidemiologyModelingVisualizationFunctions.m"],
 ", (2020), ",
 ButtonBox["SystemModeling at GitHub/antononcube",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling"], None},
  ButtonNote->"https://github.com/antononcube/SystemModeling"],
 "."
}], "Text",
 CellChangeTimes->{{3.7925160899066896`*^9, 3.792516159421608*^9}, {
   3.7925187526504107`*^9, 3.7925188050487967`*^9}, {3.7928509175305853`*^9, 
   3.792850918205223*^9}, {3.7930250981159153`*^9, 3.793025108307509*^9}, {
   3.793025139244979*^9, 3.793025139245862*^9}, 3.795432407606688*^9, {
   3.812650178881226*^9, 3.812650179297246*^9}, {3.81852506196535*^9, 
   3.818525072888681*^9}, {3.818525290061715*^9, 
   3.818525292863082*^9}},ExpressionUUID->"c3948d4e-2ee8-4f25-89ba-\
9b1595197421"],

Cell[TextData[{
 "[AAp6] Anton Antonov, ",
 ButtonBox["System dynamics interactive interfaces functions Mathematica \
package",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling/blob/master/WL/\
SystemDynamicsInteractiveInterfacesFunctions.m"], None},
  ButtonNote->
   "https://github.com/antononcube/SystemModeling/blob/master/WL/\
SystemDynamicsInteractiveInterfacesFunctions.m"],
 ", (2020), ",
 ButtonBox["SystemModeling at GitHub/antononcube",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling"], None},
  ButtonNote->"https://github.com/antononcube/SystemModeling"],
 "."
}], "Text",
 CellChangeTimes->{{3.7925160899066896`*^9, 3.792516159421608*^9}, {
   3.7925187526504107`*^9, 3.7925188050487967`*^9}, {3.7928509175305853`*^9, 
   3.792850918205223*^9}, {3.7930250837820044`*^9, 3.793025084411715*^9}, 
   3.795432415076758*^9, {3.812650181007448*^9, 3.812650181502323*^9}, {
   3.8185250753525267`*^9, 3.81852510162204*^9}, {3.81852528145527*^9, 
   3.818525285123127*^9}},ExpressionUUID->"403140d2-12c9-48a4-82b3-\
59128fd2efa0"],

Cell[TextData[{
 "[AAp7] Anton Antonov, ",
 ButtonBox["Multi-site model simulation Mathematica package",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling/blob/master/Projects/\
Coronavirus-propagation-dynamics/WL/MultiSiteModelSimulation.m"], None},
  ButtonNote->
   "https://github.com/antononcube/SystemModeling/blob/master/Projects/\
Coronavirus-propagation-dynamics/WL/MultiSiteModelSimulation.m"],
 ", (2020), ",
 ButtonBox["SystemModeling at GitHub/antononcube",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling"], None},
  ButtonNote->"https://github.com/antononcube/SystemModeling"],
 "."
}], "Text",
 CellChangeTimes->{{3.795432105268566*^9, 3.7954321533070793`*^9}, {
  3.795432201784569*^9, 3.795432202188663*^9}, {3.7954324245245037`*^9, 
  3.795432427249887*^9}, {3.795432481703245*^9, 3.795432481704053*^9}, {
  3.795432690549654*^9, 3.795432708830625*^9}, {3.812650183347526*^9, 
  3.8126501838310833`*^9}, {3.818525076882552*^9, 3.8185250994055643`*^9}, {
  3.818525270205379*^9, 
  3.818525275335253*^9}},ExpressionUUID->"02cfcf9a-a548-4d2e-b77f-\
2aabcf591c3b"],

Cell[TextData[{
 "[AAp8] Anton Antonov, ",
 ButtonBox["Monadic Epidemiology Compartmental Modeling Mathematica package",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling/blob/master/Projects/\
Coronavirus-propagation-dynamics/WL/MonadicEpidemiologyCompartmentalModeling.\
m"], None},
  ButtonNote->
   "https://github.com/antononcube/SystemModeling/blob/master/Projects/\
Coronavirus-propagation-dynamics/WL/MonadicEpidemiologyCompartmentalModeling.\
m"],
 ", (2020), ",
 ButtonBox["SystemModeling at GitHub/antononcube",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling"], None},
  ButtonNote->"https://github.com/antononcube/SystemModeling"],
 "."
}], "Text",
 CellChangeTimes->{{3.795432105268566*^9, 3.7954321533070793`*^9}, {
   3.795432201784569*^9, 3.795432202188663*^9}, {3.7954324245245037`*^9, 
   3.795432427249887*^9}, {3.795432481703245*^9, 3.795432481704053*^9}, {
   3.795432663593813*^9, 3.7954326641780376`*^9}, {3.8126501863176327`*^9, 
   3.812650187846895*^9}, {3.8185250788624897`*^9, 3.818525097515388*^9}, 
   3.81852532974419*^9},ExpressionUUID->"9eb0fa0a-e84d-4083-bd78-\
e23e9d366419"],

Cell[TextData[{
 "[AAp9] Anton Antonov, ",
 ButtonBox["Hextile bins Mathematica package",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/MathematicaForPrediction/blob/master/\
Misc/HextileBins.m"], None},
  ButtonNote->
   "https://github.com/antononcube/MathematicaForPrediction/blob/master/Misc/\
HextileBins.m"],
 ", (2020), ",
 ButtonBox["MathematicaForPrediction at GitHub/antononcube",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/MathematicaForPrediction"], None},
  ButtonNote->"https://github.com/antononcube/MathematicaForPrediction"],
 "."
}], "Text",
 CellChangeTimes->{{3.805017731012597*^9, 3.805017739089644*^9}, {
  3.805017787150751*^9, 3.8050178562912607`*^9}, {3.812624583463006*^9, 
  3.812624598954413*^9}, {3.8126247916305323`*^9, 3.812624822821456*^9}, {
  3.812624861169696*^9, 3.812624911576262*^9}, {3.81265018942262*^9, 
  3.812650189703698*^9}, {3.8185250808649607`*^9, 3.81852509493933*^9}, {
  3.8185254660141487`*^9, 
  3.818525471358279*^9}},ExpressionUUID->"b1f69d9d-d417-4e8e-aab8-\
0a7990421ddb"],

Cell[TextData[{
 "[AAp10] Anton Antonov, ",
 ButtonBox["Monadic Epidemiology Compartmental Modeling Mathematica unit \
tests",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling/blob/master/Projects/\
Coronavirus-propagation-dynamics/WL/UnitTests/\
MonadicEpidemiologyCompartmentalModeling-Unit-Tests.mt"], None},
  ButtonNote->
   "https://github.com/antononcube/SystemModeling/blob/master/Projects/\
Coronavirus-propagation-dynamics/WL/UnitTests/\
MonadicEpidemiologyCompartmentalModeling-Unit-Tests.mt"],
 ", (2020), ",
 ButtonBox["SystemModeling at GitHub/antononcube",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling"], None},
  ButtonNote->"https://github.com/antononcube/SystemModeling"],
 "."
}], "Text",
 CellChangeTimes->{{3.818525234631691*^9, 3.818525262341234*^9}, 
   3.81852549313027*^9, {3.8185255345341454`*^9, 
   3.818525560256998*^9}},ExpressionUUID->"5707346e-beda-4025-b0b2-\
143270716b56"],

Cell[TextData[{
 "[AAp11] Anton Antonov, ",
 ButtonBox["Epidemiology Models NDSolve Mathematica unit tests",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling/blob/master/Projects/\
Coronavirus-propagation-dynamics/WL/UnitTests/EpidemiologyModels-NDSolve-Unit-\
Tests.m"], None},
  ButtonNote->
   "https://github.com/antononcube/SystemModeling/blob/master/Projects/\
Coronavirus-propagation-dynamics/WL/UnitTests/EpidemiologyModels-NDSolve-Unit-\
Tests.m"],
 ", (2020), ",
 ButtonBox["SystemModeling at GitHub/antononcube",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling"], None},
  ButtonNote->"https://github.com/antononcube/SystemModeling"],
 "."
}], "Text",
 CellChangeTimes->{{3.818525234631691*^9, 3.818525262341234*^9}, 
   3.81852549313027*^9, {3.8185255345341454`*^9, 3.818525560256998*^9}, {
   3.818525605550891*^9, 3.818525617891493*^9}, {3.8185259231748238`*^9, 
   3.818525938446123*^9}},ExpressionUUID->"00f85d6c-36d6-4b16-aea6-\
2f98a2885955"],

Cell[TextData[{
 "[AAp12] Anton Antonov, ",
 ButtonBox["Monadic contextual classification random pipelines Mathematica \
unit tests",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/MathematicaForPrediction/blob/master/\
UnitTests/MonadicContextualClassificationRandomPipelinesUnitTests.m"], None},
  ButtonNote->
   "https://github.com/antononcube/MathematicaForPrediction/blob/master/\
UnitTests/MonadicContextualClassificationRandomPipelinesUnitTests.m"],
 ", (2018), ",
 ButtonBox["MathematicaForPrediction at GitHub/antononcube",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/MathematicaForPrediction"], None},
  ButtonNote->"https://github.com/antononcube/MathematicaForPrediction"],
 StyleBox[".",
  FontSlant->"Italic"]
}], "Text",
 CellChangeTimes->{{3.8185258188866367`*^9, 3.818525870465358*^9}, {
  3.818527094602476*^9, 3.818527105817751*^9}, {3.818527153195488*^9, 
  3.818527167192812*^9}},ExpressionUUID->"5c8040ee-eebf-4997-ac78-\
9d0ed50369ee"],

Cell[TextData[{
 "[AAp13] Anton Antonov, ",
 ButtonBox["Epidemiology Modeling Workflows Raku package",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/Raku-DSL-English-\
EpidemiologyModelingWorkflows"], None},
  ButtonNote->
   "https://github.com/antononcube/Raku-DSL-English-\
EpidemiologyModelingWorkflows"],
 ", (2020), ",
 ButtonBox["Raku-DSL-English-EpidemiologyModelingWorkflows at \
GitHu/antononcube",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/Raku-DSL-English-\
EpidemiologyModelingWorkflows"], None},
  ButtonNote->
   "https://github.com/antononcube/Raku-DSL-English-\
EpidemiologyModelingWorkflows"],
 "."
}], "Text",
 CellChangeTimes->{{3.805017731012597*^9, 3.805017739089644*^9}, {
  3.805017787150751*^9, 3.8050178562912607`*^9}, {3.812624576296597*^9, 
  3.812624576735342*^9}, {3.812650191155106*^9, 3.812650191671157*^9}, {
  3.8185250832162027`*^9, 3.818525092947864*^9}, {3.8185253382124023`*^9, 
  3.81852536925189*^9}, {3.818525603111651*^9, 3.81852560327813*^9}, {
  3.818525808661147*^9, 
  3.818525808907318*^9}},ExpressionUUID->"6e08c5d9-3c0c-465f-abc6-\
31541e66dc93"],

Cell[TextData[{
 "[AAp14] Anton Antonov, ",
 ButtonBox["External Parsers Hookup Mathematica package",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/ConversationalAgents/blob/master/\
Packages/WL/ExternalParsersHookup.m"], None},
  ButtonNote->
   "https://github.com/antononcube/ConversationalAgents/blob/master/Packages/\
WL/ExternalParsersHookup.m"],
 ", (2019), ",
 ButtonBox["ConversationalAgents at GitHub",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/ConversationalAgents"], None},
  ButtonNote->"https://github.com/antononcube/ConversationalAgents"],
 "."
}], "Text",
 CellChangeTimes->{{3.805018097543715*^9, 3.805018107140379*^9}, {
  3.805018151668891*^9, 3.805018219800078*^9}, {3.812624579356738*^9, 
  3.812624579975415*^9}, {3.812650194046459*^9, 3.812650194687517*^9}, {
  3.818525086051629*^9, 3.818525091125553*^9}, {3.8185256081151533`*^9, 
  3.8185256085212383`*^9}, {3.818525810933215*^9, 
  3.818525811101935*^9}},ExpressionUUID->"563e3c74-4cb3-4b5b-b6f1-\
78fa5d7def2b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Export", "Section",
 CellChangeTimes->{{3.7925802491878033`*^9, 
  3.7925802500430098`*^9}},ExpressionUUID->"ecc68028-8527-4957-bdb4-\
26ba3be97773"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], "*)"}]], "Input",
 CellChangeTimes->{{3.787869226097657*^9, 3.787869234619795*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"4189484b-a559-4f30-ba3c-53387b81590a"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Needs", "[", "\"\<M2MD`\>\"", "]"}], "*)"}]], "Input",
 CellChangeTimes->{{3.787867887165537*^9, 3.787867895537777*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"a61c4f91-a068-4583-9a38-2af7c3689886"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Options", "[", "MDExport", "]"}], "*)"}]], "Input",
 CellChangeTimes->{{3.787868342135927*^9, 3.7878683424727993`*^9}, {
  3.787868381320599*^9, 3.787868385784712*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"2affac11-0bbd-4066-903f-08d7477b4481"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"fileName", "=", 
   RowBox[{"StringReplace", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"FileNameSplit", "[", 
       RowBox[{"NotebookFileName", "[", "]"}], "]"}], "\[LeftDoubleBracket]", 
      
      RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<.nb\>\"", "~~", "EndOfString"}], "->", "\"\<.md\>\""}], 
      "}"}]}], "]"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.7878678839976263`*^9, 3.787867955368351*^9}, {
  3.787868011346472*^9, 3.787868014427517*^9}, {3.7878683619937572`*^9, 
  3.787868363704116*^9}, {3.787868405577346*^9, 3.787868428816819*^9}, {
  3.788089833569029*^9, 3.788089847412901*^9}, {3.788089930604616*^9, 
  3.788089947949142*^9}, {3.788090081610413*^9, 3.78809008426838*^9}, {
  3.788882474036006*^9, 3.78888247943267*^9}, {3.788882566803999*^9, 
  3.788882599856888*^9}},
 CellLabel->"In[66]:=",ExpressionUUID->"72671e9d-0659-419f-96ec-31edde3e3b61"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"SeedRandom", "[", "2323", "]"}], "*)"}]], "Input",
 CellChangeTimes->{{3.788254866605153*^9, 3.788254869010036*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"b1605828-a647-4521-ba2c-2c8ffee35a84"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Options", "[", "MDExport", "]"}], "*)"}]], "Input",
 CellChangeTimes->{{3.788882741025703*^9, 3.788882744623519*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"ab1ae3ff-31a9-41a4-b775-f5a26dc09407"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"MDExport", "[", 
   RowBox[{"fileName", ",", 
    RowBox[{"EvaluationNotebook", "[", "]"}]}], "]"}], "*)"}]], "Input",
 CellChangeTimes->{{3.7878678839976263`*^9, 3.787867955368351*^9}, {
  3.787868011346472*^9, 3.787868014427517*^9}, {3.7878683619937572`*^9, 
  3.787868363704116*^9}, {3.787868405577346*^9, 3.787868428816819*^9}, {
  3.788089833569029*^9, 3.788089847412901*^9}, {3.788089930604616*^9, 
  3.788089947949142*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"63b9e599-1f67-4d73-b3a2-ebfb3a5196c2"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"SystemOpen", "[", "fileName", "]"}], "*)"}]], "Input",
 CellChangeTimes->{{3.787869278940383*^9, 3.787869291906027*^9}, {
  3.788089915805559*^9, 3.788089918167675*^9}, {3.788089952687037*^9, 
  3.788089956262328*^9}, {3.7888826137631397`*^9, 3.788882614749709*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"dadd1a91-509d-4460-b3aa-e3bf1c2de059"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1720, 1283},
WindowMargins->{{840, Automatic}, {Automatic, 5}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
PrintingOptions->{"PaperOrientation"->"Landscape",
"PaperSize"->{1191, 842}},
TaggingRules->{"TryRealOnly" -> False},
FrontEndVersion->"12.2 for Mac OS X x86 (64-bit) (December 12, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"46f49637-4c43-41f7-96a0-9a3908d6bd8e"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 385, 6, 98, "Title",ExpressionUUID->"af369d77-dae9-4fbf-9427-a685b45eda56"],
Cell[968, 30, 256, 4, 53, "Subtitle",ExpressionUUID->"d9006083-bcef-4a22-9f93-e629a76d409d"],
Cell[1227, 36, 1980, 35, 196, "Text",ExpressionUUID->"3c49a53c-a8b1-4eef-b46e-c2f24dfcd5ef"],
Cell[CellGroupData[{
Cell[3232, 75, 157, 3, 67, "Section",ExpressionUUID->"883232dc-0ffd-4c64-b93c-9e773cf82b42"],
Cell[3392, 80, 1121, 18, 58, "Text",ExpressionUUID->"9400e87f-e6de-4e31-a54d-daa2143a34f1"],
Cell[4516, 100, 2911, 73, 58, "Text",ExpressionUUID->"b4a27732-a6b4-4341-842e-e52ea84c8780"],
Cell[7430, 175, 850, 14, 35, "Text",ExpressionUUID->"d1d3cd68-7daa-41ad-a69e-b54978ca99a8"],
Cell[8283, 191, 646, 12, 58, "Text",ExpressionUUID->"f18464ab-8b42-427d-bf9e-587b76ae6b73"],
Cell[8932, 205, 1188, 24, 35, "Text",ExpressionUUID->"072c2e87-260c-4f94-b058-1f73ca79f20c"],
Cell[10123, 231, 263, 6, 35, "Text",ExpressionUUID->"f3c509ac-9fea-4945-adc4-4e2256790b12"],
Cell[10389, 239, 4860, 139, 123, "Output",ExpressionUUID->"5ffd297b-c580-420c-b625-07e48a1df709"],
Cell[CellGroupData[{
Cell[15274, 382, 36859, 982, 433, "Echo",ExpressionUUID->"1d469473-00ce-4995-88c3-ae6c460a1191"],
Cell[52136, 1366, 123814, 2157, 227, "Echo",ExpressionUUID->"2c6801ef-95bd-4dab-a272-2b694855c93c"]
}, Open  ]],
Cell[175965, 3526, 1473, 34, 35, "Text",ExpressionUUID->"68882bab-a060-4715-809f-3e921c67db4a"],
Cell[177441, 3562, 636, 12, 35, "Text",ExpressionUUID->"4ab2c854-407f-4827-95d6-aaeff0aa7477"],
Cell[CellGroupData[{
Cell[178102, 3578, 170, 3, 54, "Subsection",ExpressionUUID->"554f3e86-9dfe-43b7-83a2-b3c5ace6a3bc"],
Cell[178275, 3583, 183, 3, 35, "Text",ExpressionUUID->"4f0d2bfa-dda6-426c-9d8e-10a18dad5c4e"],
Cell[CellGroupData[{
Cell[178483, 3590, 281, 7, 32, "Item",ExpressionUUID->"ef438370-6988-44c3-8bab-559fd41708e0"],
Cell[178767, 3599, 595, 15, 27, "Subitem",ExpressionUUID->"d9346809-bac9-4630-a06d-c4715a78f7e2"]
}, Open  ]],
Cell[179377, 3617, 316, 7, 32, "Item",ExpressionUUID->"e1295bd2-bcd2-4268-80ce-255a7d3ec0ff"],
Cell[179696, 3626, 433, 8, 32, "Item",ExpressionUUID->"f1bdd753-551d-41e5-aa96-53d98853e731"],
Cell[CellGroupData[{
Cell[180154, 3638, 665, 12, 32, "Item",ExpressionUUID->"e6b5c1dd-277b-4ddc-8bbe-0fbb1bd2b38f"],
Cell[180822, 3652, 297, 5, 27, "Subitem",ExpressionUUID->"98ebc521-b86a-4b3f-b709-eb44f10d737d"]
}, Open  ]],
Cell[181134, 3660, 379, 8, 32, "Item",ExpressionUUID->"9c200058-a278-41be-8e29-e1a344dc8913"],
Cell[181516, 3670, 538, 10, 32, "Item",ExpressionUUID->"9694638b-6d06-4dff-89d7-ca650a97af83"],
Cell[CellGroupData[{
Cell[182079, 3684, 318, 6, 32, "Item",ExpressionUUID->"8ab22e9e-37af-4e4d-a7b3-9725df47e95d"],
Cell[182400, 3692, 679, 16, 27, "Subitem",ExpressionUUID->"62be7fef-bff8-450a-aa12-3e48a9093677"]
}, Open  ]],
Cell[183094, 3711, 737, 14, 58, "Text",ExpressionUUID->"68568255-9703-421a-8583-9fc56dea8682"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[183880, 3731, 208, 4, 67, "Section",ExpressionUUID->"52cb8993-18e7-4dfb-94ab-2271f325f00e"],
Cell[184091, 3737, 246, 4, 35, "Text",ExpressionUUID->"bfc181e2-f1fa-47e7-8cfe-c63531c5e1e4"],
Cell[184340, 3743, 1239, 24, 110, "Input",ExpressionUUID->"525764b1-85d0-48df-a574-194edad25542",
 InitializationCell->True],
Cell[185582, 3769, 269, 7, 35, "Text",ExpressionUUID->"23065431-e025-4d3a-b2f9-41c45e30725f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[185888, 3781, 321, 6, 67, "Section",ExpressionUUID->"e6ceee29-15ed-4c5b-b235-9f07d378ac85",
 InitializationCell->True],
Cell[186212, 3789, 432, 9, 35, "Text",ExpressionUUID->"7b824154-40f2-4ddb-afcf-bf24c8d88573"],
Cell[CellGroupData[{
Cell[186669, 3802, 184, 4, 54, "Subsection",ExpressionUUID->"255713c0-9b32-4898-91bb-d471a788d43b",
 InitializationCell->True],
Cell[186856, 3808, 480, 10, 89, "Input",ExpressionUUID->"431f3e10-6d57-4be7-a969-94b0a56ee644",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[187373, 3823, 162, 3, 54, "Subsection",ExpressionUUID->"5a5bbec8-f130-40e4-a4c9-21b67b3b6603"],
Cell[187538, 3828, 292, 6, 46, "Input",ExpressionUUID->"46b57ffe-02d3-4300-85d3-ced4871b827d",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[187867, 3839, 191, 4, 54, "Subsection",ExpressionUUID->"fe7e6dc4-cace-4b28-a88b-d4b2bea97b11",
 InitializationCell->True],
Cell[188061, 3845, 311, 7, 35, "Text",ExpressionUUID->"39edff18-1f22-4458-813b-295aaabbeb0d"],
Cell[188375, 3854, 1424, 43, 89, "Input",ExpressionUUID->"a9488a51-0b19-4590-a630-7f75556b131e",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[189836, 3902, 168, 3, 54, "Subsection",ExpressionUUID->"97a06a27-19be-4bd0-821d-44bf6f4d983a"],
Cell[190007, 3907, 878, 19, 37, "Text",ExpressionUUID->"72baae20-e68b-45d0-b00d-317cdd700d4a"],
Cell[190888, 3928, 1210, 27, 52, "Input",ExpressionUUID->"206a0545-b62a-46f7-959b-383ce0c3d35c"],
Cell[192101, 3957, 248, 6, 35, "Text",ExpressionUUID->"2a85e64e-de56-4e6e-9224-88ae407eef38"],
Cell[192352, 3965, 1018, 28, 35, "Text",ExpressionUUID->"c40980ca-1ea8-4c1b-a86f-08b35eeeed5f"],
Cell[193373, 3995, 707, 11, 30, "Input",ExpressionUUID->"7d1dd36a-5948-4abd-898b-52d4dc16d3db"],
Cell[194083, 4008, 365, 9, 35, "Text",ExpressionUUID->"bfa944f9-b7b6-439a-98fa-617b7667d8e7"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[194497, 4023, 214, 4, 67, "Section",ExpressionUUID->"2584298c-2d54-4b6d-aad5-1dab4618af19"],
Cell[CellGroupData[{
Cell[194736, 4031, 259, 4, 54, "Subsection",ExpressionUUID->"08bce7b8-64d4-47df-b61b-f335b114db43"],
Cell[194998, 4037, 567, 10, 58, "Text",ExpressionUUID->"1882f01d-7092-4928-ac9e-ef97ac945d05"],
Cell[195568, 4049, 263, 6, 35, "Text",ExpressionUUID->"0b5fc117-dbc6-4a92-aac1-4d283078c224"],
Cell[195834, 4057, 368, 6, 30, "Input",ExpressionUUID->"e55b75c2-41b4-4a02-b0b4-4708aa02a7f4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[196239, 4068, 168, 3, 54, "Subsection",ExpressionUUID->"5f61af7d-6330-4c59-b10b-ceb2ebf5f082"],
Cell[196410, 4073, 537, 11, 35, "Text",ExpressionUUID->"4ca1dc6a-19b7-44ec-88c2-d0414472aeb3"],
Cell[196950, 4086, 482, 11, 32, "ItemNumbered",ExpressionUUID->"071dd2cb-98fe-4bf9-8c15-c52915cdf4ab"],
Cell[197435, 4099, 451, 10, 32, "ItemNumbered",ExpressionUUID->"570315bf-b3b7-4e55-93b6-cd0bb247f63e"],
Cell[197889, 4111, 316, 6, 32, "ItemNumbered",ExpressionUUID->"d8cbd32e-afd7-436a-9784-09e686be94e8"],
Cell[198208, 4119, 337, 7, 32, "ItemNumbered",ExpressionUUID->"2d7b1a69-ae15-42fb-8405-b28f6e8e182e"],
Cell[198548, 4128, 326, 6, 32, "ItemNumbered",ExpressionUUID->"ce8f0f53-c950-47c1-8023-475fa9008776"]
}, Open  ]],
Cell[CellGroupData[{
Cell[198911, 4139, 158, 3, 54, "Subsection",ExpressionUUID->"4ebcc109-6504-445a-ba58-6923b368082f"],
Cell[199072, 4144, 455, 10, 35, "Text",ExpressionUUID->"198996b8-b013-4c68-bb7d-53decd5960e5"],
Cell[199530, 4156, 516, 11, 30, "Input",ExpressionUUID->"249ecf2e-2ce4-4483-b602-e697a36621f1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[200083, 4172, 171, 3, 54, "Subsection",ExpressionUUID->"c0860446-5ffa-4f56-895d-f296e7cd3d86"],
Cell[200257, 4177, 423, 8, 32, "Item",ExpressionUUID->"f65d15eb-c5e5-449f-9d59-f541dd62a219"],
Cell[CellGroupData[{
Cell[200705, 4189, 200, 3, 32, "Item",ExpressionUUID->"339ff0c9-fb10-43dd-84a7-b54aa723e4ff"],
Cell[200908, 4194, 255, 4, 27, "Subitem",ExpressionUUID->"caf82b29-6fea-4652-88fb-fc8f2c953c9f"]
}, Open  ]],
Cell[201178, 4201, 326, 7, 32, "Item",ExpressionUUID->"86dc2cbf-e8d0-43c6-9c7c-778b297caf03"],
Cell[201507, 4210, 297, 7, 32, "Item",ExpressionUUID->"9427f308-b0aa-4f29-ae52-a13c2140df59"],
Cell[201807, 4219, 332, 7, 32, "Item",ExpressionUUID->"841dfe04-d090-4692-a3b0-dd686b41a8c2"],
Cell[202142, 4228, 239, 4, 32, "Item",ExpressionUUID->"3c7e372a-b6ca-41a2-bf15-68ba260770b9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[202418, 4237, 222, 4, 54, "Subsection",ExpressionUUID->"60724f82-2b6f-4e54-b5bc-c1e0f893a2d4"],
Cell[202643, 4243, 225, 4, 32, "ItemNumbered",ExpressionUUID->"563fa1a3-3d0e-4488-8357-84ff1d193032"],
Cell[202871, 4249, 234, 4, 32, "ItemNumbered",ExpressionUUID->"9564fbc2-7e9e-4a07-8ccd-6b6a3acbb6a9"],
Cell[203108, 4255, 221, 4, 32, "ItemNumbered",ExpressionUUID->"22d1b18c-b239-4f11-85e9-e885afb1a7ea"],
Cell[203332, 4261, 210, 4, 32, "ItemNumbered",ExpressionUUID->"9caa96c6-2422-4ac2-86f3-9455fdc6ef4b"],
Cell[203545, 4267, 214, 4, 32, "ItemNumbered",ExpressionUUID->"4dd33bec-8864-4041-a5fd-362e165ad9a9"],
Cell[203762, 4273, 316, 5, 32, "ItemNumbered",ExpressionUUID->"5a98fe73-c873-45ff-895a-6535fe25e749"],
Cell[CellGroupData[{
Cell[204103, 4282, 317, 5, 32, "ItemNumbered",ExpressionUUID->"74e946fe-c537-4c8b-84c1-2a2b6d718f7c"],
Cell[204423, 4289, 333, 5, 26, "SubitemNumbered",ExpressionUUID->"7e51d722-a8f8-4a31-ac82-dc63b7fb1a3d"],
Cell[204759, 4296, 452, 7, 26, "SubitemNumbered",ExpressionUUID->"bcd11357-3a19-4d62-bb32-1920cec574d8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[205248, 4308, 342, 5, 32, "ItemNumbered",ExpressionUUID->"26681679-a238-474d-bd90-7a0c104d447f"],
Cell[205593, 4315, 368, 5, 26, "SubitemNumbered",ExpressionUUID->"9cf95739-3e80-4031-a7d9-7ac9f743900e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[205998, 4325, 347, 5, 32, "ItemNumbered",ExpressionUUID->"f62362c5-f014-46a2-b34a-0382bd810024"],
Cell[206348, 4332, 329, 5, 26, "SubitemNumbered",ExpressionUUID->"ccd58768-5e1c-46ee-b5ae-3ecb833868d5"]
}, Open  ]],
Cell[206692, 4340, 314, 5, 32, "ItemNumbered",ExpressionUUID->"a1dbeb2f-f4e5-45a6-ae0b-7980e6308818"]
}, Open  ]],
Cell[CellGroupData[{
Cell[207043, 4350, 226, 4, 54, "Subsection",ExpressionUUID->"d448cbef-ec2f-47ba-af52-84237e933496"],
Cell[207272, 4356, 177, 3, 32, "ItemNumbered",ExpressionUUID->"291485bc-4495-4930-9db5-273ea584a7ec"],
Cell[207452, 4361, 239, 4, 32, "ItemNumbered",ExpressionUUID->"75b09c51-de28-4e19-a03e-d3136bbe0861"],
Cell[CellGroupData[{
Cell[207716, 4369, 204, 3, 32, "ItemNumbered",ExpressionUUID->"34f02e43-3933-45c3-b8b1-317c3454a193"],
Cell[207923, 4374, 467, 8, 26, "SubitemNumbered",ExpressionUUID->"3a9dc633-3ac3-4e16-a3a9-a0df2069f419"],
Cell[208393, 4384, 340, 6, 26, "SubitemNumbered",ExpressionUUID->"36d025d4-660f-4632-9757-f78f21113f5c"],
Cell[CellGroupData[{
Cell[208758, 4394, 346, 5, 26, "SubitemNumbered",ExpressionUUID->"6737417f-68dc-4504-87c9-82a46267fc2a"],
Cell[209107, 4401, 318, 5, 25, "SubsubitemNumbered",ExpressionUUID->"bf9b4bfd-33d6-4c59-8e54-753f812ab382"],
Cell[209428, 4408, 430, 8, 25, "SubsubitemNumbered",ExpressionUUID->"f77d57a1-5812-4441-9a2b-e82165825e75"],
Cell[209861, 4418, 380, 5, 25, "SubsubitemNumbered",ExpressionUUID->"7fb45433-04b7-49ad-b583-91585ac0608d"],
Cell[210244, 4425, 472, 8, 25, "SubsubitemNumbered",ExpressionUUID->"d98f482a-b40a-4059-a4a3-d13d1f59955c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[210765, 4439, 375, 8, 32, "ItemNumbered",ExpressionUUID->"ca15af0c-a817-4147-8b4f-b2907b2d3dfc"],
Cell[211143, 4449, 446, 8, 26, "SubitemNumbered",ExpressionUUID->"d50be05c-5896-4dc1-8d18-e16de8fb6406"],
Cell[CellGroupData[{
Cell[211614, 4461, 371, 8, 26, "SubitemNumbered",ExpressionUUID->"e9f9f5f1-a393-4a00-a335-b0295182a240"],
Cell[211988, 4471, 363, 5, 25, "SubsubitemNumbered",ExpressionUUID->"7ee7fd67-2d00-49d5-bf9a-347861aef8a8"]
}, Open  ]]
}, Open  ]],
Cell[212378, 4480, 284, 6, 32, "ItemNumbered",ExpressionUUID->"e427fd51-3f1f-44f5-95b1-4d63812c4aa0"],
Cell[212665, 4488, 240, 4, 32, "ItemNumbered",ExpressionUUID->"c37eb527-113b-47b8-91db-fa3225818fd9"],
Cell[212908, 4494, 212, 4, 32, "ItemNumbered",ExpressionUUID->"b80c5629-caa4-43b0-8d75-5a8530733be6"],
Cell[213123, 4500, 234, 4, 32, "ItemNumbered",ExpressionUUID->"22e73442-8067-4cec-8261-3f1f21d1615d"],
Cell[213360, 4506, 388, 6, 32, "ItemNumbered",ExpressionUUID->"af8c99a6-ddfc-4fdd-894b-a039806b3cb0"],
Cell[213751, 4514, 369, 6, 32, "ItemNumbered",ExpressionUUID->"d81602f2-4b8a-464c-93f1-4b88dfefbb30"],
Cell[214123, 4522, 412, 6, 32, "ItemNumbered",ExpressionUUID->"e98ebb03-e165-4f98-8aba-9dca3b331576"],
Cell[214538, 4530, 411, 6, 32, "ItemNumbered",ExpressionUUID->"983bd96b-d12a-4dbb-83b4-06105b37fc8a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[214998, 4542, 163, 3, 67, "Section",ExpressionUUID->"cf3ba30f-cdd2-4de9-9071-229c278df21f"],
Cell[215164, 4547, 453, 9, 35, "Text",ExpressionUUID->"97bf9e24-1e68-4fc8-b7f5-0d258bb24d2b"],
Cell[215620, 4558, 370, 6, 30, "Input",ExpressionUUID->"786884fd-b2e5-4011-96ea-88207553ac01"],
Cell[CellGroupData[{
Cell[216015, 4568, 255, 4, 54, "Subsection",ExpressionUUID->"51d30c49-507d-48b7-91ae-eadf2bce7f92"],
Cell[216273, 4574, 297, 7, 35, "Text",ExpressionUUID->"e3008776-528e-4720-91d4-62326953f3a7"],
Cell[216573, 4583, 300, 8, 35, "Text",ExpressionUUID->"daffa402-48c8-451b-be1c-67dab813f95a"],
Cell[216876, 4593, 298, 4, 35, "Text",ExpressionUUID->"0dd21276-83e2-4eb0-ad9b-6e6c7bcc7f87"],
Cell[CellGroupData[{
Cell[217199, 4601, 344, 5, 45, "Subsubsection",ExpressionUUID->"04dd5743-a3c3-4a08-b29f-12c42f373597"],
Cell[217546, 4608, 1271, 20, 127, "Text",ExpressionUUID->"7abb1b37-a896-49e1-8ce4-b51c700027b4"],
Cell[218820, 4630, 314, 8, 35, "Text",ExpressionUUID->"e1fdf9f7-249a-4537-bb9e-c8e76eb0b72e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[219171, 4643, 160, 3, 45, "Subsubsection",ExpressionUUID->"5a9788c5-7c06-41fa-8b65-e58bbf9115b4"],
Cell[219334, 4648, 404, 8, 35, "Text",ExpressionUUID->"c63e17b8-e6c9-44ad-9cd3-fb1a27a6e897"],
Cell[219741, 4658, 613, 14, 30, "Input",ExpressionUUID->"dbe3f2c9-77f1-4923-a8d8-49088630a8fa"],
Cell[220357, 4674, 698, 12, 35, "Text",ExpressionUUID->"da50b50d-88b9-4356-90c3-eba674e6c933"],
Cell[221058, 4688, 442, 8, 35, "Text",ExpressionUUID->"05e4b5ce-f509-4fca-bc1d-6a8a1025fac5"],
Cell[221503, 4698, 719, 19, 35, "Text",ExpressionUUID->"3d66e081-69dd-4531-900a-9418a43d7f92"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[222283, 4724, 323, 5, 67, "Section",ExpressionUUID->"7c3669e8-7b0f-4081-b65a-daa86b6409de"],
Cell[222609, 4731, 703, 13, 35, "Text",ExpressionUUID->"4f9d7bc2-f421-4997-b397-85fdec978ef5"],
Cell[CellGroupData[{
Cell[223337, 4748, 241, 4, 54, "Subsection",ExpressionUUID->"9f518ab1-a5cf-4a29-a7c3-24c5fc7960d5"],
Cell[223581, 4754, 219, 4, 35, "Text",ExpressionUUID->"147d58af-ad41-4dda-900f-f17da34ec301"],
Cell[223803, 4760, 229, 4, 32, "ItemNumbered",ExpressionUUID->"8c21bc67-98c6-4ad2-bec3-1dd3523b1149"],
Cell[CellGroupData[{
Cell[224057, 4768, 351, 5, 32, "ItemNumbered",ExpressionUUID->"568954ea-c022-4335-b30b-890278f84d03"],
Cell[224411, 4775, 336, 5, 26, "SubitemNumbered",ExpressionUUID->"0c24b711-9288-4389-b93f-70c6c12e3bc1"],
Cell[224750, 4782, 323, 5, 26, "SubitemNumbered",ExpressionUUID->"7a403de2-505b-4954-b4bf-262c0af43663"]
}, Open  ]],
Cell[CellGroupData[{
Cell[225110, 4792, 363, 7, 32, "ItemNumbered",ExpressionUUID->"3e3b63d2-fd7e-4165-9294-64fd521b8642"],
Cell[225476, 4801, 386, 7, 26, "SubitemNumbered",ExpressionUUID->"28481567-0d40-40ce-9539-7f9ade453844"]
}, Open  ]],
Cell[225877, 4811, 340, 5, 32, "ItemNumbered",ExpressionUUID->"aa336c3f-fa70-425b-8ca9-0c7a2e7ba2f9"],
Cell[CellGroupData[{
Cell[226242, 4820, 370, 6, 32, "ItemNumbered",ExpressionUUID->"6aeb1495-71f6-44c1-8ea4-783988517ae9"],
Cell[226615, 4828, 427, 8, 26, "SubitemNumbered",ExpressionUUID->"733fbf89-4832-46aa-9a62-7be5f3cc6233"],
Cell[227045, 4838, 342, 5, 26, "SubitemNumbered",ExpressionUUID->"ea142e61-3026-41b6-aa01-215d5196b605"],
Cell[227390, 4845, 336, 5, 26, "SubitemNumbered",ExpressionUUID->"37c638af-3f56-4a3d-b456-50ae266d318b"]
}, Open  ]],
Cell[227741, 4853, 400, 9, 35, "Text",ExpressionUUID->"567a0227-a66d-4fec-be61-ef2e51194ba5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[228178, 4867, 307, 5, 54, "Subsection",ExpressionUUID->"12f4d74c-0f68-486d-9d88-2fca7ac0a6d5"],
Cell[228488, 4874, 221, 5, 35, "Text",ExpressionUUID->"a1f57b0c-62be-41b4-8395-b7ac693392ff"],
Cell[228712, 4881, 372, 6, 35, "Text",ExpressionUUID->"982f9816-3875-48b4-8053-4de3882705ca"],
Cell[229087, 4889, 618, 13, 30, "Input",ExpressionUUID->"f09cdba5-8e5e-428a-8cca-3faf79bd69a4"],
Cell[229708, 4904, 235, 4, 35, "Text",ExpressionUUID->"024b1c9e-06f4-4652-b418-872b64436825"],
Cell[229946, 4910, 1742, 39, 325, "Input",ExpressionUUID->"60c4190d-a281-4609-bd51-cdcc0a705fac"],
Cell[231691, 4951, 431, 6, 35, "Text",ExpressionUUID->"9f83a89c-3838-401d-8d20-b500272c9ab9"],
Cell[232125, 4959, 965, 19, 115, "Input",ExpressionUUID->"f00412c0-f166-4ad3-bb64-0336e74a1dfe"],
Cell[233093, 4980, 213, 5, 35, "Text",ExpressionUUID->"62e12166-e273-4c3b-97d9-478ff9990df2"],
Cell[233309, 4987, 3631, 105, 128, "Output",ExpressionUUID->"854af7cb-d113-422e-a056-4cb06d64764f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[236977, 5097, 276, 4, 54, "Subsection",ExpressionUUID->"30878f18-20d5-45dd-bcf2-ac95830af34a"],
Cell[237256, 5103, 267, 6, 35, "Text",ExpressionUUID->"1472ff44-ab4d-40e6-b1e0-34375c7e5b75"],
Cell[237526, 5111, 406, 8, 35, "Text",ExpressionUUID->"eb56676c-065c-40b1-8d9b-9e303d109939"],
Cell[237935, 5121, 1658, 41, 136, "Input",ExpressionUUID->"bab88daf-2d85-4128-b7c8-752e18de16fa"],
Cell[239596, 5164, 336, 7, 35, "Text",ExpressionUUID->"7de08736-93ef-4eda-9590-fbec47e7f282"],
Cell[239935, 5173, 1733, 33, 157, "Input",ExpressionUUID->"dccd56cd-e75f-48fd-997a-7203157abcb3"],
Cell[241671, 5208, 274, 6, 35, "Text",ExpressionUUID->"e34d2713-3181-4a97-b3fc-c851b68d24c6"],
Cell[241948, 5216, 3161, 79, 136, "Input",ExpressionUUID->"c9fcb382-63d9-4868-ad53-ed63f9384612"],
Cell[245112, 5297, 455, 13, 35, "Text",ExpressionUUID->"85bbcfd3-ada7-4c4c-9de4-e550a5dfaca0"],
Cell[245570, 5312, 335, 7, 35, "Text",ExpressionUUID->"52290058-62ad-4f92-8005-fff0fa29ba8b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[245954, 5325, 224, 4, 67, "Section",ExpressionUUID->"68a09501-d11d-4b29-a215-cd1fd35a9163"],
Cell[246181, 5331, 256, 6, 35, "Text",ExpressionUUID->"2e086db0-3d20-4801-b6d6-99f176422fc0"],
Cell[CellGroupData[{
Cell[246462, 5341, 162, 3, 54, "Subsection",ExpressionUUID->"0a2cf5d8-632b-4efc-9e0a-5884c76603dc"],
Cell[246627, 5346, 349, 7, 35, "Text",ExpressionUUID->"97b3210d-1208-49d4-81b6-aeeaa3aa4891"],
Cell[246979, 5355, 189, 3, 32, "ItemNumbered",ExpressionUUID->"15f4bcfe-7f5a-45c7-8666-7848c2ce11df"],
Cell[247171, 5360, 188, 3, 32, "ItemNumbered",ExpressionUUID->"9c098f65-ac22-4084-94a9-19169ce9952c"],
Cell[247362, 5365, 168, 3, 32, "ItemNumbered",ExpressionUUID->"5de5859c-0b75-471b-b0d2-f00d37fcb4cf"],
Cell[CellGroupData[{
Cell[247555, 5372, 225, 4, 32, "ItemNumbered",ExpressionUUID->"a354db2a-b7e0-43bf-b1bf-c02fac83058c"],
Cell[247783, 5378, 259, 4, 26, "SubitemNumbered",ExpressionUUID->"7c277540-59ef-4551-b8cf-fe14c80540ab"]
}, Open  ]],
Cell[248057, 5385, 283, 6, 32, "ItemNumbered",ExpressionUUID->"c01e49e5-8a53-4df8-8163-a25080f85f33"],
Cell[CellGroupData[{
Cell[248365, 5395, 327, 6, 32, "ItemNumbered",ExpressionUUID->"2480f295-c42d-4f95-b567-6679dc53696b"],
Cell[248695, 5403, 257, 4, 26, "SubitemNumbered",ExpressionUUID->"e3abc047-150b-414a-b8db-e82fa70d4dcc"],
Cell[248955, 5409, 263, 4, 26, "SubitemNumbered",ExpressionUUID->"0211c2f5-10f1-43bd-984b-4b3dbcad8b46"],
Cell[249221, 5415, 215, 4, 26, "SubitemNumbered",ExpressionUUID->"d82f38de-a442-4c76-a45f-2dd97d7482f2"],
Cell[249439, 5421, 214, 4, 26, "SubitemNumbered",ExpressionUUID->"0f7d68be-3a45-40d1-9099-089bf07dddde"],
Cell[249656, 5427, 264, 4, 26, "SubitemNumbered",ExpressionUUID->"61410567-5f07-4302-8e27-c6c153d9ec60"]
}, Open  ]],
Cell[CellGroupData[{
Cell[249957, 5436, 276, 4, 32, "ItemNumbered",ExpressionUUID->"5ce91927-5ece-48e4-8373-a74687e692fc"],
Cell[250236, 5442, 297, 4, 26, "SubitemNumbered",ExpressionUUID->"44a5c661-73af-4ca7-9e5b-f79a5cc9e545"],
Cell[250536, 5448, 277, 4, 26, "SubitemNumbered",ExpressionUUID->"237da822-ba56-4a98-bc20-58a70535d273"]
}, Open  ]],
Cell[250828, 5455, 297, 4, 32, "ItemNumbered",ExpressionUUID->"09447109-86fb-4363-a840-afe0c191179f"],
Cell[251128, 5461, 307, 5, 32, "ItemNumbered",ExpressionUUID->"7ac8b200-cc0a-4671-9ea6-783257101d89"],
Cell[251438, 5468, 292, 4, 32, "ItemNumbered",ExpressionUUID->"05e098a8-d682-40b3-8138-b92ad3b7e2e4"],
Cell[251733, 5474, 303, 4, 32, "ItemNumbered",ExpressionUUID->"df1a8403-3381-4380-aae9-b31d7a4735d9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[252073, 5483, 272, 4, 54, "Subsection",ExpressionUUID->"c5ef8e0f-4c4c-4931-98ab-a3ffd1acda98"],
Cell[252348, 5489, 233, 4, 35, "Text",ExpressionUUID->"908932d6-130d-4bfb-9bb1-ef91a8550d11"],
Cell[252584, 5495, 590, 12, 30, "Input",ExpressionUUID->"73a60e81-a8a1-489d-a74b-e4d2abd7f728"],
Cell[253177, 5509, 462, 9, 35, "Text",ExpressionUUID->"47dd18d4-9b96-4977-923d-51d65a82275d"],
Cell[253642, 5520, 11527, 236, 934, "Input",ExpressionUUID->"80c2f63c-6595-41d4-a71a-f5f6317b37fa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[265206, 5761, 225, 4, 54, "Subsection",ExpressionUUID->"99316e43-2797-48c8-91ee-b7314b861120"],
Cell[265434, 5767, 500, 12, 35, "Text",ExpressionUUID->"c83d2944-73c7-4d51-91b1-70a20bff91e2"],
Cell[265937, 5781, 460, 7, 30, "Input",ExpressionUUID->"1220e1b8-9f22-4970-99c8-d55b40b77eb7"],
Cell[266400, 5790, 512, 15, 35, "Text",ExpressionUUID->"aba1d04f-a5bc-4b02-a00e-12b03c21e3f2"],
Cell[266915, 5807, 411, 9, 30, "Input",ExpressionUUID->"b028b815-25fc-446e-84b7-78791b2b52ce"],
Cell[267329, 5818, 223, 5, 35, "Text",ExpressionUUID->"cd4da9af-d067-40e8-8b47-5d49a01cac7e"],
Cell[267555, 5825, 266, 5, 30, "Input",ExpressionUUID->"35c66530-094e-42fe-901e-aa51c70472cc"],
Cell[267824, 5832, 277, 8, 35, "Text",ExpressionUUID->"f3c59db9-38e8-4d82-b260-b520ffe29d35"],
Cell[268104, 5842, 743, 17, 30, "Input",ExpressionUUID->"8e458392-9c3a-427c-8621-cb71a31ff33d"],
Cell[268850, 5861, 296, 7, 35, "Text",ExpressionUUID->"f2762580-8fdc-47c5-9707-6a5abd451c64"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[269195, 5874, 262, 4, 67, "Section",ExpressionUUID->"04e091f7-51e1-4b17-a9ba-5781bb89bc09"],
Cell[269460, 5880, 452, 8, 35, "Text",ExpressionUUID->"fca0a70d-4360-4033-8269-d88c1c1f580a"],
Cell[CellGroupData[{
Cell[269937, 5892, 163, 3, 54, "Subsection",ExpressionUUID->"13836ec9-8292-49a8-8d9f-a072e96ac9af"],
Cell[270103, 5897, 2049, 59, 35, "Text",ExpressionUUID->"541b2293-c04b-447b-afe1-1a029ab72459",
 InitializationCell->True],
Cell[272155, 5958, 3052, 93, 58, "Text",ExpressionUUID->"d7b407cc-0017-45f7-9fb7-bf6218d7a8b5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[275244, 6056, 155, 3, 54, "Subsection",ExpressionUUID->"aeda5d96-7eaa-4677-90d1-7a0e73ac66ff"],
Cell[CellGroupData[{
Cell[275424, 6063, 200, 3, 32, "Item",ExpressionUUID->"a306cf01-63a9-4166-959f-13c300d03cd2"],
Cell[275627, 6068, 276, 7, 27, "Subitem",ExpressionUUID->"eacb42e7-de59-4721-b953-11e76a2009b4"],
Cell[275906, 6077, 279, 7, 27, "Subitem",ExpressionUUID->"f770152c-60ff-4437-a3a3-d94e3421fcee"],
Cell[276188, 6086, 304, 8, 27, "Subitem",ExpressionUUID->"4595252a-a4c8-4848-be8c-144724246862"]
}, Open  ]],
Cell[CellGroupData[{
Cell[276529, 6099, 183, 3, 32, "Item",ExpressionUUID->"8a71f38a-ddbe-41b7-ac92-709a5157c697"],
Cell[276715, 6104, 189, 3, 27, "Subitem",ExpressionUUID->"7c2e46c6-cc17-4077-b9b5-e86487bad694"],
Cell[276907, 6109, 189, 3, 27, "Subitem",ExpressionUUID->"09de8a79-2799-4158-8f18-4b4f35952a5c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[277145, 6118, 153, 3, 54, "Subsection",ExpressionUUID->"fe6f120b-8c99-490d-96ce-be0974480af8"],
Cell[277301, 6123, 236, 6, 35, "Text",ExpressionUUID->"26415c2d-5fa2-4e3c-99bb-6cdfe69a53e7"],
Cell[277540, 6131, 445, 8, 35, "Text",ExpressionUUID->"e99eef95-d5ba-4303-91fd-abbeaa75ec20"],
Cell[277988, 6141, 301, 7, 35, "Text",ExpressionUUID->"9abffa20-4200-4fbc-88c5-760c238bb457"],
Cell[278292, 6150, 210, 4, 32, "ItemNumbered",ExpressionUUID->"5faee4f3-a9d8-41bd-975e-a5fe471f7036"],
Cell[278505, 6156, 197, 3, 32, "ItemNumbered",ExpressionUUID->"92414ada-101f-495a-9618-015d09183043"],
Cell[278705, 6161, 210, 4, 32, "ItemNumbered",ExpressionUUID->"138d96bc-94fa-4b95-a4cf-c2e389b43b24"],
Cell[CellGroupData[{
Cell[278940, 6169, 227, 5, 32, "ItemNumbered",ExpressionUUID->"d2934e27-ef43-4ccc-8af5-e5f34f53963c"],
Cell[279170, 6176, 172, 3, 26, "SubitemNumbered",ExpressionUUID->"d462eba0-89ac-42f2-a27c-05876c6a8c3f"],
Cell[279345, 6181, 181, 3, 26, "SubitemNumbered",ExpressionUUID->"60c19440-cf97-4ad8-916b-132562004060"],
Cell[279529, 6186, 188, 3, 26, "SubitemNumbered",ExpressionUUID->"756f0a28-6aa1-45fb-8bc7-44a10ed7931b"],
Cell[279720, 6191, 244, 4, 26, "SubitemNumbered",ExpressionUUID->"c7c8ae3e-5fc8-44e9-be64-b9a1d048eb4b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[280001, 6200, 457, 9, 32, "ItemNumbered",ExpressionUUID->"a80f167a-1714-4f18-9556-274c98416be4"],
Cell[280461, 6211, 369, 6, 26, "SubitemNumbered",ExpressionUUID->"7ba1f8fd-298e-474e-b22a-8e00e3691c99"]
}, Open  ]],
Cell[280845, 6220, 444, 9, 32, "ItemNumbered",ExpressionUUID->"07b9d1ae-ed4f-491f-87a3-e020c034ede2"],
Cell[281292, 6231, 403, 7, 32, "ItemNumbered",ExpressionUUID->"a0eb238e-1e3b-43f0-b18d-6ced5b92b7c2"],
Cell[281698, 6240, 337, 7, 35, "Text",ExpressionUUID->"e14da21b-0291-4db4-86c2-a5902cf601ee"]
}, Open  ]],
Cell[CellGroupData[{
Cell[282072, 6252, 229, 4, 54, "Subsection",ExpressionUUID->"65fd8080-970c-490a-b1b4-a49f86a7713e"],
Cell[282304, 6258, 282, 6, 35, "Text",ExpressionUUID->"d7affcd6-fff9-40dc-a253-848d1d4e373c"],
Cell[282589, 6266, 517, 9, 32, "Item",ExpressionUUID->"abc50f7a-582f-4cf7-ad40-81a42e9c075f"],
Cell[283109, 6277, 515, 9, 32, "Item",ExpressionUUID->"19b188bb-a318-47e1-80c0-8a7ba85da6cd"],
Cell[283627, 6288, 585, 10, 32, "Item",ExpressionUUID->"44553251-da3e-487c-be24-8bc650b12811"],
Cell[284215, 6300, 535, 10, 32, "Item",ExpressionUUID->"184939b4-5286-4379-a938-f3e2c2e8d6bb"],
Cell[284753, 6312, 597, 11, 32, "Item",ExpressionUUID->"bb0b1818-ca18-4600-8bd8-a8b51aaafbe1"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[285399, 6329, 224, 4, 67, "Section",ExpressionUUID->"3ba0a6e6-fd92-48ce-bcaa-59ac8d454711"],
Cell[285626, 6335, 287, 7, 35, "Text",ExpressionUUID->"c3c42747-aac4-41bf-9120-061a53acf672"],
Cell[285916, 6344, 243, 5, 35, "Text",ExpressionUUID->"f191cf8a-16d0-4f67-8992-26ff1a824609"],
Cell[286162, 6351, 260, 6, 35, "Text",ExpressionUUID->"cec06c2a-595e-4093-9be2-41d198a07adb"],
Cell[286425, 6359, 171, 3, 32, "ItemNumbered",ExpressionUUID->"75ab2eaa-973e-463d-8b36-77add7945c1c"],
Cell[CellGroupData[{
Cell[286621, 6366, 220, 5, 32, "ItemNumbered",ExpressionUUID->"f170e498-a687-455c-bf85-2119379147c0"],
Cell[286844, 6373, 204, 3, 26, "SubitemNumbered",ExpressionUUID->"429580b2-6bf7-4c1e-b2b8-791689f1eefd"],
Cell[287051, 6378, 216, 4, 26, "SubitemNumbered",ExpressionUUID->"228f2ac8-b26a-4d7b-8e31-8ac80b66f27f"]
}, Open  ]],
Cell[287282, 6385, 365, 8, 32, "ItemNumbered",ExpressionUUID->"5d089da3-87b6-4c8d-85ad-a06d91a5917e"],
Cell[CellGroupData[{
Cell[287672, 6397, 184, 3, 54, "Subsection",ExpressionUUID->"c533d743-9e08-4142-9142-2be0b37523f6"],
Cell[287859, 6402, 175, 3, 35, "Text",ExpressionUUID->"18cdcd7c-b4b0-432b-86a6-6585753a3957"],
Cell[288037, 6407, 1509, 28, 94, "Input",ExpressionUUID->"d59cfec5-9920-4851-b885-77328464825d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[289583, 6440, 198, 3, 54, "Subsection",ExpressionUUID->"a7f29d04-ee95-4d2e-aa32-7fee37e5b12f"],
Cell[CellGroupData[{
Cell[289806, 6447, 166, 3, 45, "Subsubsection",ExpressionUUID->"8223a3bb-c07e-443e-b62f-e9455d1b0f1b"],
Cell[289975, 6452, 261, 6, 35, "Text",ExpressionUUID->"b6fe2988-d35e-4cdd-a9a8-e1bd609a1a5e"],
Cell[290239, 6460, 2670, 52, 94, "Input",ExpressionUUID->"74f89f9e-6ae7-49a9-91a1-df4e3686a307"],
Cell[292912, 6514, 420, 11, 35, "Text",ExpressionUUID->"3a99efec-c9d0-4881-b1e3-b028c14ef38e"],
Cell[293335, 6527, 176, 3, 35, "Text",ExpressionUUID->"4ae2cce5-cfb8-473b-a60a-50588077d4dc"],
Cell[293514, 6532, 273, 4, 30, "Input",ExpressionUUID->"a8cb9e59-8335-40e6-98f8-b830f4ae2eee"],
Cell[293790, 6538, 175, 3, 35, "Text",ExpressionUUID->"2bcaf647-c49a-407b-9e37-29d98baa2b81"],
Cell[293968, 6543, 643, 13, 30, "Input",ExpressionUUID->"5e14aa28-3688-4fa6-9712-61475b21bb2e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[294648, 6561, 167, 3, 45, "Subsubsection",ExpressionUUID->"3cbf3a25-99b1-4a84-93e3-a1e858a36c50"],
Cell[294818, 6566, 260, 6, 35, "Text",ExpressionUUID->"dd7fe209-a494-43cc-a6fa-baab03920c1d"],
Cell[295081, 6574, 2170, 40, 94, "Input",ExpressionUUID->"4780d9f7-0644-42c0-aa5a-193968488f21"],
Cell[297254, 6616, 176, 3, 35, "Text",ExpressionUUID->"5c0ec899-4713-46fa-8cc2-7352fa8eeb1e"],
Cell[297433, 6621, 329, 5, 30, "Input",ExpressionUUID->"49ecb97d-30a5-472b-b612-f12776d2db29"],
Cell[297765, 6628, 175, 3, 35, "Text",ExpressionUUID->"552c4343-bf3a-43c1-a1ae-145d6f401cb1"],
Cell[297943, 6633, 2915, 69, 115, "Input",ExpressionUUID->"f1faa401-fe3d-4ca2-9c54-7cb0c2e36a97"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[300907, 6708, 174, 3, 54, "Subsection",ExpressionUUID->"b5a93abc-20e9-4989-b364-024b0406b47e"],
Cell[301084, 6713, 359, 7, 35, "Text",ExpressionUUID->"ddbf3d20-1ae3-41cf-a6ea-675bc727bf42"],
Cell[301446, 6722, 1901, 33, 94, "Input",ExpressionUUID->"f06902f1-9c5e-42b5-a579-0dc326fd6e47"],
Cell[303350, 6757, 181, 3, 35, "Text",ExpressionUUID->"70c4d736-d568-47f0-8665-dd9d73ee6a5e"],
Cell[303534, 6762, 327, 5, 30, "Input",ExpressionUUID->"51375182-29fd-4c1f-b8e4-c73855f2f873"],
Cell[303864, 6769, 175, 3, 35, "Text",ExpressionUUID->"687eb43a-65bb-4c5d-8232-c3da110ae5eb"],
Cell[304042, 6774, 3061, 71, 115, "Input",ExpressionUUID->"de6b2a53-80b6-42e7-8160-a51c514107a2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[307140, 6850, 186, 3, 54, "Subsection",ExpressionUUID->"a5be6d5c-378b-450c-af78-f5fd6cf2d521"],
Cell[307329, 6855, 286, 6, 35, "Text",ExpressionUUID->"759ce16c-51d7-43b1-b16b-721f415aba62"],
Cell[307618, 6863, 339, 9, 35, "Text",ExpressionUUID->"3534685c-db95-4b76-97d0-1fd41eea8c62"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[308006, 6878, 259, 4, 67, "Section",ExpressionUUID->"1b684767-b366-4a71-923e-1d7aff9aab13"],
Cell[308268, 6884, 251, 6, 35, "Text",ExpressionUUID->"b20c4880-476e-4480-8424-52a30490b6d2"],
Cell[308522, 6892, 480, 10, 58, "Text",ExpressionUUID->"da65d4af-4eef-4ad9-a51d-401b23313849"],
Cell[CellGroupData[{
Cell[309027, 6906, 165, 3, 54, "Subsection",ExpressionUUID->"8e93e695-5742-4c03-a710-7d57615397c1"],
Cell[309195, 6911, 231, 6, 35, "Text",ExpressionUUID->"c55481f5-ccd1-474e-a622-a828d219fd76"],
Cell[309429, 6919, 264, 5, 32, "ItemNumbered",ExpressionUUID->"c7fc0647-6879-4a08-8391-eb48c7aa6aad"],
Cell[309696, 6926, 229, 4, 32, "ItemNumbered",ExpressionUUID->"27eaf73c-476b-4469-abcf-95361432af03"],
Cell[CellGroupData[{
Cell[309950, 6934, 353, 7, 32, "ItemNumbered",ExpressionUUID->"b586e0b1-672e-403e-8572-82d064a73082"],
Cell[310306, 6943, 404, 8, 26, "SubitemNumbered",ExpressionUUID->"734e71c4-0555-4d52-80cf-1e37e5895a99"],
Cell[310713, 6953, 500, 9, 26, "SubitemNumbered",ExpressionUUID->"1dbb9694-cf22-41d5-bed6-970e4a15a461"]
}, Open  ]],
Cell[311228, 6965, 279, 6, 32, "ItemNumbered",ExpressionUUID->"f30191d1-4547-4ec3-8608-41007ddc2af9"],
Cell[311510, 6973, 339, 7, 32, "ItemNumbered",ExpressionUUID->"e9066985-0770-49f6-a523-a398af2f03c6"],
Cell[311852, 6982, 267, 4, 32, "ItemNumbered",ExpressionUUID->"cc91335e-dbbb-4f9a-8172-bdc75bff6937"],
Cell[CellGroupData[{
Cell[312144, 6990, 367, 7, 32, "ItemNumbered",ExpressionUUID->"f8224897-e0e0-40d7-b2cd-fb02a05b098a"],
Cell[312514, 6999, 328, 5, 26, "SubitemNumbered",ExpressionUUID->"4d22a736-5036-4c42-821b-5e543c61446c"]
}, Open  ]],
Cell[312857, 7007, 431, 8, 32, "ItemNumbered",ExpressionUUID->"a74ce6e8-1326-48b8-bdae-9f9cb1f80190"],
Cell[313291, 7017, 357, 9, 35, "Text",ExpressionUUID->"cb0af7aa-2cbb-41ef-8cdb-3880da231598"],
Cell[313651, 7028, 313, 8, 35, "Text",ExpressionUUID->"32ea23ac-cfda-4bb5-90e5-b970c6a2c119"]
}, Open  ]],
Cell[CellGroupData[{
Cell[314001, 7041, 167, 3, 54, "Subsection",ExpressionUUID->"e5c728cc-2099-4cb3-aded-bebd4f42f578"],
Cell[314171, 7046, 306, 7, 35, "Text",ExpressionUUID->"682ff718-0862-47c0-8ae0-af1a19f8f9e3"],
Cell[314480, 7055, 5960, 86, 367, "Input",ExpressionUUID->"39d15c68-6c8b-41c4-974d-54c55339d7ab"],
Cell[320443, 7143, 5448, 76, 304, "Input",ExpressionUUID->"c58577e0-640e-4753-ad4a-1e05bc896aaa"],
Cell[325894, 7221, 259, 7, 35, "Text",ExpressionUUID->"5e756875-9545-426d-a4c1-d1f8a2fd0f8b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[326190, 7233, 169, 3, 54, "Subsection",ExpressionUUID->"eddca158-5d88-40e3-b94c-7c72603376a6"],
Cell[326362, 7238, 253, 4, 35, "Text",ExpressionUUID->"dac89f09-57b9-4374-b2c0-ba3661d379f2"],
Cell[326618, 7244, 632, 15, 30, "Input",ExpressionUUID->"92df50b2-0804-4dba-a57b-ee54407e4066"],
Cell[327253, 7261, 365, 9, 35, "Text",ExpressionUUID->"950d1c27-3c2f-478d-be78-9b167cce1b25"],
Cell[327621, 7272, 174, 3, 35, "Text",ExpressionUUID->"5fe240b5-fcb6-4802-9d6a-4d6a0d9fafdd"],
Cell[327798, 7277, 419, 7, 30, "Input",ExpressionUUID->"28f49f24-dd9a-4238-be24-82a86ce8b823"],
Cell[328220, 7286, 390, 8, 35, "Text",ExpressionUUID->"402dc058-3f54-464b-8db8-9440a329c1cd"],
Cell[328613, 7296, 342, 9, 30, "Input",ExpressionUUID->"9c9e907b-fd8f-4240-b6ca-f535f0637934"]
}, Open  ]],
Cell[CellGroupData[{
Cell[328992, 7310, 162, 3, 54, "Subsection",ExpressionUUID->"a226f9fd-f365-4fdc-bba2-0930a09ca32d"],
Cell[329157, 7315, 393, 9, 30, "Input",ExpressionUUID->"f82b52e5-792b-48d7-abb8-68cf989f0a4b"],
Cell[329553, 7326, 226, 5, 35, "Text",ExpressionUUID->"f7c8d111-2f05-40b8-8c50-c5933411fa4b"],
Cell[329782, 7333, 2990, 45, 30, "Input",ExpressionUUID->"83551bf4-d9df-4b5a-9195-e7b4c48c97cc"],
Cell[332775, 7380, 192, 3, 35, "Text",ExpressionUUID->"9d75501a-894e-4d9d-8ebf-1cb7824bf76e"],
Cell[332970, 7385, 2653, 64, 283, "Input",ExpressionUUID->"a784ea8d-718c-40de-8c05-6941f6deb1e4"],
Cell[335626, 7451, 592, 18, 35, "Text",ExpressionUUID->"5c9f5d2e-c63b-48aa-bb91-826e962d5e4a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[336255, 7474, 161, 3, 54, "Subsection",ExpressionUUID->"a5118dd2-aee9-41ed-850d-016967236eae"],
Cell[336419, 7479, 199, 3, 35, "Text",ExpressionUUID->"93a957ea-8b01-40d4-bf3b-1bd7b02c05dc"],
Cell[336621, 7484, 352, 7, 30, "Input",ExpressionUUID->"d6bca065-7fdb-4861-be18-488f16d000c8"],
Cell[336976, 7493, 289, 7, 35, "Text",ExpressionUUID->"075a4216-d4f9-49bb-b575-bc19e30ae9fd"],
Cell[337268, 7502, 5756, 108, 325, "Input",ExpressionUUID->"1ea9d9a0-38bf-48d1-ba7d-0326076dca90"],
Cell[343027, 7612, 176, 3, 35, "Text",ExpressionUUID->"7c5b64fb-301e-41de-96cf-f7114a3334ea"],
Cell[343206, 7617, 366, 7, 30, "Input",ExpressionUUID->"51fe3b51-8254-43fa-a9e8-195323986385"],
Cell[CellGroupData[{
Cell[343597, 7628, 260, 5, 45, "Subsubsection",ExpressionUUID->"3ba93ca4-68dd-4740-888c-a7edda9fc71d"],
Cell[343860, 7635, 678, 14, 58, "Text",ExpressionUUID->"5328643f-7ced-4a24-aa23-fe412c783195"],
Cell[344541, 7651, 582, 13, 58, "Text",ExpressionUUID->"a7fd77eb-f93b-4350-b768-752c60065162"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[345172, 7670, 170, 3, 54, "Subsection",ExpressionUUID->"a18a3eb5-6e8b-4075-aaac-4128c8c0edfd"],
Cell[345345, 7675, 191, 3, 35, "Text",ExpressionUUID->"d8a6e62b-3436-461e-914f-f8bacd024f52"],
Cell[345539, 7680, 391, 9, 30, "Input",ExpressionUUID->"6d3fbcf1-c240-45a8-a8ab-c9e71c2d8949"],
Cell[345933, 7691, 275, 6, 35, "Text",ExpressionUUID->"89351162-bdb2-4064-b2a3-61c2045ca57d"],
Cell[346211, 7699, 2311, 46, 157, "Input",ExpressionUUID->"8da7c428-a611-4210-b8fd-6e896a28c14a"],
Cell[348525, 7747, 172, 3, 35, "Text",ExpressionUUID->"916fe32a-f6af-454f-8c1e-9f1592fa2438"],
Cell[348700, 7752, 586, 11, 30, "Input",ExpressionUUID->"52ee6e22-94a0-4a6b-ae54-7a7808868532"],
Cell[349289, 7765, 183, 3, 35, "Text",ExpressionUUID->"377ef70f-b65e-49c7-b62a-c16a892a2ad2"],
Cell[349475, 7770, 1228, 25, 30, "Input",ExpressionUUID->"bfad30f4-6763-4509-b63b-321160311515"]
}, Open  ]],
Cell[CellGroupData[{
Cell[350740, 7800, 188, 3, 54, "Subsection",ExpressionUUID->"661d7feb-9f5e-4162-8cff-fd6f659e9d88"],
Cell[350931, 7805, 443, 8, 35, "Text",ExpressionUUID->"93087b09-e311-4427-ac90-b6146bf17012"],
Cell[351377, 7815, 167, 3, 35, "Text",ExpressionUUID->"c6699010-0e2b-4a5f-bc64-5cdb0e813aa2"],
Cell[351547, 7820, 185, 3, 32, "Item",ExpressionUUID->"f50ceeee-325b-49ff-b8ab-a2f41594e5fa"],
Cell[351735, 7825, 215, 5, 32, "Item",ExpressionUUID->"567c61cd-3aa0-4145-92e1-e18a94acb283"],
Cell[351953, 7832, 200, 3, 32, "Item",ExpressionUUID->"7a1b1395-6f55-45ba-865f-59fbc9309914"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[352202, 7841, 159, 3, 67, "Section",ExpressionUUID->"e2071760-c24f-4876-9570-425df2b73818"],
Cell[352364, 7846, 494, 10, 35, "Text",ExpressionUUID->"2c077c96-e0bf-4603-9760-3e8d7fd89576"],
Cell[352861, 7858, 500, 9, 35, "Text",ExpressionUUID->"eb5167f8-d9a8-41c0-a88e-5fa61cd7ad4d"],
Cell[353364, 7869, 183, 3, 54, "Subsection",ExpressionUUID->"ea7881cb-a9c0-4d55-b801-002c8cf27dc2"],
Cell[353550, 7874, 175, 3, 38, "Subsection",ExpressionUUID->"29f560c9-de92-403d-9597-508e54dfb7a6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[353762, 7882, 157, 3, 67, "Section",ExpressionUUID->"07e9adb1-b33e-40ff-a175-377798af7f2b"],
Cell[353922, 7887, 258, 6, 35, "Text",ExpressionUUID->"5b327aae-5143-4b30-b464-f7321f5c15a2"],
Cell[CellGroupData[{
Cell[354205, 7897, 234, 4, 54, "Subsection",ExpressionUUID->"ca376063-761d-4102-b215-fd48c6135a26"],
Cell[354442, 7903, 548, 10, 35, "Text",ExpressionUUID->"ecb22a71-12ca-4091-8c6e-1cfa421e7353"],
Cell[354993, 7915, 464, 8, 32, "Item",ExpressionUUID->"7d56eab5-b832-46ad-a0db-d7cda59a8633"],
Cell[355460, 7925, 558, 10, 32, "Item",ExpressionUUID->"f7d48520-0eb0-4ab3-8b74-b2302230dd56"],
Cell[356021, 7937, 583, 10, 32, "Item",ExpressionUUID->"a9e5d6b0-fd23-49c8-a930-f326b1ae4890"],
Cell[356607, 7949, 557, 10, 32, "Item",ExpressionUUID->"6ecba391-2949-4c2a-a31a-77a9c94ae572"],
Cell[357167, 7961, 493, 7, 32, "Item",ExpressionUUID->"8f1b6500-2114-4c27-862b-5594b064a913"],
Cell[357663, 7970, 515, 9, 32, "Item",ExpressionUUID->"1ec90964-6e66-4873-b32c-4dbb3f9c3080"],
Cell[358181, 7981, 1175, 29, 35, "Text",ExpressionUUID->"795fac9b-795a-4f81-b440-182715e9eae5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[359393, 8015, 207, 3, 54, "Subsection",ExpressionUUID->"e62a4130-7155-4e02-888c-e5ed63c4e495"],
Cell[359603, 8020, 921, 22, 35, "Text",ExpressionUUID->"3bd040c7-7e17-414d-8a73-1c703d0ae229"]
}, Open  ]],
Cell[CellGroupData[{
Cell[360561, 8047, 221, 5, 54, "Subsection",ExpressionUUID->"be892f12-aab8-44f1-a82b-1ee4c4c30a5e"],
Cell[360785, 8054, 760, 20, 58, "Text",ExpressionUUID->"5dd34ecd-500b-49ce-9986-7e000f605afa"],
Cell[361548, 8076, 478, 10, 35, "Text",ExpressionUUID->"27f51efc-04ab-4857-b670-22a5610aaa1b"],
Cell[362029, 8088, 565, 10, 35, "Text",ExpressionUUID->"3b9354f1-dd3b-407c-959c-93c73de622f1"],
Cell[362597, 8100, 230, 5, 35, "Text",ExpressionUUID->"48579555-fca3-4a94-bb37-9d811acdbc75"]
}, Open  ]],
Cell[CellGroupData[{
Cell[362864, 8110, 187, 3, 54, "Subsection",ExpressionUUID->"1b17ac72-82b6-4a87-b8c7-6b7c098a5376"],
Cell[363054, 8115, 306, 7, 35, "Text",ExpressionUUID->"815364d4-d3e7-46db-b319-005c686c7208"],
Cell[363363, 8124, 328, 7, 35, "Text",ExpressionUUID->"5fb0acb4-8f71-4239-8cfb-1587dc4caccc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[363728, 8136, 218, 4, 54, "Subsection",ExpressionUUID->"d93afca6-f81d-4711-a700-a4a7b9d3b0e3"],
Cell[363949, 8142, 406, 8, 35, "Text",ExpressionUUID->"05162e3d-45ef-4216-9d57-2b8245b9b239"],
Cell[364358, 8152, 220, 5, 35, "Text",ExpressionUUID->"e610e1cc-8c26-42e7-862d-3ad03968d1bd"],
Cell[364581, 8159, 1405, 22, 241, "Input",ExpressionUUID->"018e98fb-8422-4308-9405-329894d5b49c"],
Cell[365989, 8183, 217, 5, 35, "Text",ExpressionUUID->"a7ca4328-35f8-4105-88fe-1a49618789d9"],
Cell[366209, 8190, 483, 8, 30, "Input",ExpressionUUID->"58acbfa1-bd01-4a85-956b-c5345b658f02"],
Cell[366695, 8200, 182, 3, 35, "Text",ExpressionUUID->"daa75ffc-f0ad-4f22-9ee0-c24c4fcf45a5"],
Cell[366880, 8205, 633, 14, 30, "Input",ExpressionUUID->"daae76e6-ac31-48e4-a291-c6db132f40b6"],
Cell[CellGroupData[{
Cell[367538, 8223, 177, 3, 45, "Subsubsection",ExpressionUUID->"1c09e056-b293-4954-be45-c908e53350e5"],
Cell[367718, 8228, 310, 7, 35, "Text",ExpressionUUID->"a9892f57-a43b-4a8e-9a61-82b5f77d43d2"],
Cell[368031, 8237, 331, 6, 30, "Input",ExpressionUUID->"697763f6-3ab9-4645-bac4-2bbb4f719bac"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[368423, 8250, 155, 3, 67, "Section",ExpressionUUID->"c0d6d2af-65f1-40ef-8707-9645deca026f"],
Cell[CellGroupData[{
Cell[368603, 8257, 158, 3, 54, "Subsection",ExpressionUUID->"e47ff3ac-6c5e-45b8-b850-59cbf485d49a"],
Cell[368764, 8262, 561, 14, 35, "Text",ExpressionUUID->"4d42199a-814d-492f-a7f2-02f137b2b322"],
Cell[369328, 8278, 560, 14, 35, "Text",ExpressionUUID->"713603dc-4cac-40a5-9f06-dadc76df4695"],
Cell[369891, 8294, 465, 12, 35, "Text",ExpressionUUID->"db7f8ad6-2890-4b15-bcdf-733d43f7cea8"],
Cell[370359, 8308, 736, 16, 35, "Text",ExpressionUUID->"c2aef62b-dfd5-4cc3-ae63-ec8938758a24"],
Cell[371098, 8326, 320, 7, 35, "Text",ExpressionUUID->"4771597b-cd7c-4198-8f90-9a416293e736"],
Cell[371421, 8335, 628, 15, 35, "Text",ExpressionUUID->"7f75590e-6686-4647-898f-7c2cb011b89b"],
Cell[372052, 8352, 1463, 29, 35, "Text",ExpressionUUID->"809feb64-1028-4fff-af90-988263acdce2"],
Cell[373518, 8383, 1024, 24, 35, "Text",ExpressionUUID->"e70bbcdd-dbf6-45a0-b636-a3a46e55cbb1"],
Cell[374545, 8409, 1065, 25, 35, "Text",ExpressionUUID->"1ffdc8e6-e941-452b-8535-85b31b24bd56"],
Cell[375613, 8436, 1059, 24, 35, "Text",ExpressionUUID->"f71f9e02-a75a-4fe1-a070-0089ff679413"],
Cell[376675, 8462, 1028, 24, 35, "Text",ExpressionUUID->"e5de2654-9e69-4879-bb06-ed3674be7919"],
Cell[377706, 8488, 1041, 24, 35, "Text",ExpressionUUID->"c06cc9da-8cd5-41bd-bab1-235ec1c3151a"],
Cell[378750, 8514, 1216, 27, 35, "Text",ExpressionUUID->"96710e6b-b7a7-45b2-87bd-090b89fff93c"],
Cell[379969, 8543, 1245, 26, 35, "Text",ExpressionUUID->"cf2d8ae2-301f-457e-ac66-b35e2a1b23ec"],
Cell[381217, 8571, 916, 23, 35, "Text",ExpressionUUID->"f4553b30-982a-4cb2-aed8-f15733155331"],
Cell[382136, 8596, 881, 22, 35, "Text",ExpressionUUID->"416d1323-0077-4001-93a6-b0f3c05b6055"],
Cell[383020, 8620, 951, 23, 35, "Text",ExpressionUUID->"1c010036-af5f-4418-b70d-37ed96c3818b"],
Cell[383974, 8645, 855, 21, 35, "Text",ExpressionUUID->"ebe6b336-343f-4197-a1b6-5ba5d918846b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[384866, 8671, 225, 4, 54, "Subsection",ExpressionUUID->"3e32ab85-01e1-4e5f-9636-755157cf0f22"],
Cell[385094, 8677, 819, 21, 35, "Text",ExpressionUUID->"61e14905-c550-4e4d-a9ef-eb2ed499dcdb"],
Cell[385916, 8700, 759, 21, 35, "Text",ExpressionUUID->"0dae8ad8-a296-4e19-805f-3706ed558206"],
Cell[386678, 8723, 478, 12, 35, "Text",ExpressionUUID->"c653e0a1-c063-4fa7-bbbd-8f8d10d5173f"],
Cell[387159, 8737, 1009, 23, 35, "Text",ExpressionUUID->"db613a2b-4dd9-4a54-81fb-50728e29427a"],
Cell[388171, 8762, 726, 18, 35, "Text",ExpressionUUID->"5e36df52-a8c6-41bd-963b-358b5d9fd408"],
Cell[388900, 8782, 1229, 26, 35, "Text",ExpressionUUID->"d490c4f6-48d3-46ac-812a-25fe94c367a0"],
Cell[390132, 8810, 1251, 27, 35, "Text",ExpressionUUID->"c1fee6c3-bcf4-43b1-b60c-19ac0d71ae7a"],
Cell[391386, 8839, 1192, 25, 35, "Text",ExpressionUUID->"3ffe5793-3e08-4bfa-9b3f-2f002a410315"],
Cell[392581, 8866, 1329, 27, 35, "Text",ExpressionUUID->"2d41b972-fbc8-4d90-8784-8b8fa7f63aa3"],
Cell[393913, 8895, 1263, 27, 35, "Text",ExpressionUUID->"c3948d4e-2ee8-4f25-89ba-9b1595197421"],
Cell[395179, 8924, 1135, 25, 35, "Text",ExpressionUUID->"403140d2-12c9-48a4-82b3-59128fd2efa0"],
Cell[396317, 8951, 1176, 25, 35, "Text",ExpressionUUID->"02cfcf9a-a548-4d2e-b77f-2aabcf591c3b"],
Cell[397496, 8978, 1207, 26, 35, "Text",ExpressionUUID->"9eb0fa0a-e84d-4083-bd78-e23e9d366419"],
Cell[398706, 9006, 1103, 25, 35, "Text",ExpressionUUID->"b1f69d9d-d417-4e8e-aab8-0a7990421ddb"],
Cell[399812, 9033, 1007, 24, 35, "Text",ExpressionUUID->"5707346e-beda-4025-b0b2-143270716b56"],
Cell[400822, 9059, 1057, 24, 35, "Text",ExpressionUUID->"00f85d6c-36d6-4b16-aea6-2f98a2885955"],
Cell[401882, 9085, 1032, 23, 35, "Text",ExpressionUUID->"5c8040ee-eebf-4997-ac78-9d0ed50369ee"],
Cell[402917, 9110, 1171, 29, 35, "Text",ExpressionUUID->"6e08c5d9-3c0c-465f-abc6-31541e66dc93"],
Cell[404091, 9141, 1066, 24, 35, "Text",ExpressionUUID->"563e3c74-4cb3-4b5b-b6f1-78fa5d7def2b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[405206, 9171, 155, 3, 67, "Section",ExpressionUUID->"ecc68028-8527-4957-bdb4-26ba3be97773"],
Cell[405364, 9176, 275, 5, 30, "Input",ExpressionUUID->"4189484b-a559-4f30-ba3c-53387b81590a"],
Cell[405642, 9183, 240, 4, 30, "Input",ExpressionUUID->"a61c4f91-a068-4583-9a38-2af7c3689886"],
Cell[405885, 9189, 288, 5, 30, "Input",ExpressionUUID->"2affac11-0bbd-4066-903f-08d7477b4481"],
Cell[406176, 9196, 986, 21, 30, "Input",ExpressionUUID->"72671e9d-0659-419f-96ec-31edde3e3b61"],
Cell[407165, 9219, 236, 4, 30, "Input",ExpressionUUID->"b1605828-a647-4521-ba2c-2c8ffee35a84"],
Cell[407404, 9225, 237, 4, 30, "Input",ExpressionUUID->"ab1ae3ff-31a9-41a4-b775-f5a26dc09407"],
Cell[407644, 9231, 550, 10, 30, "Input",ExpressionUUID->"63b9e599-1f67-4d73-b3a2-ebfb3a5196c2"],
Cell[408197, 9243, 386, 6, 30, "Input",ExpressionUUID->"dadd1a91-509d-4460-b3aa-e3bf1c2de059"]
}, Open  ]]
}, Open  ]]
}
]
*)

